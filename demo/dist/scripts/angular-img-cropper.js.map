{"version":3,"sources":["../bower_components/angular-img-cropper-redcastor/dist/angular-img-cropper.js"],"names":["angular","$","mod","module","factory","__extends","d","b","__","this","constructor","p","hasOwnProperty","prototype","directive","$document","$window","ImageCropper","scope","imgSrc","imgDst","cropWidth","cropHeight","keepAspect","sourceAspect","touchRadius","cropAreaBounds","minWidth","minHeight","enforceCropAspect","enforceFileType","color","colorDrag","colorBg","colorCropBg","restrict","link","element","attrs","setup","newValue","oldValue","crop","width","height","oldImage","srcImage","canvas","data","setImage","fileType","load","imageObj","Image","undefined","cors","crossOrigin","addEventListener","$apply","src","imageData","destroyed","$on","$watch","control","internalControl","elem","elemental","document","querySelector","ev","createEvent","initEvent","dispatchEvent","$timeout","image","bind","changeEvent","reader","FileReader","eventThis","onload","loadEvent","thisHook","target","result","files","type","readAsDataURL","PointPool","Bounds","x","y","left","right","top","bottom","getWidth","getHeight","getCentre","w","h","instance","borrow","Handle","_super","CornerMarker","radius","call","drawCornerBorder","ctx","sideLength","over","drag","hDirection","vDirection","horizontalNeighbour","position","verticalNeighbour","beginPath","lineJoin","moveTo","lineTo","closePath","lineWidth","strokeStyle","stroke","drawCornerFill","fillStyle","fill","moveX","setPosition","moveY","move","addHorizontalNeighbour","neighbour","addVerticalNeighbour","getHorizontalNeighbour","getVerticalNeighbour","draw","CropService","init","getContext","DEG2RAD","CropTouch","id","DragMarker","iconPoints","Array","scaledIconPoints","getDragIconPoints","drawIcon","arr","scale","maxLength","arrowWidth","arrowLength","connectorThroat","push","points","k","length","recalculatePosition","bounds","c","returnPoint","Point","offset","setDrag","value","setOver","touchInBounds","getPosition","pressed","share","setPressed","setReleased","setStyle","style","documentElement","css","imageCropperDataShare","aspectRatio","currentDragTouches","isMouseDown","ratioW","ratioH","imageSet","pointPool","buffer","createElement","cropCanvas","tl","tr","bl","br","markers","center","croppedImage","currentlyInteracting","window","jQuery","off","on","onMouseMove","onMouseUp","onMouseDown","onTouchStart","onTouchMove","onTouchEnd","resizeCanvas","getBounds","clearRect","canvasWidth","canvasHeight","fillRect","canvasAspect","sx","sy","drawImageIOSFix","drawImage","Math","max","marker","i","strokeRect","dragCrop","maxXClamp","minXClamp","minYClamp","maxYClamp","getCropBounds","enforceMinSize","xLength","yLength","xOver","abs","yOver","dragCorner","anchorMarker","iX","iY","ax","ay","newHeight","newWidth","newY","newX","fold","getSide","min","a","n","sign","NaN","handleRelease","newCropTouch","index","dragHandle","splice","handleMove","matched","dragTouch","clampedPositions","clampPosition","updateClampBounds","round","isImageSet","img","srcFileType","cropBounds","cropAspect","cX","cY","tlPos","trPos","blPos","brPos","imageH","cropW","imageW","cropH","vertSquashRatio","detectVerticalSquash","croppedImg","getCroppedImage","fillWidth","fillHeight","offsetH","offsetW","toDataURL","minX","Number","MAX_VALUE","minY","maxX","maxY","setBounds","topLeft","topRight","bottomLeft","bottomRight","currentBounds","getMousePos","evt","rect","getBoundingClientRect","pt","clientX","clientY","offsetHeight","offsetWidth","getTouchPos","touch","e","preventDefault","touches","isDefined","originalEvent","touchPosition","cropTouch","identifier","mousePosition","getDragTouchForID","drawCursors","cursorDrawn","drawCornerCursor","didDraw","changedTouches","sw","sh","dx","dy","dw","dh","ih","naturalWidth","naturalHeight","getImageData","ey","py","ratio","inst","borrowed","prev","firstAvailable","setNext","getNext","next"],"mappings":"CAAA,SAAWA,EAASC,GAClB,YAEA,IAAIC,GAAMF,EAAQG,OAAO,yBAIzBD,GAAIE,QAAQ,YAAa,WAEvB,GAAIC,GAAYA,GAAa,SAAUC,EAAGC,GAExC,QAASC,KACPC,KAAKC,YAAcJ,EAFrB,IAAK,GAAIK,KAAKJ,GAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,GAKnDH,GAAGK,UAAYN,EAAEM,UACjBP,EAAEO,UAAY,GAAIL,GAGpB,OAAOH,KAqCTH,EAAIY,UAAU,cAAA,YAAA,UAAA,eAAc,SAAUC,EAAWC,EAASC,GACxD,OACEC,OACEC,OAAQ,IACRC,OAAQ,IACRC,UAAW,IACXC,WAAY,IACZC,WAAY,IACZC,aAAc,IACdC,YAAa,IACbC,eAAgB,IAChBC,SAAU,IACVC,UAAW,IACXC,kBAAmB,IACnBC,gBAAiB,IACjBC,MAAO,IACPC,UAAW,IACXC,QAAS,IACTC,YAAa,KAEfC,SAAU,IACVC,KAAM,SAAUlB,EAAOmB,EAASC,GAc9B,QAASC,GAAMC,EAAUC,GACvB,IAAIC,GAAQF,IAAaC,EAAzB,CAKA,GAAIE,GAAQzB,EAAMG,UACduB,EAAS1B,EAAMI,WACfC,EAAaL,EAAMK,WACnBC,EAAeN,EAAMM,aACrBC,EAAcP,EAAMO,YACpBoB,EAAWH,GAAQA,EAAKI,QAE5BJ,GAAO,GAAIzB,GAAa8B,EAAQA,EAAOJ,MAAQ,EAAIA,EAAQ,EAAGI,EAAOH,OAAS,EAAIA,EAAS,EAAGD,EAAOC,EAAQrB,EAAYC,EAAcC,EAAaP,EAAOoB,GAE3JrC,EAAE8C,GAAQC,KAAK,2BAA4BN,GAEvCG,EACFH,EAAKO,SAASJ,EAAU3B,EAAMC,OAAO+B,UAErCC,EAAKjC,EAAMC,SAIf,QAASgC,GAAKX,GACZ,GAAKA,EAAL,CAIA,GAAIY,GAAW,GAAIC,WAEAC,KAAfhB,EAAMiB,MAAqC,OAAfjB,EAAMiB,OACpCH,EAASI,YAAc,aAGzBJ,EAASK,iBAAiB,OAAQ,WAChCf,EAAKO,SAASG,EAAUZ,EAASU,UACjChC,EAAMwC,WACL,GACHN,EAASO,IAAMnB,EAASoB,WAnD1B,GAAIlB,GAAMmB,GAAY,EAClBd,EAASV,EAAQ,EAErBnB,GAAMa,MAAQb,EAAMa,OAAS,sBAC7Bb,EAAMc,UAAYd,EAAMc,WAAa,qBACrCd,EAAMe,QAAUf,EAAMe,SAAW,sBACjCf,EAAMgB,YAAchB,EAAMgB,aAAe,qBAEzChB,EAAM4C,IAAI,WAAY,WACpBD,GAAY,IA6Cd3C,EAAM6C,OAAO,YAAaxB,GAC1BrB,EAAM6C,OAAO,aAAcxB,GAC3BrB,EAAM6C,OAAO,aAAcxB,GAC3BrB,EAAM6C,OAAO,cAAexB,GAG5BrB,EAAM6C,OAAO,SAAUZ,SAQ5BnD,QAASA,QAAQqC,SAIpB,SAAWrC,EAASC,EAAGC,GACrB,YAEAA,GAAIY,UAAU,yBAA0B,WACtC,OACEI,OACE8C,QAAS,KAEX5B,KAAM,SAAUlB,GACdA,EAAM+C,gBAAkB/C,EAAM8C,YAC9B9C,EAAM+C,gBAAgBd,KAAO,SAAUe,GAErC,GAAIC,GAAYnE,EAAQqC,QAAQ+B,SAASC,cAAcH,IACnDI,EAAKF,SAASG,YAAY,aAC9BD,GAAGE,UAAU,SAAS,GAAM,GAC5BL,EAAU,GAAGM,cAAcH,SAMlCtE,QAASA,QAAQqC,QAASrC,QAAQG,OAAO,wBAE5C,SAAWH,EAASC,EAAGC,GACrB,YAEAA,GAAIY,UAAU,sBAAA,WAAsB,SAAU4D,GAC5C,OACExD,OACEyD,MAAO,KAETvC,KAAM,SAAUlB,EAAOmB,GACrBA,EAAQuC,KAAK,SAAU,SAAUC,GAC/B,GAAIC,GAAS,GAAIC,YACbC,EAAYvE,IAChBqE,GAAOG,OAAS,SAAUC,GACxBR,EAAS,WACP,GAAIS,GAAWH,CACf9D,GAAMyD,OACJf,UAAasB,EAAUE,OAAOC,OAC9BnC,SAAYiC,EAASjC,WAEtB,IAED2B,EAAYO,OAAOE,MAAM,KAC3BN,EAAU9B,SAAW2B,EAAYO,OAAOE,MAAM,GAAGC,KACjDT,EAAOU,cAAcX,EAAYO,OAAOE,MAAM,aAQvDtF,QAASA,QAAQqC,QAASrC,QAAQG,OAAO,wBAE5C,SAAWH,EAASC,EAAGC,GACrB,YAEAA,GAAIE,QAAQ,UAAA,YAAU,SAAUqF,GAE9B,QAASC,GAAOC,EAAGC,EAAGjD,EAAOC,OACjB,KAAN+C,IACFA,EAAI,OAEI,KAANC,IACFA,EAAI,OAEQ,KAAVjD,IACFA,EAAQ,OAEK,KAAXC,IACFA,EAAS,GAEXnC,KAAKoF,KAAOF,EACZlF,KAAKqF,MAAQH,EAAIhD,EACjBlC,KAAKsF,IAAMH,EACXnF,KAAKuF,OAASJ,EAAIhD,EAcpB,MAXA8C,GAAO7E,UAAUoF,SAAW,WAC1B,MAAOxF,MAAKqF,MAAQrF,KAAKoF,MAE3BH,EAAO7E,UAAUqF,UAAY,WAC3B,MAAOzF,MAAKuF,OAASvF,KAAKsF,KAE5BL,EAAO7E,UAAUsF,UAAY,WAC3B,GAAIC,GAAI3F,KAAKwF,WACTI,EAAI5F,KAAKyF,WACb,OAAOT,GAAUa,SAASC,OAAO9F,KAAKoF,KAAQO,EAAI,EAAI3F,KAAKsF,IAAOM,EAAI,IAEjEX,MAMR1F,QAASA,QAAQqC,QAASrC,QAAQG,OAAO,wBAE5C,SAAWH,EAASC,EAAGC,GACrB,YAEAA,GAAIE,QAAQ,gBAAA,SAAA,YAAgB,SAASoG,EAAQnG,GAuFvC,MAtFgB,UAAWoG,GAEzB,QAASC,GAAaf,EAAGC,EAAGe,EAAQ5E,EAAOG,GACzCuE,EAAOG,KAAKnG,KAAMkF,EAAGC,EAAGe,GACxBlG,KAAKsB,MAAgB,sBAARA,EACbtB,KAAKyB,YAA4B,gBAAdA,EA8ErB,MAlFA7B,GAAUqG,EAAcD,GAOxBC,EAAa7F,UAAUgG,iBAAmB,SAAUC,GAClD,GAAIC,GAAa,IACbtG,KAAKuG,MAAQvG,KAAKwG,QACpBF,EAAa,GAEf,IAAIG,GAAa,EACbC,EAAa,CACb1G,MAAK2G,oBAAoBC,SAAS1B,EAAIlF,KAAK4G,SAAS1B,IACtDuB,GAAc,GAEZzG,KAAK6G,kBAAkBD,SAASzB,EAAInF,KAAK4G,SAASzB,IACpDuB,GAAc,GAEhBL,EAAIS,YACJT,EAAIU,SAAW,QACfV,EAAIW,OAAOhH,KAAK4G,SAAS1B,EAAGlF,KAAK4G,SAASzB,GAC1CkB,EAAIY,OAAOjH,KAAK4G,SAAS1B,EAAKoB,EAAaG,EAAazG,KAAK4G,SAASzB,GACtEkB,EAAIY,OAAOjH,KAAK4G,SAAS1B,EAAKoB,EAAaG,EAAazG,KAAK4G,SAASzB,EAAKmB,EAAaI,GACxFL,EAAIY,OAAOjH,KAAK4G,SAAS1B,EAAGlF,KAAK4G,SAASzB,EAAKmB,EAAaI,GAC5DL,EAAIY,OAAOjH,KAAK4G,SAAS1B,EAAGlF,KAAK4G,SAASzB,GAC1CkB,EAAIa,YACJb,EAAIc,UAAY,EAChBd,EAAIe,YAAcpH,KAAKsB,MACvB+E,EAAIgB,UAENpB,EAAa7F,UAAUkH,eAAiB,SAAUjB,GAChD,GAAIC,GAAa,IACbtG,KAAKuG,MAAQvG,KAAKwG,QACpBF,EAAa,GAEf,IAAIG,GAAa,EACbC,EAAa,CACb1G,MAAK2G,oBAAoBC,SAAS1B,EAAIlF,KAAK4G,SAAS1B,IACtDuB,GAAc,GAEZzG,KAAK6G,kBAAkBD,SAASzB,EAAInF,KAAK4G,SAASzB,IACpDuB,GAAc,GAEhBL,EAAIS,YACJT,EAAIW,OAAOhH,KAAK4G,SAAS1B,EAAGlF,KAAK4G,SAASzB,GAC1CkB,EAAIY,OAAOjH,KAAK4G,SAAS1B,EAAKoB,EAAaG,EAAazG,KAAK4G,SAASzB,GACtEkB,EAAIY,OAAOjH,KAAK4G,SAAS1B,EAAKoB,EAAaG,EAAazG,KAAK4G,SAASzB,EAAKmB,EAAaI,GACxFL,EAAIY,OAAOjH,KAAK4G,SAAS1B,EAAGlF,KAAK4G,SAASzB,EAAKmB,EAAaI,GAC5DL,EAAIY,OAAOjH,KAAK4G,SAAS1B,EAAGlF,KAAK4G,SAASzB,GAC1CkB,EAAIa,YACJb,EAAIkB,UAAYvH,KAAKyB,YACrB4E,EAAImB,QAENvB,EAAa7F,UAAUqH,MAAQ,SAAUvC,GACvClF,KAAK0H,YAAYxC,EAAGlF,KAAK4G,SAASzB,IAEpCc,EAAa7F,UAAUuH,MAAQ,SAAUxC,GACvCnF,KAAK0H,YAAY1H,KAAK4G,SAAS1B,EAAGC,IAEpCc,EAAa7F,UAAUwH,KAAO,SAAU1C,EAAGC,GACzCnF,KAAK0H,YAAYxC,EAAGC,GACpBnF,KAAK6G,kBAAkBY,MAAMvC,GAC7BlF,KAAK2G,oBAAoBgB,MAAMxC,IAEjCc,EAAa7F,UAAUyH,uBAAyB,SAAUC,GACxD9H,KAAK2G,oBAAsBmB,GAE7B7B,EAAa7F,UAAU2H,qBAAuB,SAAUD,GACtD9H,KAAK6G,kBAAoBiB,GAE3B7B,EAAa7F,UAAU4H,uBAAyB,WAC9C,MAAOhI,MAAK2G,qBAEdV,EAAa7F,UAAU6H,qBAAuB,WAC5C,MAAOjI,MAAK6G,mBAEdZ,EAAa7F,UAAU8H,KAAO,SAAU7B,GACtCrG,KAAKsH,eAAejB,GACpBrG,KAAKoG,iBAAiBC,IAEjBJ,GACNF,OAKRxG,QAASA,QAAQqC,QAASrC,QAAQG,OAAO,wBAG5C,SAAWH,EAASC,EAAGC,GACrB,YAEAA,GAAIE,QAAQ,cAAe,WAEzB,QAASwI,MAQT,MALAA,GAAYC,KAAO,SAAU9F,GAC3BtC,KAAKsC,OAASA,EACdtC,KAAKqG,IAAMrG,KAAKsC,OAAO+F,WAAW,OAEpCF,EAAYG,QAAU,YACfH,KAIR5I,QAASA,QAAQqC,QAASrC,QAAQG,OAAO,wBAE5C,SAAWH,EAASC,EAAGC,GACrB,YAEAA,GAAIE,QAAQ,YAAa,WACvB,QAAS4I,GAAUrD,EAAGC,EAAGqD,OACb,KAANtD,IACFA,EAAI,OAEI,KAANC,IACFA,EAAI,OAEK,KAAPqD,IACFA,EAAK,GAEPxI,KAAKwI,GAAK,EACVxI,KAAKkF,EAAIA,EACTlF,KAAKmF,EAAIA,EACTnF,KAAKwI,GAAKA,EAGZ,MAAOD,MAGRhJ,QAASA,QAAQqC,QAASrC,QAAQG,OAAO,wBAE5C,SAAWH,EAASC,EAAGC,GACrB,YAEAA,GAAIE,QAAQ,cAAA,SAAA,YAAA,YAAc,SAAUoG,EAAQnG,EAAWoF,GAqErD,MApEiB,UAAWgB,GAE1B,QAASyC,GAAWvD,EAAGC,EAAGe,EAAQ5E,GAChC0E,EAAOG,KAAKnG,KAAMkF,EAAGC,EAAGe,GACxBlG,KAAK0I,WAAa,GAAIC,OACtB3I,KAAK4I,iBAAmB,GAAID,OAC5B3I,KAAK6I,kBAAkB7I,KAAK0I,WAAY,GACxC1I,KAAK6I,kBAAkB7I,KAAK4I,iBAAkB,KAC9C5I,KAAKsB,MAAQA,GAAS,yBAyDxB,MAhEA1B,GAAU6I,EAAYzC,GAUtByC,EAAWrI,UAAU8H,KAAO,SAAU7B,GAChCrG,KAAKuG,MAAQvG,KAAKwG,KACpBxG,KAAK8I,SAASzC,EAAKrG,KAAK4I,kBAGxB5I,KAAK8I,SAASzC,EAAKrG,KAAK0I,aAG5BD,EAAWrI,UAAUyI,kBAAoB,SAAUE,EAAKC,GACtD,GAAIC,GAAY,GAAKD,EACjBE,EAAa,GAAKF,EAClBG,EAAc,EAAIH,EAClBI,EAAkB,EAAIJ,CAC1BD,GAAIM,KAAKrE,EAAUa,SAASC,QAAQsD,EAAkB,EAAGH,EAAYE,IACrEJ,EAAIM,KAAKrE,EAAUa,SAASC,QAAQoD,EAAa,EAAGD,EAAYE,IAChEJ,EAAIM,KAAKrE,EAAUa,SAASC,OAAO,EAAGmD,IACtCF,EAAIM,KAAKrE,EAAUa,SAASC,OAAOoD,EAAa,EAAGD,EAAYE,IAC/DJ,EAAIM,KAAKrE,EAAUa,SAASC,OAAOsD,EAAkB,EAAGH,EAAYE,IACpEJ,EAAIM,KAAKrE,EAAUa,SAASC,OAAOsD,EAAkB,EAAGA,EAAkB,IAC1EL,EAAIM,KAAKrE,EAAUa,SAASC,OAAOmD,EAAYE,EAAaC,EAAkB,IAC9EL,EAAIM,KAAKrE,EAAUa,SAASC,OAAOmD,EAAYE,EAAaD,EAAa,IACzEH,EAAIM,KAAKrE,EAAUa,SAASC,OAAOmD,EAAW,IAC9CF,EAAIM,KAAKrE,EAAUa,SAASC,OAAOmD,EAAYE,GAAcD,EAAa,IAC1EH,EAAIM,KAAKrE,EAAUa,SAASC,OAAOmD,EAAYE,GAAcC,EAAkB,IAC/EL,EAAIM,KAAKrE,EAAUa,SAASC,OAAOsD,EAAkB,GAAIA,EAAkB,IAC3EL,EAAIM,KAAKrE,EAAUa,SAASC,OAAOsD,EAAkB,GAAIH,EAAYE,IACrEJ,EAAIM,KAAKrE,EAAUa,SAASC,OAAOoD,EAAa,GAAID,EAAYE,IAChEJ,EAAIM,KAAKrE,EAAUa,SAASC,OAAO,GAAImD,IACvCF,EAAIM,KAAKrE,EAAUa,SAASC,QAAQoD,EAAa,GAAID,EAAYE,IACjEJ,EAAIM,KAAKrE,EAAUa,SAASC,QAAQsD,EAAkB,GAAIH,EAAYE,IACtEJ,EAAIM,KAAKrE,EAAUa,SAASC,QAAQsD,EAAkB,GAAIA,EAAkB,IAC5EL,EAAIM,KAAKrE,EAAUa,SAASC,QAAQmD,EAAYE,GAAcC,EAAkB,IAChFL,EAAIM,KAAKrE,EAAUa,SAASC,QAAQmD,EAAYE,GAAcD,EAAa,IAC3EH,EAAIM,KAAKrE,EAAUa,SAASC,QAAQmD,EAAW,IAC/CF,EAAIM,KAAKrE,EAAUa,SAASC,QAAQmD,EAAYE,EAAaD,EAAa,IAC1EH,EAAIM,KAAKrE,EAAUa,SAASC,QAAQmD,EAAYE,EAAaC,EAAkB,IAC/EL,EAAIM,KAAKrE,EAAUa,SAASC,QAAQsD,EAAkB,EAAGA,EAAkB,KAE7EX,EAAWrI,UAAU0I,SAAW,SAAUzC,EAAKiD,GAC7CjD,EAAIS,YACJT,EAAIW,OAAOsC,EAAO,GAAGpE,EAAIlF,KAAK4G,SAAS1B,EAAGoE,EAAO,GAAGnE,EAAInF,KAAK4G,SAASzB,EACtE,KAAK,GAAIoE,GAAI,EAAGA,EAAID,EAAOE,OAAQD,IAAK,CACtC,GAAIrJ,GAAIoJ,EAAOC,EACflD,GAAIY,OAAO/G,EAAEgF,EAAIlF,KAAK4G,SAAS1B,EAAGhF,EAAEiF,EAAInF,KAAK4G,SAASzB,GAExDkB,EAAIa,YACJb,EAAIkB,UAAYvH,KAAKsB,MACrB+E,EAAImB,QAENiB,EAAWrI,UAAUqJ,oBAAsB,SAAUC,GACnD,GAAIC,GAAID,EAAOhE,WACf1F,MAAK0H,YAAYiC,EAAEzE,EAAGyE,EAAExE,GACxBH,EAAUa,SAAS+D,YAAYD,IAE1BlB,GACN1C,OAKJxG,QAASA,QAAQqC,QAASrC,QAAQG,OAAO,wBAE5C,SAAWH,EAASC,EAAGC,GACrB,YAEAA,GAAIE,QAAQ,UAAA,QAAU,SAAUkK,GAE9B,QAAS9D,GAAOb,EAAGC,EAAGe,GACpBlG,KAAKuG,MAAO,EACZvG,KAAKwG,MAAO,EACZxG,KAAK4G,SAAW,GAAIiD,GAAM3E,EAAGC,GAC7BnF,KAAK8J,OAAS,GAAID,GAAM,EAAG,GAC3B7J,KAAKkG,OAASA,EAuBhB,MApBAH,GAAO3F,UAAU2J,QAAU,SAAUC,GACnChK,KAAKwG,KAAOwD,EACZhK,KAAKiK,QAAQD,IAEfjE,EAAO3F,UAAU8H,KAAO,SAAU7B,KAElCN,EAAO3F,UAAU6J,QAAU,SAAU1D,GACnCvG,KAAKuG,KAAOA,GAEdR,EAAO3F,UAAU8J,cAAgB,SAAUhF,EAAGC,GAC5C,MAAQD,GAAIlF,KAAK4G,SAAS1B,EAAIlF,KAAKkG,QAAUhB,EAAIlF,KAAK4G,SAAS1B,EAAIlF,KAAKkG,QAAUf,EAAInF,KAAK4G,SAASzB,EAAInF,KAAKkG,QAAUf,EAAInF,KAAK4G,SAASzB,EAAInF,KAAKkG,QAEpJH,EAAO3F,UAAU+J,YAAc,WAC7B,MAAOnK,MAAK4G,UAEdb,EAAO3F,UAAUsH,YAAc,SAAUxC,EAAGC,GAC1CnF,KAAK4G,SAAS1B,EAAIA,EAClBlF,KAAK4G,SAASzB,EAAIA,GAGbY,MAGRxG,QAASA,QAAQqC,QAASrC,QAAQG,OAAO,wBAE5C,SAAWH,EAASC,EAAGC,GACrB,YAEAA,GAAIE,QAAQ,wBAAyB,WAEnC,GACIyK,GACA7D,EAFA8D,IA6BJ,OA1BAA,GAAMC,WAAa,SAAUhI,GAC3B8H,EAAU9H,GAGZ+H,EAAME,YAAc,SAAUjI,GACxBA,IAAW8H,IACbA,MAAUvH,KAIdwH,EAAMJ,QAAU,SAAU3H,GACxBiE,EAAOjE,GAGT+H,EAAMG,SAAW,SAAUlI,EAAQmI,OACjB5H,KAAZuH,EACEA,IAAY9H,GACd/C,EAAQqC,QAAQ+B,SAAS+G,iBAAiBC,IAAI,SAAUF,GAItDnI,IAAWiE,GACbhH,EAAQqC,QAAQ+B,SAAS+G,iBAAiBC,IAAI,SAAUF,IAIvDJ,KAIR9K,QAASA,QAAQqC,QAASrC,QAAQG,OAAO,wBAC5C,SAAUH,EAASC,EAAGC,GACpB,YACAA,GAAIE,QAAQ,gBAAA,YAAA,SAAA,QAAA,YAAA,cAAA,aAAA,eAAA,SAAA,YAAA,wBAAgB,SAASC,EAAWmG,EAAQ8D,EAAO7E,EAAWmD,EAAaM,EAAYxC,EAAchB,EAAQsD,EAAWqC,GAClI,QAASpK,GAAa8B,EAAQ4C,EAAGC,EAAGjD,EAAOC,EAAQrB,EAAYC,EAAcC,EAAaP,EAAOoB,OACrF,KAANqD,IACFA,EAAI,OAEI,KAANC,IACFA,EAAI,OAEQ,KAAVjD,IACFA,EAAQ,SAEK,KAAXC,IACFA,EAAS,QAEQ,KAAfrB,IACFA,GAAa,OAEK,KAAhBE,IACFA,EAAc,IAEhBhB,KAAKS,MAAQA,EACbT,KAAK6B,MAAQA,EACb7B,KAAKc,YAAa,EAClBd,KAAK6K,YAAc,EACnB7K,KAAK8K,mBAAqB,GAAInC,OAC9B3I,KAAK+K,aAAc,EACnB/K,KAAKgL,OAAS,EACdhL,KAAKiL,OAAS,EACdjL,KAAKyC,SAAW,YAChBzC,KAAKkL,UAAW,EAChBlL,KAAKmL,UAAY,GAAInG,GAAU,KAC/BmD,EAAYC,KAAK9F,GACjBtC,KAAKoL,OAASzH,SAAS0H,cAAc,UACrCrL,KAAKsL,WAAa3H,SAAS0H,cAAc,UACzCrL,KAAKoL,OAAOlJ,MAAQI,EAAOJ,MAC3BlC,KAAKoL,OAAOjJ,OAASG,EAAOH,OAC5BnC,KAAKuL,GAAK,GAAItF,GAAaf,EAAEC,EAAEnE,EAAahB,KAAKS,MAAMc,UAAWvB,KAAKS,MAAMgB,aAC7EzB,KAAKwL,GAAK,GAAIvF,GAAaf,EAAIhD,EAAMiD,EAAEnE,EAAahB,KAAKS,MAAMc,UAAWvB,KAAKS,MAAMgB,aACrFzB,KAAKyL,GAAK,GAAIxF,GAAaf,EAAEC,EAAIhD,EAAOnB,EAAahB,KAAKS,MAAMc,UAAWvB,KAAKS,MAAMgB,aACtFzB,KAAK0L,GAAK,GAAIzF,GAAaf,EAAIhD,EAAMiD,EAAIhD,EAAOnB,EAAahB,KAAKS,MAAMc,UAAWvB,KAAKS,MAAMgB,aAC9FzB,KAAKuL,GAAG1D,uBAAuB7H,KAAKwL,IACpCxL,KAAKuL,GAAGxD,qBAAqB/H,KAAKyL,IAClCzL,KAAKwL,GAAG3D,uBAAuB7H,KAAKuL,IACpCvL,KAAKwL,GAAGzD,qBAAqB/H,KAAK0L,IAClC1L,KAAKyL,GAAG5D,uBAAuB7H,KAAK0L,IACpC1L,KAAKyL,GAAG1D,qBAAqB/H,KAAKuL,IAClCvL,KAAK0L,GAAG7D,uBAAuB7H,KAAKyL,IACpCzL,KAAK0L,GAAG3D,qBAAqB/H,KAAKwL,IAClCxL,KAAK2L,SAAW3L,KAAKuL,GAAIvL,KAAKwL,GAAIxL,KAAKyL,GAAIzL,KAAK0L,IAEhD1L,KAAK4L,OAAS,GAAInD,GAAWvD,EAAKhD,EAAQ,EAAGiD,EAAKhD,EAAS,EAAGnB,EAAahB,KAAKS,MAAMc,WACtFvB,KAAKsC,OAASA,EACdtC,KAAKqG,IAAMrG,KAAKsC,OAAO+F,WAAW,MAClCrI,KAAKc,WAAaA,EAClBd,KAAKe,aAAeA,IAAgB,EACpCf,KAAK6K,YAAc1I,EAASD,EAC5BlC,KAAKkI,KAAKlI,KAAKqG,KACfrG,KAAK6L,aAAe,GAAIjJ,OACxB5C,KAAK8L,sBAAuB,EAC5B9L,KAAKoB,kBAAoBpB,KAAKS,MAAMW,oBAAqB,EACzDpB,KAAKqB,gBAAkBrB,KAAKS,MAAMY,gBAAkB,SAAWrB,KAAKS,MAAMY,oBAAkBwB,GACxFkJ,OAAOC,QACTzM,EAAQqC,QAAQmK,QAAQE,IAAI,6DAA6DC,GAAG,gCAAiClM,KAAKmM,YAAYhI,KAAKnE,OAAOkM,GAAG,8BAA+BlM,KAAKoM,UAAUjI,KAAKnE,OAChNT,EAAQqC,QAAQU,GAAQ2J,IAAI,4HAA4HC,GAAG,gCAAiClM,KAAKqM,YAAYlI,KAAKnE,OAAOkM,GAAG,iCAAkClM,KAAKsM,aAAanI,KAAKnE,OAAOkM,GAAG,gCAAiClM,KAAKuM,YAAYpI,KAAKnE,OAAOkM,GAAG,+BAAgClM,KAAKwM,WAAWrI,KAAKnE,SAErZ+L,OAAO/I,iBAAiB,YAAahD,KAAKmM,YAAYhI,KAAKnE,OAC3D+L,OAAO/I,iBAAiB,UAAWhD,KAAKoM,UAAUjI,KAAKnE,OACvDsC,EAAOU,iBAAiB,YAAahD,KAAKqM,YAAYlI,KAAKnE,OAC3DsC,EAAOU,iBAAiB,YAAahD,KAAKuM,YAAYpI,KAAKnE,OAAO,GAClEsC,EAAOU,iBAAiB,aAAchD,KAAKsM,aAAanI,KAAKnE,OAAO,GACpEsC,EAAOU,iBAAiB,WAAYhD,KAAKwM,WAAWrI,KAAKnE,OAAO,IA01BpE,MAv1BAQ,GAAaJ,UAAUqM,aAAe,SAASvK,EAAOC,GACpDnC,KAAKsC,OAAOJ,MAAQA,EACpBlC,KAAKsC,OAAOH,OAASA,EACrBnC,KAAKoL,OAAOlJ,MAAQA,EACpBlC,KAAKoL,OAAOjJ,OAASA,EACrBnC,KAAKkI,KAAKlI,KAAKqG,MAGjB7F,EAAaJ,UAAU8H,KAAO,SAAS7B,GACrC,GAAIqD,GAAS1J,KAAK0M,WAClB,IAAI1M,KAAKqC,SAAU,CACjBgE,EAAIsG,UAAU,EAAG,EAAG3M,KAAK4M,YAAa5M,KAAK6M,cAC3CxG,EAAIkB,UAAYvH,KAAKS,MAAMe,QAC3B6E,EAAIyG,SAAS,EAAG,EAAG9M,KAAKsC,OAAOJ,MAAOlC,KAAKsC,OAAOH,OAElD,IAAIpB,GAAef,KAAKqC,SAASF,OAASnC,KAAKqC,SAASH,MACpD6K,EAAe/M,KAAK6M,aAAe7M,KAAK4M,YACxCjH,EAAI3F,KAAK4M,YACThH,EAAI5F,KAAK6M,aACTG,EAAK,EACLC,EAAK,CACLF,GAAehM,GACjB4E,EAAI3F,KAAK4M,YACThH,EAAI5F,KAAK4M,YAAc7L,IAEvB6E,EAAI5F,KAAK6M,aACTlH,EAAI3F,KAAK6M,aAAe9L,GAE1Bf,KAAKgL,OAASrF,EAAI3F,KAAKqC,SAASH,MAChClC,KAAKiL,OAASrF,EAAI5F,KAAKqC,SAASF,OAC5B4K,EAAehM,EACjBiM,EAAKhN,KAAKoL,OAAOlJ,MAAQ,EAAIyD,EAAI,EAEjCsH,EAAKjN,KAAKoL,OAAOjJ,OAAS,EAAIyD,EAAI,EAEpC5F,KAAKkN,gBAAgB7G,EAAKrG,KAAKqC,SAAU,EAAG,EAAGrC,KAAKqC,SAASH,MAAOlC,KAAKqC,SAASF,OAAQ6K,EAAIC,EAAItH,EAAGC,GACrG5F,KAAKoL,OAAO/C,WAAW,MAAM8E,UAAUnN,KAAKsC,OAAQ,EAAG,EAAGtC,KAAK4M,YAAa5M,KAAK6M,cACjFxG,EAAIkB,UAAYvH,KAAKS,MAAMgB,YAC3B4E,EAAIyG,SAASE,EAAIC,EAAItH,EAAGC,GACxBS,EAAI8G,UAAUnN,KAAKoL,OAAQ1B,EAAOtE,KAAMsE,EAAOpE,IAAK8H,KAAKC,IAAI3D,EAAOlE,WAAY,GAAI4H,KAAKC,IAAI3D,EAAOjE,YAAa,GAAIiE,EAAOtE,KAAMsE,EAAOpE,IAAKoE,EAAOlE,WAAYkE,EAAOjE,YAExK,KAAK,GADD6H,GACKC,EAAI,EAAGA,EAAIvN,KAAK2L,QAAQnC,OAAQ+D,IACvCD,EAAStN,KAAK2L,QAAQ4B,GACtBD,EAAOpF,KAAK7B,EAEdrG,MAAK4L,OAAO1D,KAAK7B,GACjBA,EAAIc,UAAY,EAChBd,EAAIe,YAAcpH,KAAKS,MAAMa,MAC7B+E,EAAImH,WAAW9D,EAAOtE,KAAMsE,EAAOpE,IAAKoE,EAAOlE,WAAYkE,EAAOjE,iBAElEY,GAAIkB,UAAYvH,KAAKS,MAAMe,QAC3B6E,EAAIyG,SAAS,EAAG,EAAG9M,KAAKsC,OAAOJ,MAAOlC,KAAKsC,OAAOH,SAItD3B,EAAaJ,UAAUqN,SAAW,SAASvI,EAAGC,EAAGmI,GAC/C,GAAI5D,GAAS1J,KAAK0M,YACdtH,EAAOF,EAAKwE,EAAOlE,WAAa,EAChCH,EAAQH,EAAKwE,EAAOlE,WAAa,EACjCF,EAAMH,EAAKuE,EAAOjE,YAAc,EAChCF,EAASJ,EAAKuE,EAAOjE,YAAc,CACnCJ,IAASrF,KAAK0N,YAChBxI,EAAIlF,KAAK0N,UAAYhE,EAAOlE,WAAa,GAEvCJ,GAAQpF,KAAK2N,YACfzI,EAAIwE,EAAOlE,WAAa,EAAIxF,KAAK2N,WAE/BrI,EAAMtF,KAAK4N,YACbzI,EAAIuE,EAAOjE,YAAc,EAAIzF,KAAK4N,WAEhCrI,GAAUvF,KAAK6N,YACjB1I,EAAInF,KAAK6N,UAAYnE,EAAOjE,YAAc,GAE5CzF,KAAKuL,GAAG9D,MAAMvC,EAAKwE,EAAOlE,WAAa,GACvCxF,KAAKuL,GAAG5D,MAAMxC,EAAKuE,EAAOjE,YAAc,GACxCzF,KAAKwL,GAAG/D,MAAMvC,EAAKwE,EAAOlE,WAAa,GACvCxF,KAAKwL,GAAG7D,MAAMxC,EAAKuE,EAAOjE,YAAc,GACxCzF,KAAKyL,GAAGhE,MAAMvC,EAAKwE,EAAOlE,WAAa,GACvCxF,KAAKyL,GAAG9D,MAAMxC,EAAKuE,EAAOjE,YAAc,GACxCzF,KAAK0L,GAAGjE,MAAMvC,EAAKwE,EAAOlE,WAAa,GACvCxF,KAAK0L,GAAG/D,MAAMxC,EAAKuE,EAAOjE,YAAc,GACxC6H,EAAO5F,YAAYxC,EAAGC,GAClBnF,KAAKS,MAAMQ,gBAAkBjB,KAAKkL,WACpClL,KAAKS,MAAMQ,eAAiBjB,KAAK8N,gBACjC9N,KAAKS,MAAMwC,WAIfzC,EAAaJ,UAAU2N,eAAiB,SAAS7I,EAAGC,EAAGmI,GACrD,GAAIU,GAAU9I,EAAIoI,EAAOtF,yBAAyBmC,cAAcjF,EAC5D+I,EAAU9I,EAAImI,EAAOrF,uBAAuBkC,cAAchF,EAC1D+I,EAAQlO,KAAKS,MAAMS,SAAWkM,KAAKe,IAAIH,GACvCI,EAAQpO,KAAKS,MAAMU,UAAYiM,KAAKe,IAAIF,EAC5C,OAAe,IAAXD,GAA2B,GAAXC,GAClB/I,EAAIoI,EAAOnD,cAAcjF,EACzBC,EAAImI,EAAOnD,cAAchF,EAClBH,EAAUa,SAASC,OAAOZ,EAAGC,KAElCnF,KAAKS,MAAMK,WACToN,EAAQ,GAAME,EAAQpO,KAAK6K,YAAe,EACxCqD,EAASE,EAAQpO,KAAK6K,YACpBmD,EAAU,GACZ9I,GAAKgJ,EACDD,EAAU,EACZ9I,GAAK+I,EAAQlO,KAAK6K,YAElB1F,GAAK+I,EAAQlO,KAAK6K,cAGpB3F,GAAKgJ,EACDD,EAAU,EACZ9I,GAAK+I,EAAQlO,KAAK6K,YAElB1F,GAAK+I,EAAQlO,KAAK6K,aAIlBoD,EAAU,GACZ9I,GAAKiJ,EACDJ,EAAU,EACZ9I,GAAKkJ,EAAQpO,KAAK6K,YAElB3F,GAAKkJ,EAAQpO,KAAK6K,cAGpB1F,GAAKiJ,EACDJ,EAAU,EACZ9I,GAAKkJ,EAAQpO,KAAK6K,YAElB3F,GAAKkJ,EAAQpO,KAAK6K,aAKpBqD,EAAQ,EACNF,EAAU,GACZ9I,GAAKgJ,EACDD,EAAU,EACZ9I,GAAK+I,EAAQlO,KAAK6K,YAElB1F,GAAK+I,EAAQlO,KAAK6K,cAGpB3F,GAAKgJ,EACDD,EAAU,EACZ9I,GAAK+I,EAAQlO,KAAK6K,YAElB1F,GAAK+I,EAAQlO,KAAK6K,aAGbuD,EAAQ,IACbH,EAAU,GACZ9I,GAAKiJ,EACDJ,EAAU,EACZ9I,GAAKkJ,EAAQpO,KAAK6K,YAElB3F,GAAKkJ,EAAQpO,KAAK6K,cAGpB1F,GAAKiJ,EACDJ,EAAU,EACZ9I,GAAKkJ,EAAQpO,KAAK6K,YAElB3F,GAAKkJ,EAAQpO,KAAK6K,eAMtBqD,EAAQ,IACNF,EAAU,EACZ9I,GAAKgJ,EAELhJ,GAAKgJ,GAGLE,EAAQ,IACNH,EAAU,EACZ9I,GAAKiJ,EAELjJ,GAAKiJ,KAIPlJ,EAAIlF,KAAK2N,WAAazI,EAAIlF,KAAK0N,WAAavI,EAAInF,KAAK4N,WAAazI,EAAInF,KAAK6N,aAC7E3I,EAAIoI,EAAOnD,cAAcjF,EACzBC,EAAImI,EAAOnD,cAAchF,GAEpBH,EAAUa,SAASC,OAAOZ,EAAGC,KAGtC3E,EAAaJ,UAAUiO,WAAa,SAASnJ,EAAGC,EAAGmI,GACjD,GAQIgB,GARAC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAY,EACZC,EAAW,EACXC,EAAO,EACPC,EAAO,EAEPC,EAAO,CACX,IAAI/O,KAAKS,MAAMK,YAIb,GAHAwN,EAAehB,EAAOtF,yBAAyBC,uBAC/CwG,EAAKH,EAAanE,cAAcjF,EAChCwJ,EAAKJ,EAAanE,cAAchF,EAC5BD,GAAKoJ,EAAanE,cAAcjF,GAClC,GAAIC,GAAKmJ,EAAanE,cAAchF,GAIlC,GAHAoJ,EAAKE,EAAM,IAAMzO,KAAK6K,YACtB2D,EAAKE,EAAM,IAAM1O,KAAK6K,YAAc7K,KAAK6K,aACzCkE,EAAO/O,KAAKgP,QAAQhK,EAAUa,SAASC,OAAOyI,EAAIC,GAAKF,EAAanE,cAAenF,EAAUa,SAASC,OAAOZ,EAAGC,KACrG,EAAG,CACZwJ,EAAYvB,KAAKe,IAAIG,EAAanE,cAAchF,EAAIA,GACpDyJ,EAAWD,EAAY3O,KAAK6K,YAC5BgE,EAAOP,EAAanE,cAAchF,EAAIwJ,EACtCG,EAAOR,EAAanE,cAAcjF,EAAI0J,CACtC,IAAIK,GAAMjP,KAAK+N,eAAee,EAAMD,EAAMvB,EAC1CA,GAAO1F,KAAKqH,EAAI/J,EAAG+J,EAAI9J,GACvBH,EAAUa,SAAS+D,YAAYqF,OAC1B,IAAIF,EAAO,EAAG,CACnBH,EAAWxB,KAAKe,IAAIG,EAAanE,cAAcjF,EAAIA,GACnDyJ,EAAYC,EAAW5O,KAAK6K,YAC5BgE,EAAOP,EAAanE,cAAchF,EAAIwJ,EACtCG,EAAOR,EAAanE,cAAcjF,EAAI0J,CACtC,IAAIK,GAAMjP,KAAK+N,eAAee,EAAMD,EAAMvB,EAC1CA,GAAO1F,KAAKqH,EAAI/J,EAAG+J,EAAI9J,GACvBH,EAAUa,SAAS+D,YAAYqF,QAMjC,IAHAV,EAAKE,EAAM,IAAMzO,KAAK6K,YACtB2D,EAAKE,EAAM,IAAM1O,KAAK6K,YAAc7K,KAAK6K,aACzCkE,EAAO/O,KAAKgP,QAAQhK,EAAUa,SAASC,OAAOyI,EAAIC,GAAKF,EAAanE,cAAenF,EAAUa,SAASC,OAAOZ,EAAGC,KACrG,EAAG,CACZyJ,EAAWxB,KAAKe,IAAIG,EAAanE,cAAcjF,EAAIA,GACnDyJ,EAAYC,EAAW5O,KAAK6K,YAC5BgE,EAAOP,EAAanE,cAAchF,EAAIwJ,EACtCG,EAAOR,EAAanE,cAAcjF,EAAI0J,CACtC,IAAIK,GAAMjP,KAAK+N,eAAee,EAAMD,EAAMvB,EAC1CA,GAAO1F,KAAKqH,EAAI/J,EAAG+J,EAAI9J,GACvBH,EAAUa,SAAS+D,YAAYqF,OAC1B,IAAIF,EAAO,EAAG,CACnBJ,EAAYvB,KAAKe,IAAIG,EAAanE,cAAchF,EAAIA,GACpDyJ,EAAWD,EAAY3O,KAAK6K,YAC5BgE,EAAOP,EAAanE,cAAchF,EAAIwJ,EACtCG,EAAOR,EAAanE,cAAcjF,EAAI0J,CACtC,IAAIK,GAAMjP,KAAK+N,eAAee,EAAMD,EAAMvB,EAC1CA,GAAO1F,KAAKqH,EAAI/J,EAAG+J,EAAI9J,GACvBH,EAAUa,SAAS+D,YAAYqF,QAInC,IAAI9J,GAAKmJ,EAAanE,cAAchF,GAIlC,GAHAoJ,EAAKE,EAAM,IAAMzO,KAAK6K,YACtB2D,EAAKE,EAAM,IAAM1O,KAAK6K,YAAc7K,KAAK6K,aACzCkE,EAAO/O,KAAKgP,QAAQhK,EAAUa,SAASC,OAAOyI,EAAIC,GAAKF,EAAanE,cAAenF,EAAUa,SAASC,OAAOZ,EAAGC,KACrG,EAAG,CACZwJ,EAAYvB,KAAKe,IAAIG,EAAanE,cAAchF,EAAIA,GACpDyJ,EAAWD,EAAY3O,KAAK6K,YAC5BgE,EAAOP,EAAanE,cAAchF,EAAIwJ,EACtCG,EAAOR,EAAanE,cAAcjF,EAAI0J,CACtC,IAAIK,GAAMjP,KAAK+N,eAAee,EAAMD,EAAMvB,EAC1CA,GAAO1F,KAAKqH,EAAI/J,EAAG+J,EAAI9J,GACvBH,EAAUa,SAAS+D,YAAYqF,OAC1B,IAAIF,EAAO,EAAG,CACnBH,EAAWxB,KAAKe,IAAIG,EAAanE,cAAcjF,EAAIA,GACnDyJ,EAAYC,EAAW5O,KAAK6K,YAC5BgE,EAAOP,EAAanE,cAAchF,EAAIwJ,EACtCG,EAAOR,EAAanE,cAAcjF,EAAI0J,CACtC,IAAIK,GAAMjP,KAAK+N,eAAee,EAAMD,EAAMvB,EAC1CA,GAAO1F,KAAKqH,EAAI/J,EAAG+J,EAAI9J,GACvBH,EAAUa,SAAS+D,YAAYqF,QAMjC,IAHAV,EAAKE,EAAM,IAAMzO,KAAK6K,YACtB2D,EAAKE,EAAM,IAAM1O,KAAK6K,YAAc7K,KAAK6K,aACzCkE,EAAO/O,KAAKgP,QAAQhK,EAAUa,SAASC,OAAOyI,EAAIC,GAAKF,EAAanE,cAAenF,EAAUa,SAASC,OAAOZ,EAAGC,KACrG,EAAG,CACZyJ,EAAWxB,KAAKe,IAAIG,EAAanE,cAAcjF,EAAIA,GACnDyJ,EAAYC,EAAW5O,KAAK6K,YAC5BgE,EAAOP,EAAanE,cAAchF,EAAIwJ,EACtCG,EAAOR,EAAanE,cAAcjF,EAAI0J,CACtC,IAAIK,GAAMjP,KAAK+N,eAAee,EAAMD,EAAMvB,EAC1CA,GAAO1F,KAAKqH,EAAI/J,EAAG+J,EAAI9J,GACvBH,EAAUa,SAAS+D,YAAYqF,OAC1B,IAAIF,EAAO,EAAG,CACnBJ,EAAYvB,KAAKe,IAAIG,EAAanE,cAAchF,EAAIA,GACpDyJ,EAAWD,EAAY3O,KAAK6K,YAC5BgE,EAAOP,EAAanE,cAAchF,EAAIwJ,EACtCG,EAAOR,EAAanE,cAAcjF,EAAI0J,CACtC,IAAIK,GAAMjP,KAAK+N,eAAee,EAAMD,EAAMvB,EAC1CA,GAAO1F,KAAKqH,EAAI/J,EAAG+J,EAAI9J,GACvBH,EAAUa,SAAS+D,YAAYqF,QAIhC,CACL,GAAIA,GAAMjP,KAAK+N,eAAe7I,EAAGC,EAAGmI,EACpCA,GAAO1F,KAAKqH,EAAI/J,EAAG+J,EAAI9J,GACvBH,EAAUa,SAAS+D,YAAYqF,GAEjCjP,KAAK4L,OAAOnC,oBAAoBzJ,KAAK0M,aACjC1M,KAAKS,MAAMQ,gBAAkBjB,KAAKkL,WACpClL,KAAKS,MAAMQ,eAAiBjB,KAAK8N,gBACjC9N,KAAKS,MAAMwC,WAIfzC,EAAaJ,UAAU4O,QAAU,SAASE,EAAGpP,EAAG6J,GAC9C,GAAIwF,GAAInP,KAAKoP,MAAMtP,EAAEoF,EAAIgK,EAAEhK,IAAMyE,EAAExE,EAAI+J,EAAE/J,IAAMrF,EAAEqF,EAAI+J,EAAE/J,IAAMwE,EAAEzE,EAAIgK,EAAEhK,GAIrE,OAFAF,GAAUa,SAAS+D,YAAYsF,GAC/BlK,EAAUa,SAAS+D,YAAYD,GACxBwF,GAGT3O,EAAaJ,UAAUgP,KAAO,SAASlK,GACrC,OAAKA,IAAMA,EACK,IAANA,EAAWA,EAAKA,EAAI,EAAK,GAAK,EAEjCmK,KAGT7O,EAAaJ,UAAUkP,cAAgB,SAASC,GAC9C,GAAoB,MAAhBA,EAAJ,CAIA,IAAK,GADDC,GAAQ,EACHjG,EAAI,EAAGA,EAAIvJ,KAAK8K,mBAAmBtB,OAAQD,IAC9CgG,EAAa/G,IAAMxI,KAAK8K,mBAAmBvB,GAAGf,KAChDxI,KAAK8K,mBAAmBvB,GAAGkG,WAAW1F,SAAQ,GAC9CwF,EAAaE,WAAa,KAC1BD,EAAQjG,EAGZvJ,MAAK8K,mBAAmB4E,OAAOF,EAAO,GACtCxP,KAAKkI,KAAKlI,KAAKqG,OAGjB7F,EAAaJ,UAAUuP,WAAa,SAASJ,GAE3C,IAAK,GADDK,IAAU,EACLrG,EAAI,EAAGA,EAAIvJ,KAAK8K,mBAAmBtB,OAAQD,IAClD,GAAIgG,EAAa/G,IAAMxI,KAAK8K,mBAAmBvB,GAAGf,IAA+C,MAAzCxI,KAAK8K,mBAAmBvB,GAAGkG,WAAqB,CACtG,GAAII,GAAY7P,KAAK8K,mBAAmBvB,GACpCuG,EAAmB9P,KAAK+P,cAAcR,EAAarK,EAAI2K,EAAUJ,WAAW3F,OAAO5E,EAAGqK,EAAapK,EAAI0K,EAAUJ,WAAW3F,OAAO3E,EACvIoK,GAAarK,EAAI4K,EAAiB5K,EAClCqK,EAAapK,EAAI2K,EAAiB3K,EAClCH,EAAUa,SAAS+D,YAAYkG,GAC3BD,EAAUJ,qBAAsBxJ,GAClCjG,KAAKqO,WAAWkB,EAAarK,EAAGqK,EAAapK,EAAG0K,EAAUJ,YAE1DzP,KAAKyN,SAAS8B,EAAarK,EAAGqK,EAAapK,EAAG0K,EAAUJ,YAE1DzP,KAAK8L,sBAAuB,EAC5B8D,GAAU,EACVhF,EAAsBN,WAAWtK,KAAKsC,OACtC,OAGJ,IAAKsN,EAAS,CACZ,IAAK,GAAIrC,GAAI,EAAGA,EAAIvN,KAAK2L,QAAQnC,OAAQ+D,IAAK,CAC5C,GAAID,GAAStN,KAAK2L,QAAQ4B,EAC1B,IAAID,EAAOpD,cAAcqF,EAAarK,EAAGqK,EAAapK,GAAI,CACxDoK,EAAaE,WAAanC,EAC1BtN,KAAK8K,mBAAmBzB,KAAKkG,GAC7BjC,EAAOvD,SAAQ,GACfwF,EAAaE,WAAW3F,OAAO5E,EAAIqK,EAAarK,EAAIqK,EAAaE,WAAWtF,cAAcjF,EAC1FqK,EAAaE,WAAW3F,OAAO3E,EAAIoK,EAAapK,EAAIoK,EAAaE,WAAWtF,cAAchF,EAC1FnF,KAAKqO,WAAWkB,EAAarK,EAAIqK,EAAaE,WAAW3F,OAAO5E,EAAGqK,EAAapK,EAAIoK,EAAaE,WAAW3F,OAAO3E,EAAGoK,EAAaE,WACnI,QAG2B,MAA3BF,EAAaE,YACXzP,KAAK4L,OAAO1B,cAAcqF,EAAarK,EAAGqK,EAAapK,KACzDoK,EAAaE,WAAazP,KAAK4L,OAC/B5L,KAAK8K,mBAAmBzB,KAAKkG,GAC7BA,EAAaE,WAAW1F,SAAQ,GAChCwF,EAAaE,WAAW3F,OAAO5E,EAAIqK,EAAarK,EAAIqK,EAAaE,WAAWtF,cAAcjF,EAC1FqK,EAAaE,WAAW3F,OAAO3E,EAAIoK,EAAapK,EAAIoK,EAAaE,WAAWtF,cAAchF,EAC1FnF,KAAKyN,SAAS8B,EAAarK,EAAIqK,EAAaE,WAAW3F,OAAO5E,EAAGqK,EAAapK,EAAIoK,EAAaE,WAAW3F,OAAO3E,EAAGoK,EAAaE,eAMzIjP,EAAaJ,UAAU4P,kBAAoB,WACzC,GAAIjP,GAAef,KAAKqC,SAASF,OAASnC,KAAKqC,SAASH,MACpD6K,EAAe/M,KAAKsC,OAAOH,OAASnC,KAAKsC,OAAOJ,MAChDyD,EAAI3F,KAAKsC,OAAOJ,MAChB0D,EAAI5F,KAAKsC,OAAOH,MAChB4K,GAAehM,GACjB4E,EAAI3F,KAAKsC,OAAOJ,MAChB0D,EAAI5F,KAAKsC,OAAOJ,MAAQnB,IAExB6E,EAAI5F,KAAKsC,OAAOH,OAChBwD,EAAI3F,KAAKsC,OAAOH,OAASpB,GAE3Bf,KAAK2N,UAAY3N,KAAKsC,OAAOJ,MAAQ,EAAIyD,EAAI,EAC7C3F,KAAK4N,UAAY5N,KAAKsC,OAAOH,OAAS,EAAIyD,EAAI,EAC9C5F,KAAK0N,UAAY1N,KAAKsC,OAAOJ,MAAQ,EAAIyD,EAAI,EAC7C3F,KAAK6N,UAAY7N,KAAKsC,OAAOH,OAAS,EAAIyD,EAAI,GAGhDpF,EAAaJ,UAAU0N,cAAgB,WACrC,GAAIlI,GAAI5F,KAAKsC,OAAOH,OAA2B,EAAjBnC,KAAK4N,UAC/BlE,EAAS1J,KAAK0M,WAKlB,OAJAhD,GAAOpE,IAAM8H,KAAK6C,OAAOrK,EAAI8D,EAAOpE,IAAMtF,KAAK4N,WAAa5N,KAAKiL,QACjEvB,EAAOnE,OAAS6H,KAAK6C,OAAOrK,EAAI8D,EAAOnE,OAASvF,KAAK4N,WAAa5N,KAAKiL,QACvEvB,EAAOtE,KAAOgI,KAAK6C,OAAOvG,EAAOtE,KAAOpF,KAAK2N,WAAa3N,KAAKgL,QAC/DtB,EAAOrE,MAAQ+H,KAAK6C,OAAOvG,EAAOrE,MAAQrF,KAAK2N,WAAa3N,KAAKgL,QAC1DtB,GAGTlJ,EAAaJ,UAAU2P,cAAgB,SAAS7K,EAAGC,GAajD,MAZID,GAAIlF,KAAK2N,YACXzI,EAAIlF,KAAK2N,WAEPzI,EAAIlF,KAAK0N,YACXxI,EAAIlF,KAAK0N,WAEPvI,EAAInF,KAAK4N,YACXzI,EAAInF,KAAK4N,WAEPzI,EAAInF,KAAK6N,YACX1I,EAAInF,KAAK6N,WAEJ7I,EAAUa,SAASC,OAAOZ,EAAGC,IAGtC3E,EAAaJ,UAAU8P,WAAa,WAClC,MAAOlQ,MAAKkL,UAGd1K,EAAaJ,UAAUoC,SAAW,SAAS2N,EAAKC,GAC9C,IAAKD,EACH,KAAM,eAERnQ,MAAKkL,UAAW,EAChBlL,KAAKqG,IAAIsG,UAAU,EAAG,EAAG3M,KAAKsC,OAAOJ,MAAOlC,KAAKsC,OAAOH,QACpCnC,KAAKoL,OAAO/C,WAAW,MAC7BsE,UAAU,EAAG,EAAG3M,KAAKoL,OAAOlJ,MAAOlC,KAAKoL,OAAOjJ,QACzDnC,KAAKqB,gBACPrB,KAAKyC,SAAWzC,KAAKqB,gBACG,aAAf+O,GAA6C,cAAfA,IACvCpQ,KAAKyC,SAAW2N,GAElBpQ,KAAKqC,SAAW8N,EAChBnQ,KAAKgQ,mBACL,IAAIjP,GAAef,KAAKqC,SAASF,OAASnC,KAAKqC,SAASH,MACpDmO,EAAarQ,KAAK0M,YAClB4D,EAAaD,EAAW5K,YAAc4K,EAAW7K,WACjDG,EAAI3F,KAAKsC,OAAOJ,MAChB0D,EAAI5F,KAAKsC,OAAOH,MACpBnC,MAAK4M,YAAcjH,EACnB3F,KAAK6M,aAAejH,CACpB,IAAI2K,GAAKvQ,KAAKsC,OAAOJ,MAAQ,EACzBsO,EAAKxQ,KAAKsC,OAAOH,OAAS,EAC1BsO,EAAQzL,EAAUa,SAASC,OAAOyK,EAAKF,EAAW7K,WAAa,EAAGgL,EAAKH,EAAW5K,YAAc,GAChGiL,EAAQ1L,EAAUa,SAASC,OAAOyK,EAAKF,EAAW7K,WAAa,EAAGgL,EAAKH,EAAW5K,YAAc,GAChGkL,EAAQ3L,EAAUa,SAASC,OAAOyK,EAAKF,EAAW7K,WAAa,EAAGgL,EAAKH,EAAW5K,YAAc,GAChGmL,EAAQ5L,EAAUa,SAASC,OAAOyK,EAAKF,EAAW7K,WAAa,EAAGgL,EAAKH,EAAW5K,YAAc,EAUpG,IATAzF,KAAKuL,GAAG7D,YAAY+I,EAAMvL,EAAGuL,EAAMtL,GACnCnF,KAAKwL,GAAG9D,YAAYgJ,EAAMxL,EAAGwL,EAAMvL,GACnCnF,KAAKyL,GAAG/D,YAAYiJ,EAAMzL,EAAGyL,EAAMxL,GACnCnF,KAAK0L,GAAGhE,YAAYkJ,EAAM1L,EAAG0L,EAAMzL,GACnCH,EAAUa,SAAS+D,YAAY6G,GAC/BzL,EAAUa,SAAS+D,YAAY8G,GAC/B1L,EAAUa,SAAS+D,YAAY+G,GAC/B3L,EAAUa,SAAS+D,YAAYgH,GAC/B5Q,KAAK4L,OAAOlE,YAAY6I,EAAIC,GACxBF,EAAavP,EAAc,CAC7B,GAAI8P,GAASzD,KAAK6B,IAAItJ,EAAI5E,EAAc6E,GACpCkL,EAAQD,EAASP,CACrBG,GAAQzL,EAAUa,SAASC,OAAOyK,EAAKO,EAAQ,EAAGN,EAAKK,EAAS,GAChEH,EAAQ1L,EAAUa,SAASC,OAAOyK,EAAKO,EAAQ,EAAGN,EAAKK,EAAS,GAChEF,EAAQ3L,EAAUa,SAASC,OAAOyK,EAAKO,EAAQ,EAAGN,EAAKK,EAAS,GAChED,EAAQ5L,EAAUa,SAASC,OAAOyK,EAAKO,EAAQ,EAAGN,EAAKK,EAAS,OAC3D,IAAIP,EAAavP,EAAc,CACpC,GAAIgQ,GAAS3D,KAAK6B,IAAIrJ,EAAI7E,EAAc4E,GACpCqL,EAAQD,EAAST,CACrBG,GAAQzL,EAAUa,SAASC,OAAOyK,EAAKQ,EAAS,EAAGP,EAAKQ,EAAQ,GAChEN,EAAQ1L,EAAUa,SAASC,OAAOyK,EAAKQ,EAAS,EAAGP,EAAKQ,EAAQ,GAChEL,EAAQ3L,EAAUa,SAASC,OAAOyK,EAAKQ,EAAS,EAAGP,EAAKQ,EAAQ,GAChEJ,EAAQ5L,EAAUa,SAASC,OAAOyK,EAAKQ,EAAS,EAAGP,EAAKQ,EAAQ,OAC3D,CACL,GAAID,GAAS3D,KAAK6B,IAAIrJ,EAAGD,GACrBqL,EAAQD,EAAST,CACrBG,GAAQzL,EAAUa,SAASC,OAAOyK,EAAKQ,EAAS,EAAGP,EAAKQ,EAAQ,GAChEN,EAAQ1L,EAAUa,SAASC,OAAOyK,EAAKQ,EAAS,EAAGP,EAAKQ,EAAQ,GAChEL,EAAQ3L,EAAUa,SAASC,OAAOyK,EAAKQ,EAAS,EAAGP,EAAKQ,EAAQ,GAChEJ,EAAQ5L,EAAUa,SAASC,OAAOyK,EAAKQ,EAAS,EAAGP,EAAKQ,EAAQ,GAUlE,GARAhR,KAAKuL,GAAG7D,YAAY+I,EAAMvL,EAAGuL,EAAMtL,GACnCnF,KAAKwL,GAAG9D,YAAYgJ,EAAMxL,EAAGwL,EAAMvL,GACnCnF,KAAKyL,GAAG/D,YAAYiJ,EAAMzL,EAAGyL,EAAMxL,GACnCnF,KAAK0L,GAAGhE,YAAYkJ,EAAM1L,EAAG0L,EAAMzL,GACnCH,EAAUa,SAAS+D,YAAY6G,GAC/BzL,EAAUa,SAAS+D,YAAY8G,GAC/B1L,EAAUa,SAAS+D,YAAY+G,GAC/B3L,EAAUa,SAAS+D,YAAYgH,GAC3B5Q,KAAKS,MAAMQ,oBAAqD4B,KAAnC7C,KAAKS,MAAMQ,eAAemE,UAAwDvC,KAAlC7C,KAAKS,MAAMQ,eAAeqE,SAAyDzC,KAApC7C,KAAKS,MAAMQ,eAAeoE,WAA4DxC,KAArC7C,KAAKS,MAAMQ,eAAesE,OAAsB,CAC5MvF,KAAK6M,aAAe7M,KAAK4M,YACzB7L,GACjB4E,EAAI3F,KAAK4M,YACThH,EAAI5F,KAAK4M,YAAc7L,IAEvB6E,EAAI5F,KAAK6M,aACTlH,EAAI3F,KAAK6M,aAAe9L,GAE1Bf,KAAKgL,OAASrF,EAAI3F,KAAKqC,SAASH,MAChClC,KAAKiL,OAASrF,EAAI5F,KAAKqC,SAASF,MAChC,IAAIuH,GAAS,GAAIzE,EACjByE,GAAOpE,IAAM8H,KAAK6C,MAAMrK,EAAI5F,KAAK4N,UAAY5N,KAAKiL,OAASjL,KAAKS,MAAMQ,eAAeqE,KACrFoE,EAAOnE,OAAS6H,KAAK6C,MAAMrK,EAAI5F,KAAK4N,UAAY5N,KAAKiL,OAASjL,KAAKS,MAAMQ,eAAesE,QACxFmE,EAAOtE,KAAOgI,KAAK6C,MAAMjQ,KAAKgL,OAAShL,KAAKS,MAAMQ,eAAemE,KAAOpF,KAAK2N,WAC7EjE,EAAOrE,MAAQ+H,KAAK6C,MAAMjQ,KAAKgL,OAAShL,KAAKS,MAAMQ,eAAeoE,MAAQrF,KAAK2N,WAC/E3N,KAAKuL,GAAG7D,YAAYgC,EAAOtE,KAAMsE,EAAOpE,KACxCtF,KAAKwL,GAAG9D,YAAYgC,EAAOrE,MAAOqE,EAAOpE,KACzCtF,KAAKyL,GAAG/D,YAAYgC,EAAOtE,KAAMsE,EAAOnE,QACxCvF,KAAK0L,GAAGhE,YAAYgC,EAAOrE,MAAOqE,EAAOnE,QACzCvF,KAAK4L,OAAOlE,YAAYgC,EAAOtE,KAAOsE,EAAOlE,WAAa,EAAGkE,EAAOpE,IAAMoE,EAAOjE,YAAc,GAEjGzF,KAAKiR,gBAAkBjR,KAAKkR,qBAAqBlR,KAAKqC,UACtDrC,KAAKkI,KAAKlI,KAAKqG,IACf,IAAI8K,GAAanR,KAAKoR,gBAAgBpR,KAAKS,MAAMG,UAAWZ,KAAKS,MAAMI,gBAC7CgC,KAAtB7C,KAAK6B,MAAMlB,SACbX,KAAKS,MAAME,OAASwQ,EAAWjO,KAE7BlD,KAAKS,MAAMQ,gBAAkBjB,KAAKkL,WACpClL,KAAKS,MAAMQ,eAAiBjB,KAAK8N,kBAIrCtN,EAAaJ,UAAUgR,gBAAkB,SAASC,EAAWC,GAC3D,GAAI5H,GAAS1J,KAAK0M,WAClB,KAAK1M,KAAKqC,SACR,KAAM,uBAGR,IAAItB,GAAef,KAAKqC,SAASF,OAASnC,KAAKqC,SAASH,MACpD6K,EAAe/M,KAAKsC,OAAOH,OAASnC,KAAKsC,OAAOJ,MAChDyD,EAAI3F,KAAKsC,OAAOJ,MAChB0D,EAAI5F,KAAKsC,OAAOH,MAsBpB,IArBI4K,EAAehM,GACf4E,EAAI3F,KAAKsC,OAAOJ,MAChB0D,EAAI5F,KAAKsC,OAAOJ,MAAQnB,GACjBgM,EAAehM,GACtB6E,EAAI5F,KAAKsC,OAAOH,OAChBwD,EAAI3F,KAAKsC,OAAOH,OAASpB,IAEzB6E,EAAI5F,KAAKsC,OAAOH,OAChBwD,EAAI3F,KAAKsC,OAAOJ,OAEpBlC,KAAKgL,OAASrF,EAAI3F,KAAKqC,SAASH,MAChClC,KAAKiL,OAASrF,EAAI5F,KAAKqC,SAASF,OAE5BnC,KAAKoB,kBACPiQ,GAAY,EAELrR,KAAKe,eACVsQ,EAAYjE,KAAK6C,MAAM7C,KAAKC,IAAI3D,EAAOlE,WAAY,GAAKxF,KAAKgL,QAC7DsG,EAAalE,KAAK6C,MAAM7C,KAAKC,IAAI3D,EAAOjE,YAAa,GAAKzF,KAAKiL,SAG/DoG,GAAaC,EAAY,CAC3BtR,KAAKsL,WAAWpJ,MAAQmP,EACxBrR,KAAKsL,WAAWnJ,OAASmP,CACzB,IAAIC,IAAWvR,KAAKoL,OAAOjJ,OAASyD,GAAK,EAAI5F,KAAKiL,OAC9CuG,GAAWxR,KAAKoL,OAAOlJ,MAAQyD,GAAK,EAAI3F,KAAKgL,MACjDhL,MAAKkN,gBAAgBlN,KAAKsL,WAAWjD,WAAW,MAAOrI,KAAKqC,SAAU+K,KAAKC,IAAID,KAAK6C,MAAOvG,EAAO,KAAQ1J,KAAKgL,OAASwG,GAAU,GAAIpE,KAAKC,IAAID,KAAK6C,MAAMvG,EAAOpE,IAAMtF,KAAKiL,OAASsG,GAAU,GAAInE,KAAKC,IAAID,KAAK6C,MAAMvG,EAAOlE,WAAaxF,KAAKgL,QAAS,GAAIoC,KAAKC,IAAID,KAAK6C,MAAMvG,EAAOjE,YAAczF,KAAKiL,QAAS,GAAI,EAAG,EAAGoG,EAAWC,GACzUtR,KAAK6L,aAAa3J,MAAQmP,EAC1BrR,KAAK6L,aAAa1J,OAASmP,MAE3BtR,MAAKsL,WAAWpJ,MAAQkL,KAAKC,IAAI3D,EAAOlE,WAAY,GACpDxF,KAAKsL,WAAWnJ,OAASiL,KAAKC,IAAI3D,EAAOjE,YAAa,GACtDzF,KAAKsL,WAAWjD,WAAW,MAAM8E,UAAUnN,KAAKoL,OAAQ1B,EAAOtE,KAAMsE,EAAOpE,IAAK8H,KAAKC,IAAI3D,EAAOlE,WAAY,GAAI4H,KAAKC,IAAI3D,EAAOjE,YAAa,GAAI,EAAG,EAAGiE,EAAOlE,WAAYkE,EAAOjE,aAClLzF,KAAK6L,aAAa3J,MAAQlC,KAAKsL,WAAWpJ,MAC1ClC,KAAK6L,aAAa1J,OAASnC,KAAKsL,WAAWnJ,MAG7C,OADAnC,MAAK6L,aAAa3I,IAAMlD,KAAKsL,WAAWmG,UAAUzR,KAAKyC,UAChDzC,KAAK6L,cAGdrL,EAAaJ,UAAUsM,UAAY,WAKjC,IAAK,GAJDgF,GAAOC,OAAOC,UACdC,EAAOF,OAAOC,UACdE,GAAQH,OAAOC,UACfG,GAAQJ,OAAOC,UACVrE,EAAI,EAAGA,EAAIvN,KAAK2L,QAAQnC,OAAQ+D,IAAK,CAC5C,GAAID,GAAStN,KAAK2L,QAAQ4B,EACtBD,GAAOnD,cAAcjF,EAAIwM,IAC3BA,EAAOpE,EAAOnD,cAAcjF,GAE1BoI,EAAOnD,cAAcjF,EAAI4M,IAC3BA,EAAOxE,EAAOnD,cAAcjF,GAE1BoI,EAAOnD,cAAchF,EAAI0M,IAC3BA,EAAOvE,EAAOnD,cAAchF,GAE1BmI,EAAOnD,cAAchF,EAAI4M,IAC3BA,EAAOzE,EAAOnD,cAAchF,GAGhC,GAAIuE,GAAS,GAAIzE,EAKjB,OAJAyE,GAAOtE,KAAOsM,EACdhI,EAAOrE,MAAQyM,EACfpI,EAAOpE,IAAMuM,EACbnI,EAAOnE,OAASwM,EACTrI,GAGTlJ,EAAaJ,UAAU4R,UAAY,SAAStI,GAM1C,IAAK,GALDuI,GACAC,EACAC,EACAC,EACAC,EAAgBrS,KAAK0M,YAChBa,EAAI,EAAGA,EAAIvN,KAAK2L,QAAQnC,OAAQ+D,IAAK,CAC5C,GAAID,GAAStN,KAAK2L,QAAQ4B,EACtBD,GAAOnD,cAAcjF,GAAKmN,EAAcjN,KACtCkI,EAAOnD,cAAchF,GAAKkN,EAAc/M,IAC1C2M,EAAU3E,EAEV6E,EAAa7E,EAGXA,EAAOnD,cAAchF,GAAKkN,EAAc/M,IAC1C4M,EAAW5E,EAEX8E,EAAc9E,EAIpB2E,EAAQvK,YAAYgC,EAAOtE,KAAMsE,EAAOpE,KACxC4M,EAASxK,YAAYgC,EAAOrE,MAAOqE,EAAOpE,KAC1C6M,EAAWzK,YAAYgC,EAAOtE,KAAMsE,EAAOnE,QAC3C6M,EAAY1K,YAAYgC,EAAOrE,MAAOqE,EAAOnE,QAC7CvF,KAAK4L,OAAOnC,oBAAoBC,GAChC1J,KAAK4L,OAAO1D,KAAKlI,KAAKqG,MAGxB7F,EAAaJ,UAAUkS,YAAc,SAAShQ,EAAQiQ,GACpD,GAAIC,GAAOlQ,EAAOmQ,wBACdC,EAAK1N,EAAUa,SAASC,OAAOyM,EAAII,QAAUH,EAAKpN,KAAMmN,EAAIK,QAAUJ,EAAKlN,IAC/E,IAAIoN,EAAI,CACN,GAAIzF,GAAK3K,EAAOH,OAASG,EAAOuQ,aAC5B7F,EAAK1K,EAAOJ,MAAQI,EAAOwQ,WAC/BJ,GAAG1J,MAAMgE,EAAIC,GAEf,MAAOyF,IAGTlS,EAAaJ,UAAU2S,YAAc,SAASzQ,EAAQ0Q,GACpD,GAAIR,GAAOlQ,EAAOmQ,uBAClB,OAAOzN,GAAUa,SAASC,OAAOkN,EAAML,QAAUH,EAAKpN,KAAM4N,EAAMJ,QAAUJ,EAAKlN,MAGnF9E,EAAaJ,UAAUmM,YAAc,SAAS0G,GAC5C,IAAK7P,WAAapD,KAAKkQ,aAAc,CACnC+C,EAAEC,gBAIF,IAAIC,GAAU5T,EAAQ6T,UAAUH,EAAEE,SAAWF,EAAEE,QAAUF,EAAEI,cAAcF,OACzE,IAAIA,EAAQ3J,QAAU,EACpB,IAAK,GAAI+D,GAAI,EAAGA,EAAI4F,EAAQ3J,OAAQ+D,IAAK,CACvC,GAAIyF,GAAQG,EAAQ5F,GAChB+F,EAAgBtT,KAAK+S,YAAY/S,KAAKsC,OAAQ0Q,GAC9CO,EAAY,GAAIhL,GAAU+K,EAAcpO,EAAEoO,EAAcnO,EAAE6N,EAAMQ,WACpExO,GAAUa,SAAS+D,YAAY0J,GAC/BtT,KAAK4H,KAAK2L,EAAWN,GAGzBjT,KAAKkI,KAAKlI,KAAKqG,OAInB7F,EAAaJ,UAAU+L,YAAc,SAAS8G,GAC5C,GAAIjT,KAAKkQ,aAAc,CACrB,GAAIuD,GAAgBzT,KAAKsS,YAAYtS,KAAKsC,OAAQ2Q,EAClDjT,MAAK4H,KAAK,GAAIW,GAAUkL,EAAcvO,EAAEuO,EAActO,EAAE,GAAI8N,EAC5D,IAAIpD,GAAY7P,KAAK0T,kBAAkB,EACnC7D,IACFA,EAAU3K,EAAIuO,EAAcvO,EAC5B2K,EAAU1K,EAAIsO,EAActO,GAE5B0K,EAAY,GAAItH,GAAUkL,EAAcvO,EAAEuO,EAActO,EAAE,GAE5DH,EAAUa,SAAS+D,YAAY6J,GAC/BzT,KAAK2T,YAAY9D,EAAWoD,GAC5BjT,KAAKkI,KAAKlI,KAAKqG,OAInB7F,EAAaJ,UAAUwH,KAAO,SAAS2L,EAAWN,GAC5CjT,KAAK+K,aACP/K,KAAK2P,WAAW4D,IAIpB/S,EAAaJ,UAAUsT,kBAAoB,SAASlL,GAClD,IAAK,GAAI+E,GAAI,EAAGA,EAAIvN,KAAK8K,mBAAmBtB,OAAQ+D,IAClD,GAAI/E,GAAMxI,KAAK8K,mBAAmByC,GAAG/E,GACnC,MAAOxI,MAAK8K,mBAAmByC,IAKrC/M,EAAaJ,UAAUuT,YAAc,SAASJ,EAAWN,GACvD,GAAIW,IAAc,CACD,OAAbL,IACEA,EAAU9D,YAAczP,KAAK4L,SAC/BhB,EAAsBJ,SAASxK,KAAKsC,OAAQ,QAC5CsR,GAAc,GAEY,MAAxBL,EAAU9D,YAAsB8D,EAAU9D,qBAAsBxJ,KAClEjG,KAAK6T,iBAAiBN,EAAU9D,WAAY8D,EAAU9D,WAAWtF,cAAcjF,EAAGqO,EAAU9D,WAAWtF,cAAchF,EAAG8N,GACxHW,GAAc,GAGlB,IAAIE,IAAU,CACd,KAAKF,EAAa,CAChB,IAAK,GAAIrG,GAAI,EAAGA,EAAIvN,KAAK2L,QAAQnC,OAAQ+D,IACvCuG,EAAUA,GAAW9T,KAAK6T,iBAAiB7T,KAAK2L,QAAQ4B,GAAIgG,EAAUrO,EAAGqO,EAAUpO,EAAG8N,EAEnFa,IACHlJ,EAAsBJ,SAASxK,KAAKsC,OAAQ,QAG3CwR,GAAYF,IAAe5T,KAAK4L,OAAO1B,cAAcqJ,EAAUrO,EAAGqO,EAAUpO,GAK/EnF,KAAK4L,OAAO3B,SAAQ,IAJpBjK,KAAK4L,OAAO3B,SAAQ,GACpBW,EAAsBX,QAAQjK,KAAKsC,QACnCsI,EAAsBJ,SAASxK,KAAKsC,OAAQ,UAMhD9B,EAAaJ,UAAUyT,iBAAmB,SAASvG,EAAQpI,EAAGC,EAAG8N,GAC/D,MAAI3F,GAAOpD,cAAchF,EAAGC,IAC1BmI,EAAOrD,SAAQ,GACXqD,EAAOtF,yBAAyBmC,cAAcjF,EAAIoI,EAAOnD,cAAcjF,EACrEoI,EAAOrF,uBAAuBkC,cAAchF,EAAImI,EAAOnD,cAAchF,GACvEyF,EAAsBX,QAAQjK,KAAKsC,QACnCsI,EAAsBJ,SAASxK,KAAKsC,OAAQ,iBAE5CsI,EAAsBX,QAAQjK,KAAKsC,QACnCsI,EAAsBJ,SAASxK,KAAKsC,OAAQ,gBAG1CgL,EAAOrF,uBAAuBkC,cAAchF,EAAImI,EAAOnD,cAAchF,GACvEyF,EAAsBX,QAAQjK,KAAKsC,QACnCsI,EAAsBJ,SAASxK,KAAKsC,OAAQ,iBAE5CsI,EAAsBX,QAAQjK,KAAKsC,QACnCsI,EAAsBJ,SAASxK,KAAKsC,OAAQ,iBAGzC,IAETgL,EAAOrD,SAAQ,IACR,IAGTzJ,EAAaJ,UAAUkM,aAAe,SAAS2G,GACzCjT,KAAKkQ,eACPlQ,KAAK+K,aAAc,IAIvBvK,EAAaJ,UAAUoM,WAAa,SAASyG,GAC3C,GAAIjT,KAAKkQ,aAAc,CAKrB,IAAK,GADD6D,GAAiBxU,EAAQ6T,UAAUH,EAAEc,gBAAkBd,EAAEc,eAAiBd,EAAEI,cAAcU,eACrFxG,EAAI,EAAGA,EAAIwG,EAAevK,OAAQ+D,IAAK,CAC9C,GAAIyF,GAAQe,EAAexG,GACvBsC,EAAY7P,KAAK0T,kBAAkBV,EAAMQ,WAC5B,OAAb3D,KACEA,EAAUJ,qBAAsBxJ,IAAgB4J,EAAUJ,qBAAsBhH,KAClFoH,EAAUJ,WAAWxF,SAAQ,GAE/BjK,KAAKsP,cAAcO,IAGvB,GAAI7P,KAAKkQ,cAAgBlQ,KAAK8L,qBAAsB,CAClD,GAAIqE,GAAMnQ,KAAKoR,gBAAgBpR,KAAKS,MAAMG,UAAWZ,KAAKS,MAAMI,gBACtCgC,KAAtB7C,KAAK6B,MAAMlB,SACbX,KAAKS,MAAME,OAASwP,EAAIjN,KAE1BlD,KAAKS,MAAMwC,SAEyB,GAAlCjD,KAAK8K,mBAAmBtB,SAC1BxJ,KAAK+K,aAAc,EACnB/K,KAAK8L,sBAAuB,KAMlCtL,EAAaJ,UAAU8M,gBAAkB,SAAS7G,EAAK8J,EAAKnD,EAAIC,EAAI+G,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAItFhO,EAAI8G,UAAUgD,EAAKnD,EAAKhN,KAAKiR,gBAAiBhE,EAAKjN,KAAKiR,gBAAiB+C,EAAKhU,KAAKiR,gBAAiBgD,EAAKjU,KAAKiR,gBAAiBiD,EAAIC,EAAIC,EAAIC,IAG7I7T,EAAaJ,UAAU8Q,qBAAuB,SAASf,GACrD,GACImE,IADKnE,EAAIoE,aACJpE,EAAIqE,eACTlS,EAASqB,SAAS0H,cAAc,SACpC/I,GAAOJ,MAAQ,EACfI,EAAOH,OAASmS,CAChB,IAAIjO,GAAM/D,EAAO+F,WAAW,KAC5BhC,GAAI8G,UAAUgD,EAAK,EAAG,EAMtB,KALA,GAAI5N,GAAO8D,EAAIoO,aAAa,EAAG,EAAG,EAAGH,GAAI/R,KAErC0K,EAAK,EACLyH,EAAKJ,EACLK,EAAKL,EACFK,EAAK1H,GAAI,CAEA,IADF1K,EAAgB,GAAVoS,EAAK,GAAS,GAE9BD,EAAKC,EAEL1H,EAAK0H,EAEPA,EAAMD,EAAKzH,GAAO,EAEpB,GAAI2H,GAASD,EAAKL,CAClB,OAAkB,KAAVM,EAAe,EAAIA,GAG7BpU,EAAaJ,UAAUiM,YAAc,SAAS4G,GACxCjT,KAAKkQ,eACPlQ,KAAK+K,aAAc,IAIvBvK,EAAaJ,UAAUgM,UAAY,SAAS6G,GAC1C,GAAIjT,KAAKkQ,aAAc,CAIrB,GAHAtF,EAAsBL,YAAYvK,KAAKsC,QACvCtC,KAAK+K,aAAc,EACnB/K,KAAKsP,cAAc,GAAI/G,GAAU,EAAE,EAAE,IACJ,GAA7BvI,KAAK8L,qBAA8B,CACrC,GAAIqE,GAAMnQ,KAAKoR,gBAAgBpR,KAAKS,MAAMG,UAAWZ,KAAKS,MAAMI,gBACtCgC,KAAtB7C,KAAK6B,MAAMlB,SACbX,KAAKS,MAAME,OAASwP,EAAIjN,KAE1BlD,KAAKS,MAAMwC,SAEbjD,KAAK8L,sBAAuB,IAIzBtL,MAERjB,QAASA,QAAQqC,QAASrC,QAAQG,OAAO,wBAG5C,SAAWH,EAASC,EAAGC,GACrB,YAEAA,GAAIE,QAAQ,aAAA,QAAa,SAAUkK,GAEjC,QAAS7E,GAAU6P,GACjB7U,KAAK8U,SAAW,EAChB9P,EAAUa,SAAW7F,IAErB,KAAK,GADD+U,GAAO,KACFxH,EAAI,EAAGA,EAAIsH,EAAMtH,IACxB,GAAU,IAANA,EACFvN,KAAKgV,eAAiB,GAAInL,GAC1BkL,EAAO/U,KAAKgV,mBAET,CACH,GAAI9U,GAAI,GAAI2J,EACZkL,GAAKE,QAAQ/U,GACb6U,EAAO7U,GAuBb,MAlBA8E,GAAU5E,UAAU0F,OAAS,SAAUZ,EAAGC,GACxC,GAA2B,MAAvBnF,KAAKgV,eACP,KAAM,gBAERhV,MAAK8U,UACL,IAAI5U,GAAIF,KAAKgV,cAIb,OAHAhV,MAAKgV,eAAiB9U,EAAEgV,UACxBhV,EAAEgF,EAAIA,EACNhF,EAAEiF,EAAIA,EACCjF,GAET8E,EAAU5E,UAAUwJ,YAAc,SAAU1J,GAC1CF,KAAK8U,WACL5U,EAAEgF,EAAI,EACNhF,EAAEiF,EAAI,EACNjF,EAAE+U,QAAQjV,KAAKgV,gBACfhV,KAAKgV,eAAiB9U,GAEjB8E,MAIRzF,QAASA,QAAQqC,QAASrC,QAAQG,OAAO,wBAE5C,SAAWH,EAASC,EAAGC,GACrB,YAEAA,GAAIE,QAAQ,QAAS,WAEnB,QAASkK,GAAM3E,EAAGC,OACN,KAAND,IACFA,EAAI,OAEI,KAANC,IACFA,EAAI,GAENnF,KAAKkF,EAAIA,EACTlF,KAAKmF,EAAIA,EAeX,MAZA0E,GAAMzJ,UAAU6U,QAAU,SAAU/U,GAClCF,KAAKmV,KAAOjV,GAEd2J,EAAMzJ,UAAU8U,QAAU,WACxB,MAAOlV,MAAKmV,MAGdtL,EAAMzJ,UAAU4I,MAAQ,SAAS9D,EAAGC,GAClCnF,KAAKkF,GAAKA,EACVlF,KAAKmF,GAAKA,GAGL0E,KAIRtK,QAASA,QAAQqC,QAASrC,QAAQG,OAAO","file":"angular-img-cropper.js","sourcesContent":["(function (angular, $) {\n  'use strict';\n\n  var mod = angular.module('angular-img-cropper', []);\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////\n\n  mod.factory('__extends', function () {\n\n    var __extends = __extends || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() {\n        this.constructor = d;\n      }\n\n      __.prototype = b.prototype;\n      d.prototype = new __();\n    };\n\n    return __extends;\n  });\n\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // mod.directive(\"canvasResponsive\", function($window) {\n  //   return {\n  //     restrict: 'A',\n  //     link: function($scope, $element, $attrs) {\n        \n  //       var canvas = $element.find('canvas')[0];\n  //       var element = $element[0];\n  //       var ratio = canvas.offsetHeight / canvas.offsetWidth;\n\n  //       function scale() {\n  //         canvas.width = element.offsetWidth;\n  //         canvas.height = canvas.width * ratio;\n  //         console.log(canvas.width);\n  //         console.log(canvas.height);\n  //       } \n\n  //       scale();\n\n  //       $(window).bind('resize', function() {\n        \n  //         scale();\n\n\n  //       });\n\n  //     }\n  //   };\n  // });\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////\n\n  mod.directive(\"imgCropper\", function ($document, $window, ImageCropper) {\n    return {\n      scope: {\n        imgSrc: \"=\",\n        imgDst: \"=\",\n        cropWidth: \"=\",\n        cropHeight: \"=\",\n        keepAspect: \"=\",\n        sourceAspect: \"=\",\n        touchRadius: \"=\",\n        cropAreaBounds: \"=\",\n        minWidth: \"=\",\n        minHeight: \"=\",\n        enforceCropAspect: \"=\",\n        enforceFileType: \"@\",\n        color: \"@\",\n        colorDrag: \"@\",\n        colorBg: '@',\n        colorCropBg: '@'\n      },\n      restrict: \"A\",\n      link: function (scope, element, attrs) {\n\n        var crop, destroyed = false;\n        var canvas = element[0];\n\n        scope.color = scope.color || 'rgba(90,90,90,0.75)';\n        scope.colorDrag = scope.colorDrag || 'rgba(0, 0, 0, 0.7)';\n        scope.colorBg = scope.colorBg || 'rgba(192,192,192,1)';\n        scope.colorCropBg = scope.colorCropBg || 'rgba(0, 0, 0, 0.7)';\n\n        scope.$on('$destroy', function () {\n          destroyed = true;\n        });\n\n        function setup(newValue, oldValue) {\n          if (crop && newValue === oldValue) {\n            return;\n          }\n\n\n          var width = scope.cropWidth;\n          var height = scope.cropHeight;\n          var keepAspect = scope.keepAspect;\n          var sourceAspect = scope.sourceAspect;\n          var touchRadius = scope.touchRadius;\n          var oldImage = crop && crop.srcImage;\n\n          crop = new ImageCropper(canvas, canvas.width / 2 - width / 2, canvas.height / 2 - height / 2, width, height, keepAspect, sourceAspect, touchRadius, scope, attrs);\n\n          $(canvas).data('crop.angular-img-cropper', crop);\n\n          if (oldImage) {\n            crop.setImage(oldImage, scope.imgSrc.fileType);\n          } else {\n            load(scope.imgSrc);\n          }\n        }\n\n        function load(newValue) {\n          if (!newValue) {\n            return;\n          }\n\n          var imageObj = new Image();\n\n          if (attrs.cors !== undefined && attrs.cors !== \"no\") {\n            imageObj.crossOrigin = \"Anonymous\";\n          }\n\n          imageObj.addEventListener(\"load\", function () {\n            crop.setImage(imageObj, newValue.fileType);\n            scope.$apply();\n          }, false);\n          imageObj.src = newValue.imageData;\n        }\n\n        scope.$watch('cropWidth', setup);\n        scope.$watch('cropHeight', setup);\n        scope.$watch('keepAspect', setup);\n        scope.$watch('touchRadius', setup);\n\n\n        scope.$watch('imgSrc', load);\n\n      }\n    };\n  });\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////\n\n})(angular, angular.element);\n\n\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.directive('imgCropperFilereadCall', function factory() {\n    return {\n      scope: {\n        control: '='\n      },\n      link: function (scope) {\n        scope.internalControl = scope.control || {};\n        scope.internalControl.load = function (elem) {\n\n          var elemental = angular.element(document.querySelector(elem));\n          var ev = document.createEvent(\"MouseEvent\");\n          ev.initEvent(\"click\", true, false);\n          elemental[0].dispatchEvent(ev);\n        };\n      }\n    };\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.directive(\"imgCropperFileread\", function ($timeout) {\n    return {\n      scope: {\n        image: \"=\"\n      },\n      link: function (scope, element) {\n        element.bind(\"change\", function (changeEvent) {\n          var reader = new FileReader();\n          var eventThis = this;\n          reader.onload = function (loadEvent) {\n            $timeout(function () {\n              var thisHook = eventThis;\n              scope.image = {\n                'imageData': loadEvent.target.result,\n                'fileType': thisHook.fileType\n              };\n            }, 0);\n          };\n          if (changeEvent.target.files[0]) {\n            eventThis.fileType = changeEvent.target.files[0].type;\n            reader.readAsDataURL(changeEvent.target.files[0]);\n          }\n        });\n      }\n    };\n  });\n\n  \n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('Bounds', function (PointPool) {\n\n    function Bounds(x, y, width, height) {\n      if (x === void 0) {\n        x = 0;\n      }\n      if (y === void 0) {\n        y = 0;\n      }\n      if (width === void 0) {\n        width = 0;\n      }\n      if (height === void 0) {\n        height = 0;\n      }\n      this.left = x;\n      this.right = x + width;\n      this.top = y;\n      this.bottom = y + height;\n    }\n\n    Bounds.prototype.getWidth = function () {\n      return this.right - this.left;\n    };\n    Bounds.prototype.getHeight = function () {\n      return this.bottom - this.top;\n    };\n    Bounds.prototype.getCentre = function () {\n      var w = this.getWidth();\n      var h = this.getHeight();\n      return PointPool.instance.borrow(this.left + (w / 2), this.top + (h / 2));\n    };\n    return Bounds;\n\n\n\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('CornerMarker', function(Handle, __extends) {\n     var CornerMarker = (function (_super) {\n          __extends(CornerMarker, _super);\n          function CornerMarker(x, y, radius, color, colorCropBg) {\n            _super.call(this, x, y, radius);\n            this.color = color | 'rgba(90,90,90,0.75)';\n            this.colorCropBg = colorCropBg | 'rgba(0,0,0,1)';\n          }\n\n          CornerMarker.prototype.drawCornerBorder = function (ctx) {\n            var sideLength = 10;\n            if (this.over || this.drag) {\n              sideLength = 12;\n            }\n            var hDirection = 1;\n            var vDirection = 1;\n            if (this.horizontalNeighbour.position.x < this.position.x) {\n              hDirection = -1;\n            }\n            if (this.verticalNeighbour.position.y < this.position.y) {\n              vDirection = -1;\n            }\n            ctx.beginPath();\n            ctx.lineJoin = \"miter\";\n            ctx.moveTo(this.position.x, this.position.y);\n            ctx.lineTo(this.position.x + (sideLength * hDirection), this.position.y);\n            ctx.lineTo(this.position.x + (sideLength * hDirection), this.position.y + (sideLength * vDirection));\n            ctx.lineTo(this.position.x, this.position.y + (sideLength * vDirection));\n            ctx.lineTo(this.position.x, this.position.y);\n            ctx.closePath();\n            ctx.lineWidth = 2;\n            ctx.strokeStyle = this.color;\n            ctx.stroke();\n          };\n          CornerMarker.prototype.drawCornerFill = function (ctx) {\n            var sideLength = 10;\n            if (this.over || this.drag) {\n              sideLength = 12;\n            }\n            var hDirection = 1;\n            var vDirection = 1;\n            if (this.horizontalNeighbour.position.x < this.position.x) {\n              hDirection = -1;\n            }\n            if (this.verticalNeighbour.position.y < this.position.y) {\n              vDirection = -1;\n            }\n            ctx.beginPath();\n            ctx.moveTo(this.position.x, this.position.y);\n            ctx.lineTo(this.position.x + (sideLength * hDirection), this.position.y);\n            ctx.lineTo(this.position.x + (sideLength * hDirection), this.position.y + (sideLength * vDirection));\n            ctx.lineTo(this.position.x, this.position.y + (sideLength * vDirection));\n            ctx.lineTo(this.position.x, this.position.y);\n            ctx.closePath();\n            ctx.fillStyle = this.colorCropBg;\n            ctx.fill();\n          };\n          CornerMarker.prototype.moveX = function (x) {\n            this.setPosition(x, this.position.y);\n          };\n          CornerMarker.prototype.moveY = function (y) {\n            this.setPosition(this.position.x, y);\n          };\n          CornerMarker.prototype.move = function (x, y) {\n            this.setPosition(x, y);\n            this.verticalNeighbour.moveX(x);\n            this.horizontalNeighbour.moveY(y);\n          };\n          CornerMarker.prototype.addHorizontalNeighbour = function (neighbour) {\n            this.horizontalNeighbour = neighbour;\n          };\n          CornerMarker.prototype.addVerticalNeighbour = function (neighbour) {\n            this.verticalNeighbour = neighbour;\n          };\n          CornerMarker.prototype.getHorizontalNeighbour = function () {\n            return this.horizontalNeighbour;\n          };\n          CornerMarker.prototype.getVerticalNeighbour = function () {\n            return this.verticalNeighbour;\n          };\n          CornerMarker.prototype.draw = function (ctx) {\n            this.drawCornerFill(ctx);\n            this.drawCornerBorder(ctx);\n          };\n          return CornerMarker;\n        })(Handle);\n\n        return CornerMarker;\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('CropService', function () {\n\n    function CropService() {\n    }\n\n    CropService.init = function (canvas) {\n      this.canvas = canvas;\n      this.ctx = this.canvas.getContext(\"2d\");\n    };\n    CropService.DEG2RAD = 0.0174532925;\n    return CropService;\n\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('CropTouch', function () {\n    function CropTouch(x, y, id) {\n      if (x === void 0) {\n        x = 0;\n      }\n      if (y === void 0) {\n        y = 0;\n      }\n      if (id === void 0) {\n        id = 0;\n      }\n      this.id = 0;\n      this.x = x;\n      this.y = y;\n      this.id = id;\n    }\n\n    return CropTouch;\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('DragMarker', function (Handle, __extends, PointPool) {\n    var DragMarker = (function (_super) {\n      __extends(DragMarker, _super);\n      function DragMarker(x, y, radius, color) {\n        _super.call(this, x, y, radius);\n        this.iconPoints = new Array();\n        this.scaledIconPoints = new Array();\n        this.getDragIconPoints(this.iconPoints, 1);\n        this.getDragIconPoints(this.scaledIconPoints, 1.2);\n        this.color = color || 'rgba(90, 90, 90, 0.75)';\n      }\n\n      DragMarker.prototype.draw = function (ctx) {\n        if (this.over || this.drag) {\n          this.drawIcon(ctx, this.scaledIconPoints);\n        }\n        else {\n          this.drawIcon(ctx, this.iconPoints);\n        }\n      };\n      DragMarker.prototype.getDragIconPoints = function (arr, scale) {\n        var maxLength = 17 * scale;\n        var arrowWidth = 14 * scale;\n        var arrowLength = 8 * scale;\n        var connectorThroat = 4 * scale;\n        arr.push(PointPool.instance.borrow(-connectorThroat / 2, maxLength - arrowLength));\n        arr.push(PointPool.instance.borrow(-arrowWidth / 2, maxLength - arrowLength));\n        arr.push(PointPool.instance.borrow(0, maxLength));\n        arr.push(PointPool.instance.borrow(arrowWidth / 2, maxLength - arrowLength));\n        arr.push(PointPool.instance.borrow(connectorThroat / 2, maxLength - arrowLength));\n        arr.push(PointPool.instance.borrow(connectorThroat / 2, connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(maxLength - arrowLength, connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(maxLength - arrowLength, arrowWidth / 2));\n        arr.push(PointPool.instance.borrow(maxLength, 0));\n        arr.push(PointPool.instance.borrow(maxLength - arrowLength, -arrowWidth / 2));\n        arr.push(PointPool.instance.borrow(maxLength - arrowLength, -connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(connectorThroat / 2, -connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(connectorThroat / 2, -maxLength + arrowLength));\n        arr.push(PointPool.instance.borrow(arrowWidth / 2, -maxLength + arrowLength));\n        arr.push(PointPool.instance.borrow(0, -maxLength));\n        arr.push(PointPool.instance.borrow(-arrowWidth / 2, -maxLength + arrowLength));\n        arr.push(PointPool.instance.borrow(-connectorThroat / 2, -maxLength + arrowLength));\n        arr.push(PointPool.instance.borrow(-connectorThroat / 2, -connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(-maxLength + arrowLength, -connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(-maxLength + arrowLength, -arrowWidth / 2));\n        arr.push(PointPool.instance.borrow(-maxLength, 0));\n        arr.push(PointPool.instance.borrow(-maxLength + arrowLength, arrowWidth / 2));\n        arr.push(PointPool.instance.borrow(-maxLength + arrowLength, connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(-connectorThroat / 2, connectorThroat / 2));\n      };\n      DragMarker.prototype.drawIcon = function (ctx, points) {\n        ctx.beginPath();\n        ctx.moveTo(points[0].x + this.position.x, points[0].y + this.position.y);\n        for (var k = 0; k < points.length; k++) {\n          var p = points[k];\n          ctx.lineTo(p.x + this.position.x, p.y + this.position.y);\n        }\n        ctx.closePath();\n        ctx.fillStyle = this.color;\n        ctx.fill();\n      };\n      DragMarker.prototype.recalculatePosition = function (bounds) {\n        var c = bounds.getCentre();\n        this.setPosition(c.x, c.y);\n        PointPool.instance.returnPoint(c);\n      };\n      return DragMarker;\n    })(Handle);\n\n    return DragMarker;\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n  \n  mod.factory('Handle', function (Point) {\n\n    function Handle(x, y, radius) {\n      this.over = false;\n      this.drag = false;\n      this.position = new Point(x, y);\n      this.offset = new Point(0, 0);\n      this.radius = radius;\n    }\n\n    Handle.prototype.setDrag = function (value) {\n      this.drag = value;\n      this.setOver(value);\n    };\n    Handle.prototype.draw = function (ctx) {\n    };\n    Handle.prototype.setOver = function (over) {\n      this.over = over;\n    };\n    Handle.prototype.touchInBounds = function (x, y) {\n      return (x > this.position.x - this.radius && x < this.position.x + this.radius && y > this.position.y - this.radius && y < this.position.y + this.radius);\n    };\n    Handle.prototype.getPosition = function () {\n      return this.position;\n    };\n    Handle.prototype.setPosition = function (x, y) {\n      this.position.x = x;\n      this.position.y = y;\n    };\n    \n    return Handle;\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('imageCropperDataShare', function () {\n\n    var share = {};\n    var pressed;\n    var over;\n    share.setPressed = function (canvas) {\n      pressed = canvas;\n    };\n\n    share.setReleased = function (canvas) {\n      if (canvas === pressed) {\n        pressed = undefined;\n      }\n    };\n\n    share.setOver = function (canvas) {\n      over = canvas;\n    };\n\n    share.setStyle = function (canvas, style) {\n      if (pressed !== undefined) {\n        if (pressed === canvas) {\n          angular.element(document.documentElement).css('cursor', style);\n        }\n      }\n      else {\n        if (canvas === over) {\n          angular.element(document.documentElement).css('cursor', style);\n        }\n      }\n    };\n    return share;\n\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n(function(angular, $, mod) {\n  'use strict';\n  mod.factory('ImageCropper', function(__extends, Handle, Point, PointPool, CropService, DragMarker, CornerMarker, Bounds, CropTouch, imageCropperDataShare) {\n    function ImageCropper(canvas, x, y, width, height, keepAspect, sourceAspect, touchRadius, scope, attrs) {\n      if (x === void 0) {\n        x = 0;\n      }\n      if (y === void 0) {\n        y = 0;\n      }\n      if (width === void 0) {\n        width = 100;\n      }\n      if (height === void 0) {\n        height = 50;\n      }\n      if (keepAspect === void 0) {\n        keepAspect = true;\n      }\n      if (touchRadius === void 0) {\n        touchRadius = 20;\n      }\n      this.scope = scope;\n      this.attrs = attrs;\n      this.keepAspect = false;\n      this.aspectRatio = 0;\n      this.currentDragTouches = new Array();\n      this.isMouseDown = false;\n      this.ratioW = 1;\n      this.ratioH = 1;\n      this.fileType = 'image/png';\n      this.imageSet = false;\n      this.pointPool = new PointPool(200);\n      CropService.init(canvas);\n      this.buffer = document.createElement('canvas');\n      this.cropCanvas = document.createElement('canvas');\n      this.buffer.width = canvas.width;\n      this.buffer.height = canvas.height;\n      this.tl = new CornerMarker(x,y,touchRadius, this.scope.colorDrag, this.scope.colorCropBg);\n      this.tr = new CornerMarker(x + width,y,touchRadius, this.scope.colorDrag, this.scope.colorCropBg);\n      this.bl = new CornerMarker(x,y + height,touchRadius, this.scope.colorDrag, this.scope.colorCropBg);\n      this.br = new CornerMarker(x + width,y + height,touchRadius, this.scope.colorDrag, this.scope.colorCropBg);\n      this.tl.addHorizontalNeighbour(this.tr);\n      this.tl.addVerticalNeighbour(this.bl);\n      this.tr.addHorizontalNeighbour(this.tl);\n      this.tr.addVerticalNeighbour(this.br);\n      this.bl.addHorizontalNeighbour(this.br);\n      this.bl.addVerticalNeighbour(this.tl);\n      this.br.addHorizontalNeighbour(this.bl);\n      this.br.addVerticalNeighbour(this.tr);\n      this.markers = [this.tl, this.tr, this.bl, this.br];\n      // TODO: pass color to dragmarker\n      this.center = new DragMarker(x + (width / 2),y + (height / 2),touchRadius, this.scope.colorDrag);\n      this.canvas = canvas;\n      this.ctx = this.canvas.getContext(\"2d\");\n      this.keepAspect = keepAspect;\n      this.sourceAspect = sourceAspect || false;\n      this.aspectRatio = height / width;\n      this.draw(this.ctx);\n      this.croppedImage = new Image();\n      this.currentlyInteracting = false;\n      this.enforceCropAspect = this.scope.enforceCropAspect || false;\n      this.enforceFileType = this.scope.enforceFileType ? 'image/' + this.scope.enforceFileType : undefined;\n      if (window.jQuery) {\n        angular.element(window).off('mousemove.angular-img-cropper mouseup.angular-img-cropper').on('mousemove.angular-img-cropper', this.onMouseMove.bind(this)).on('mouseup.angular-img-cropper', this.onMouseUp.bind(this));\n        angular.element(canvas).off('mousedown.angular-img-cropper touchstart.angular-img-cropper  touchmove.angular-img-cropper touchend.angular-img-cropper').on('mousedown.angular-img-cropper', this.onMouseDown.bind(this)).on('touchstart.angular-img-cropper', this.onTouchStart.bind(this)).on('touchmove.angular-img-cropper', this.onTouchMove.bind(this)).on('touchend.angular-img-cropper', this.onTouchEnd.bind(this));\n      } else {\n        window.addEventListener('mousemove', this.onMouseMove.bind(this));\n        window.addEventListener('mouseup', this.onMouseUp.bind(this));\n        canvas.addEventListener('mousedown', this.onMouseDown.bind(this));\n        canvas.addEventListener('touchmove', this.onTouchMove.bind(this), false);\n        canvas.addEventListener('touchstart', this.onTouchStart.bind(this), false);\n        canvas.addEventListener('touchend', this.onTouchEnd.bind(this), false);\n      }\n    }\n    ImageCropper.prototype.resizeCanvas = function(width, height) {\n      this.canvas.width = width;\n      this.canvas.height = height;\n      this.buffer.width = width;\n      this.buffer.height = height;\n      this.draw(this.ctx);\n    }\n    ;\n    ImageCropper.prototype.draw = function(ctx) {\n      var bounds = this.getBounds();\n      if (this.srcImage) {\n        ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        ctx.fillStyle = this.scope.colorBg;\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        var sourceAspect = this.srcImage.height / this.srcImage.width;\n        var canvasAspect = this.canvasHeight / this.canvasWidth;\n        var w = this.canvasWidth;\n        var h = this.canvasHeight;\n        var sx = 0;\n        var sy = 0;\n        if (canvasAspect > sourceAspect) {\n          w = this.canvasWidth;\n          h = this.canvasWidth * sourceAspect;\n        } else {\n          h = this.canvasHeight;\n          w = this.canvasHeight / sourceAspect;\n        }\n        this.ratioW = w / this.srcImage.width;\n        this.ratioH = h / this.srcImage.height;\n        if (canvasAspect < sourceAspect) {\n          sx = this.buffer.width / 2 - w / 2;\n        } else {\n          sy = this.buffer.height / 2 - h / 2;\n        }\n        this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, sx, sy, w, h);\n        this.buffer.getContext('2d').drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\n        ctx.fillStyle = this.scope.colorCropBg;\n        ctx.fillRect(sx, sy, w, h);\n        ctx.drawImage(this.buffer, bounds.left, bounds.top, Math.max(bounds.getWidth(), 1), Math.max(bounds.getHeight(), 1), bounds.left, bounds.top, bounds.getWidth(), bounds.getHeight());\n        var marker;\n        for (var i = 0; i < this.markers.length; i++) {\n          marker = this.markers[i];\n          marker.draw(ctx);\n        }\n        this.center.draw(ctx);\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = this.scope.color;\n        ctx.strokeRect(bounds.left, bounds.top, bounds.getWidth(), bounds.getHeight());\n      } else {\n        ctx.fillStyle = this.scope.colorBg;\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n      }\n    }\n    ;\n    ImageCropper.prototype.dragCrop = function(x, y, marker) {\n      var bounds = this.getBounds();\n      var left = x - (bounds.getWidth() / 2);\n      var right = x + (bounds.getWidth() / 2);\n      var top = y - (bounds.getHeight() / 2);\n      var bottom = y + (bounds.getHeight() / 2);\n      if (right >= this.maxXClamp) {\n        x = this.maxXClamp - bounds.getWidth() / 2;\n      }\n      if (left <= this.minXClamp) {\n        x = bounds.getWidth() / 2 + this.minXClamp;\n      }\n      if (top < this.minYClamp) {\n        y = bounds.getHeight() / 2 + this.minYClamp;\n      }\n      if (bottom >= this.maxYClamp) {\n        y = this.maxYClamp - bounds.getHeight() / 2;\n      }\n      this.tl.moveX(x - (bounds.getWidth() / 2));\n      this.tl.moveY(y - (bounds.getHeight() / 2));\n      this.tr.moveX(x + (bounds.getWidth() / 2));\n      this.tr.moveY(y - (bounds.getHeight() / 2));\n      this.bl.moveX(x - (bounds.getWidth() / 2));\n      this.bl.moveY(y + (bounds.getHeight() / 2));\n      this.br.moveX(x + (bounds.getWidth() / 2));\n      this.br.moveY(y + (bounds.getHeight() / 2));\n      marker.setPosition(x, y);\n      if (this.scope.cropAreaBounds && this.imageSet) {\n        this.scope.cropAreaBounds = this.getCropBounds();\n        this.scope.$apply();\n      }\n    }\n    ;\n    ImageCropper.prototype.enforceMinSize = function(x, y, marker) {\n      var xLength = x - marker.getHorizontalNeighbour().getPosition().x;\n      var yLength = y - marker.getVerticalNeighbour().getPosition().y;\n      var xOver = this.scope.minWidth - Math.abs(xLength);\n      var yOver = this.scope.minHeight - Math.abs(yLength);\n      if (xLength == 0 || yLength == 0) {\n        x = marker.getPosition().x;\n        y = marker.getPosition().y;\n        return PointPool.instance.borrow(x, y);\n      }\n      if (this.scope.keepAspect) {\n        if (xOver > 0 && (yOver / this.aspectRatio) > 0) {\n          if (xOver > (yOver / this.aspectRatio)) {\n            if (xLength < 0) {\n              x -= xOver;\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            } else {\n              x += xOver;\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            }\n          } else {\n            if (yLength < 0) {\n              y -= yOver;\n              if (xLength < 0) {\n                x -= yOver / this.aspectRatio;\n              } else {\n                x += yOver / this.aspectRatio;\n              }\n            } else {\n              y += yOver;\n              if (xLength < 0) {\n                x -= yOver / this.aspectRatio;\n              } else {\n                x += yOver / this.aspectRatio;\n              }\n            }\n          }\n        } else {\n          if (xOver > 0) {\n            if (xLength < 0) {\n              x -= xOver;\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            } else {\n              x += xOver;\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            }\n          } else if (yOver > 0) {\n            if (yLength < 0) {\n              y -= yOver;\n              if (xLength < 0) {\n                x -= yOver / this.aspectRatio;\n              } else {\n                x += yOver / this.aspectRatio;\n              }\n            } else {\n              y += yOver;\n              if (xLength < 0) {\n                x -= yOver / this.aspectRatio;\n              } else {\n                x += yOver / this.aspectRatio;\n              }\n            }\n          }\n        }\n      } else {\n        if (xOver > 0) {\n          if (xLength < 0) {\n            x -= xOver;\n          } else {\n            x += xOver;\n          }\n        }\n        if (yOver > 0) {\n          if (yLength < 0) {\n            y -= yOver;\n          } else {\n            y += yOver;\n          }\n        }\n      }\n      if (x < this.minXClamp || x > this.maxXClamp || y < this.minYClamp || y > this.maxYClamp) {\n        x = marker.getPosition().x;\n        y = marker.getPosition().y;\n      }\n      return PointPool.instance.borrow(x, y);\n    }\n    ;\n    ImageCropper.prototype.dragCorner = function(x, y, marker) {\n      var iX = 0;\n      var iY = 0;\n      var ax = 0;\n      var ay = 0;\n      var newHeight = 0;\n      var newWidth = 0;\n      var newY = 0;\n      var newX = 0;\n      var anchorMarker;\n      var fold = 0;\n      if (this.scope.keepAspect) {\n        anchorMarker = marker.getHorizontalNeighbour().getVerticalNeighbour();\n        ax = anchorMarker.getPosition().x;\n        ay = anchorMarker.getPosition().y;\n        if (x <= anchorMarker.getPosition().x) {\n          if (y <= anchorMarker.getPosition().y) {\n            iX = ax - (100 / this.aspectRatio);\n            iY = ay - (100 / this.aspectRatio * this.aspectRatio);\n            fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.getPosition(), PointPool.instance.borrow(x, y));\n            if (fold > 0) {\n              newHeight = Math.abs(anchorMarker.getPosition().y - y);\n              newWidth = newHeight / this.aspectRatio;\n              newY = anchorMarker.getPosition().y - newHeight;\n              newX = anchorMarker.getPosition().x - newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            } else if (fold < 0) {\n              newWidth = Math.abs(anchorMarker.getPosition().x - x);\n              newHeight = newWidth * this.aspectRatio;\n              newY = anchorMarker.getPosition().y - newHeight;\n              newX = anchorMarker.getPosition().x - newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            }\n          } else {\n            iX = ax - (100 / this.aspectRatio);\n            iY = ay + (100 / this.aspectRatio * this.aspectRatio);\n            fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.getPosition(), PointPool.instance.borrow(x, y));\n            if (fold > 0) {\n              newWidth = Math.abs(anchorMarker.getPosition().x - x);\n              newHeight = newWidth * this.aspectRatio;\n              newY = anchorMarker.getPosition().y + newHeight;\n              newX = anchorMarker.getPosition().x - newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            } else if (fold < 0) {\n              newHeight = Math.abs(anchorMarker.getPosition().y - y);\n              newWidth = newHeight / this.aspectRatio;\n              newY = anchorMarker.getPosition().y + newHeight;\n              newX = anchorMarker.getPosition().x - newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            }\n          }\n        } else {\n          if (y <= anchorMarker.getPosition().y) {\n            iX = ax + (100 / this.aspectRatio);\n            iY = ay - (100 / this.aspectRatio * this.aspectRatio);\n            fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.getPosition(), PointPool.instance.borrow(x, y));\n            if (fold < 0) {\n              newHeight = Math.abs(anchorMarker.getPosition().y - y);\n              newWidth = newHeight / this.aspectRatio;\n              newY = anchorMarker.getPosition().y - newHeight;\n              newX = anchorMarker.getPosition().x + newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            } else if (fold > 0) {\n              newWidth = Math.abs(anchorMarker.getPosition().x - x);\n              newHeight = newWidth * this.aspectRatio;\n              newY = anchorMarker.getPosition().y - newHeight;\n              newX = anchorMarker.getPosition().x + newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            }\n          } else {\n            iX = ax + (100 / this.aspectRatio);\n            iY = ay + (100 / this.aspectRatio * this.aspectRatio);\n            fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.getPosition(), PointPool.instance.borrow(x, y));\n            if (fold < 0) {\n              newWidth = Math.abs(anchorMarker.getPosition().x - x);\n              newHeight = newWidth * this.aspectRatio;\n              newY = anchorMarker.getPosition().y + newHeight;\n              newX = anchorMarker.getPosition().x + newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            } else if (fold > 0) {\n              newHeight = Math.abs(anchorMarker.getPosition().y - y);\n              newWidth = newHeight / this.aspectRatio;\n              newY = anchorMarker.getPosition().y + newHeight;\n              newX = anchorMarker.getPosition().x + newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            }\n          }\n        }\n      } else {\n        var min = this.enforceMinSize(x, y, marker);\n        marker.move(min.x, min.y);\n        PointPool.instance.returnPoint(min);\n      }\n      this.center.recalculatePosition(this.getBounds());\n      if (this.scope.cropAreaBounds && this.imageSet) {\n        this.scope.cropAreaBounds = this.getCropBounds();\n        this.scope.$apply();\n      }\n    }\n    ;\n    ImageCropper.prototype.getSide = function(a, b, c) {\n      var n = this.sign((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x));\n      //TODO move the return of the pools to outside of this function\n      PointPool.instance.returnPoint(a);\n      PointPool.instance.returnPoint(c);\n      return n;\n    }\n    ;\n    ImageCropper.prototype.sign = function(x) {\n      if (+x === x) {\n        return (x === 0) ? x : (x > 0) ? 1 : -1;\n      }\n      return NaN;\n    }\n    ;\n    ImageCropper.prototype.handleRelease = function(newCropTouch) {\n      if (newCropTouch == null ) {\n        return;\n      }\n      var index = 0;\n      for (var k = 0; k < this.currentDragTouches.length; k++) {\n        if (newCropTouch.id == this.currentDragTouches[k].id) {\n          this.currentDragTouches[k].dragHandle.setDrag(false);\n          newCropTouch.dragHandle = null ;\n          index = k;\n        }\n      }\n      this.currentDragTouches.splice(index, 1);\n      this.draw(this.ctx);\n    }\n    ;\n    ImageCropper.prototype.handleMove = function(newCropTouch) {\n      var matched = false;\n      for (var k = 0; k < this.currentDragTouches.length; k++) {\n        if (newCropTouch.id == this.currentDragTouches[k].id && this.currentDragTouches[k].dragHandle != null ) {\n          var dragTouch = this.currentDragTouches[k];\n          var clampedPositions = this.clampPosition(newCropTouch.x - dragTouch.dragHandle.offset.x, newCropTouch.y - dragTouch.dragHandle.offset.y);\n          newCropTouch.x = clampedPositions.x;\n          newCropTouch.y = clampedPositions.y;\n          PointPool.instance.returnPoint(clampedPositions);\n          if (dragTouch.dragHandle instanceof CornerMarker) {\n            this.dragCorner(newCropTouch.x, newCropTouch.y, dragTouch.dragHandle);\n          } else {\n            this.dragCrop(newCropTouch.x, newCropTouch.y, dragTouch.dragHandle);\n          }\n          this.currentlyInteracting = true;\n          matched = true;\n          imageCropperDataShare.setPressed(this.canvas);\n          break;\n        }\n      }\n      if (!matched) {\n        for (var i = 0; i < this.markers.length; i++) {\n          var marker = this.markers[i];\n          if (marker.touchInBounds(newCropTouch.x, newCropTouch.y)) {\n            newCropTouch.dragHandle = marker;\n            this.currentDragTouches.push(newCropTouch);\n            marker.setDrag(true);\n            newCropTouch.dragHandle.offset.x = newCropTouch.x - newCropTouch.dragHandle.getPosition().x;\n            newCropTouch.dragHandle.offset.y = newCropTouch.y - newCropTouch.dragHandle.getPosition().y;\n            this.dragCorner(newCropTouch.x - newCropTouch.dragHandle.offset.x, newCropTouch.y - newCropTouch.dragHandle.offset.y, newCropTouch.dragHandle);\n            break;\n          }\n        }\n        if (newCropTouch.dragHandle == null ) {\n          if (this.center.touchInBounds(newCropTouch.x, newCropTouch.y)) {\n            newCropTouch.dragHandle = this.center;\n            this.currentDragTouches.push(newCropTouch);\n            newCropTouch.dragHandle.setDrag(true);\n            newCropTouch.dragHandle.offset.x = newCropTouch.x - newCropTouch.dragHandle.getPosition().x;\n            newCropTouch.dragHandle.offset.y = newCropTouch.y - newCropTouch.dragHandle.getPosition().y;\n            this.dragCrop(newCropTouch.x - newCropTouch.dragHandle.offset.x, newCropTouch.y - newCropTouch.dragHandle.offset.y, newCropTouch.dragHandle);\n          }\n        }\n      }\n    }\n    ;\n    ImageCropper.prototype.updateClampBounds = function() {\n      var sourceAspect = this.srcImage.height / this.srcImage.width;\n      var canvasAspect = this.canvas.height / this.canvas.width;\n      var w = this.canvas.width;\n      var h = this.canvas.height;\n      if (canvasAspect > sourceAspect) {\n        w = this.canvas.width;\n        h = this.canvas.width * sourceAspect;\n      } else {\n        h = this.canvas.height;\n        w = this.canvas.height / sourceAspect;\n      }\n      this.minXClamp = this.canvas.width / 2 - w / 2;\n      this.minYClamp = this.canvas.height / 2 - h / 2;\n      this.maxXClamp = this.canvas.width / 2 + w / 2;\n      this.maxYClamp = this.canvas.height / 2 + h / 2;\n    }\n    ;\n    ImageCropper.prototype.getCropBounds = function() {\n      var h = this.canvas.height - (this.minYClamp * 2);\n      var bounds = this.getBounds();\n      bounds.top = Math.round((h - bounds.top + this.minYClamp) / this.ratioH);\n      bounds.bottom = Math.round((h - bounds.bottom + this.minYClamp) / this.ratioH);\n      bounds.left = Math.round((bounds.left - this.minXClamp) / this.ratioW);\n      bounds.right = Math.round((bounds.right - this.minXClamp) / this.ratioW);\n      return bounds;\n    }\n    ;\n    ImageCropper.prototype.clampPosition = function(x, y) {\n      if (x < this.minXClamp) {\n        x = this.minXClamp;\n      }\n      if (x > this.maxXClamp) {\n        x = this.maxXClamp;\n      }\n      if (y < this.minYClamp) {\n        y = this.minYClamp;\n      }\n      if (y > this.maxYClamp) {\n        y = this.maxYClamp;\n      }\n      return PointPool.instance.borrow(x, y);\n    }\n    ;\n    ImageCropper.prototype.isImageSet = function() {\n      return this.imageSet;\n    }\n    ;\n    ImageCropper.prototype.setImage = function(img, srcFileType) {\n      if (!img) {\n        throw \"Image is null\";\n      }\n      this.imageSet = true;\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      var bufferContext = this.buffer.getContext('2d');\n      bufferContext.clearRect(0, 0, this.buffer.width, this.buffer.height);\n      if (this.enforceFileType) {\n        this.fileType = this.enforceFileType;\n      } else if (srcFileType == 'image/png' || srcFileType == 'image/jpeg') {\n        this.fileType = srcFileType;\n      }\n      this.srcImage = img;\n      this.updateClampBounds();\n      var sourceAspect = this.srcImage.height / this.srcImage.width;\n      var cropBounds = this.getBounds();\n      var cropAspect = cropBounds.getHeight() / cropBounds.getWidth();\n      var w = this.canvas.width;\n      var h = this.canvas.height;\n      this.canvasWidth = w;\n      this.canvasHeight = h;\n      var cX = this.canvas.width / 2;\n      var cY = this.canvas.height / 2;\n      var tlPos = PointPool.instance.borrow(cX - cropBounds.getWidth() / 2, cY + cropBounds.getHeight() / 2);\n      var trPos = PointPool.instance.borrow(cX + cropBounds.getWidth() / 2, cY + cropBounds.getHeight() / 2);\n      var blPos = PointPool.instance.borrow(cX - cropBounds.getWidth() / 2, cY - cropBounds.getHeight() / 2);\n      var brPos = PointPool.instance.borrow(cX + cropBounds.getWidth() / 2, cY - cropBounds.getHeight() / 2);\n      this.tl.setPosition(tlPos.x, tlPos.y);\n      this.tr.setPosition(trPos.x, trPos.y);\n      this.bl.setPosition(blPos.x, blPos.y);\n      this.br.setPosition(brPos.x, brPos.y);\n      PointPool.instance.returnPoint(tlPos);\n      PointPool.instance.returnPoint(trPos);\n      PointPool.instance.returnPoint(blPos);\n      PointPool.instance.returnPoint(brPos);\n      this.center.setPosition(cX, cY);\n      if (cropAspect > sourceAspect) {\n        var imageH = Math.min(w * sourceAspect, h);\n        var cropW = imageH / cropAspect;\n        tlPos = PointPool.instance.borrow(cX - cropW / 2, cY + imageH / 2);\n        trPos = PointPool.instance.borrow(cX + cropW / 2, cY + imageH / 2);\n        blPos = PointPool.instance.borrow(cX - cropW / 2, cY - imageH / 2);\n        brPos = PointPool.instance.borrow(cX + cropW / 2, cY - imageH / 2);\n      } else if (cropAspect < sourceAspect) {\n        var imageW = Math.min(h / sourceAspect, w);\n        var cropH = imageW * cropAspect;\n        tlPos = PointPool.instance.borrow(cX - imageW / 2, cY + cropH / 2);\n        trPos = PointPool.instance.borrow(cX + imageW / 2, cY + cropH / 2);\n        blPos = PointPool.instance.borrow(cX - imageW / 2, cY - cropH / 2);\n        brPos = PointPool.instance.borrow(cX + imageW / 2, cY - cropH / 2);\n      } else {\n        var imageW = Math.min(h, w);\n        var cropH = imageW * cropAspect;\n        tlPos = PointPool.instance.borrow(cX - imageW / 2, cY + cropH / 2);\n        trPos = PointPool.instance.borrow(cX + imageW / 2, cY + cropH / 2);\n        blPos = PointPool.instance.borrow(cX - imageW / 2, cY - cropH / 2);\n        brPos = PointPool.instance.borrow(cX + imageW / 2, cY - cropH / 2);\n      }\n      this.tl.setPosition(tlPos.x, tlPos.y);\n      this.tr.setPosition(trPos.x, trPos.y);\n      this.bl.setPosition(blPos.x, blPos.y);\n      this.br.setPosition(brPos.x, brPos.y);\n      PointPool.instance.returnPoint(tlPos);\n      PointPool.instance.returnPoint(trPos);\n      PointPool.instance.returnPoint(blPos);\n      PointPool.instance.returnPoint(brPos);\n      if (this.scope.cropAreaBounds && this.scope.cropAreaBounds.left !== undefined && this.scope.cropAreaBounds.top !== undefined && this.scope.cropAreaBounds.right !== undefined && this.scope.cropAreaBounds.bottom !== undefined) {\n        var canvasAspect = this.canvasHeight / this.canvasWidth;\n        if (canvasAspect > sourceAspect) {\n          w = this.canvasWidth;\n          h = this.canvasWidth * sourceAspect;\n        } else {\n          h = this.canvasHeight;\n          w = this.canvasHeight / sourceAspect;\n        }\n        this.ratioW = w / this.srcImage.width;\n        this.ratioH = h / this.srcImage.height;\n        var bounds = new Bounds();\n        bounds.top = Math.round(h + this.minYClamp - this.ratioH * this.scope.cropAreaBounds.top);\n        bounds.bottom = Math.round(h + this.minYClamp - this.ratioH * this.scope.cropAreaBounds.bottom);\n        bounds.left = Math.round(this.ratioW * this.scope.cropAreaBounds.left + this.minXClamp);\n        bounds.right = Math.round(this.ratioW * this.scope.cropAreaBounds.right + this.minXClamp);\n        this.tl.setPosition(bounds.left, bounds.top);\n        this.tr.setPosition(bounds.right, bounds.top);\n        this.bl.setPosition(bounds.left, bounds.bottom);\n        this.br.setPosition(bounds.right, bounds.bottom);\n        this.center.setPosition(bounds.left + bounds.getWidth() / 2, bounds.top + bounds.getHeight() / 2);\n      }\n      this.vertSquashRatio = this.detectVerticalSquash(this.srcImage);\n      this.draw(this.ctx);\n      var croppedImg = this.getCroppedImage(this.scope.cropWidth, this.scope.cropHeight);\n      if (this.attrs.imgDst !== undefined) {\n        this.scope.imgDst = croppedImg.src;\n      }\n      if (this.scope.cropAreaBounds && this.imageSet) {\n        this.scope.cropAreaBounds = this.getCropBounds();\n      }\n    }\n    ;\n    ImageCropper.prototype.getCroppedImage = function(fillWidth, fillHeight) {\n      var bounds = this.getBounds();\n      if (!this.srcImage) {\n        throw \"Source image not set.\";\n      }\n\n      var sourceAspect = this.srcImage.height / this.srcImage.width;\n      var canvasAspect = this.canvas.height / this.canvas.width;\n      var w = this.canvas.width;\n      var h = this.canvas.height;\n      if (canvasAspect > sourceAspect) {\n          w = this.canvas.width;\n          h = this.canvas.width * sourceAspect;\n      } else if (canvasAspect < sourceAspect) {\n          h = this.canvas.height;\n          w = this.canvas.height / sourceAspect;\n      } else {\n          h = this.canvas.height;\n          w = this.canvas.width;\n      }\n      this.ratioW = w / this.srcImage.width;\n      this.ratioH = h / this.srcImage.height;\n\n      if (this.enforceCropAspect) {\n        fillWidth = false;\n      }\n      else if (this.sourceAspect) {\n          fillWidth = Math.round(Math.max(bounds.getWidth(), 1) / this.ratioW);\n          fillHeight = Math.round(Math.max(bounds.getHeight(), 1) / this.ratioH);\n      }\n\n      if (fillWidth && fillHeight) {\n        this.cropCanvas.width = fillWidth;\n        this.cropCanvas.height = fillHeight;\n        var offsetH = (this.buffer.height - h) / 2 / this.ratioH;\n        var offsetW = (this.buffer.width - w) / 2 / this.ratioW;\n        this.drawImageIOSFix(this.cropCanvas.getContext('2d'), this.srcImage, Math.max(Math.round((bounds.left) / this.ratioW - offsetW), 0), Math.max(Math.round(bounds.top / this.ratioH - offsetH), 0), Math.max(Math.round(bounds.getWidth() / this.ratioW), 1), Math.max(Math.round(bounds.getHeight() / this.ratioH), 1), 0, 0, fillWidth, fillHeight);\n        this.croppedImage.width = fillWidth;\n        this.croppedImage.height = fillHeight;\n      } else {\n        this.cropCanvas.width = Math.max(bounds.getWidth(), 1);\n        this.cropCanvas.height = Math.max(bounds.getHeight(), 1);\n        this.cropCanvas.getContext('2d').drawImage(this.buffer, bounds.left, bounds.top, Math.max(bounds.getWidth(), 1), Math.max(bounds.getHeight(), 1), 0, 0, bounds.getWidth(), bounds.getHeight());\n        this.croppedImage.width = this.cropCanvas.width;\n        this.croppedImage.height = this.cropCanvas.height;\n      }\n      this.croppedImage.src = this.cropCanvas.toDataURL(this.fileType);\n      return this.croppedImage;\n    }\n    ;\n    ImageCropper.prototype.getBounds = function() {\n      var minX = Number.MAX_VALUE;\n      var minY = Number.MAX_VALUE;\n      var maxX = -Number.MAX_VALUE;\n      var maxY = -Number.MAX_VALUE;\n      for (var i = 0; i < this.markers.length; i++) {\n        var marker = this.markers[i];\n        if (marker.getPosition().x < minX) {\n          minX = marker.getPosition().x;\n        }\n        if (marker.getPosition().x > maxX) {\n          maxX = marker.getPosition().x;\n        }\n        if (marker.getPosition().y < minY) {\n          minY = marker.getPosition().y;\n        }\n        if (marker.getPosition().y > maxY) {\n          maxY = marker.getPosition().y;\n        }\n      }\n      var bounds = new Bounds();\n      bounds.left = minX;\n      bounds.right = maxX;\n      bounds.top = minY;\n      bounds.bottom = maxY;\n      return bounds;\n    }\n    ;\n    ImageCropper.prototype.setBounds = function(bounds) {\n      var topLeft;\n      var topRight;\n      var bottomLeft;\n      var bottomRight;\n      var currentBounds = this.getBounds();\n      for (var i = 0; i < this.markers.length; i++) {\n        var marker = this.markers[i];\n        if (marker.getPosition().x == currentBounds.left) {\n          if (marker.getPosition().y == currentBounds.top) {\n            topLeft = marker;\n          } else {\n            bottomLeft = marker;\n          }\n        } else {\n          if (marker.getPosition().y == currentBounds.top) {\n            topRight = marker;\n          } else {\n            bottomRight = marker;\n          }\n        }\n      }\n      topLeft.setPosition(bounds.left, bounds.top);\n      topRight.setPosition(bounds.right, bounds.top);\n      bottomLeft.setPosition(bounds.left, bounds.bottom);\n      bottomRight.setPosition(bounds.right, bounds.bottom);\n      this.center.recalculatePosition(bounds);\n      this.center.draw(this.ctx);\n    }\n    ;\n    ImageCropper.prototype.getMousePos = function(canvas, evt) {\n      var rect = canvas.getBoundingClientRect();\n      var pt = PointPool.instance.borrow(evt.clientX - rect.left, evt.clientY - rect.top);\n      if (pt) {\n        var sy = canvas.height / canvas.offsetHeight;\n        var sx = canvas.width / canvas.offsetWidth;\n        pt.scale(sx, sy);\n      }\n      return pt;\n    }\n    ;\n    ImageCropper.prototype.getTouchPos = function(canvas, touch) {\n      var rect = canvas.getBoundingClientRect();\n      return PointPool.instance.borrow(touch.clientX - rect.left, touch.clientY - rect.top);\n    }\n    ;\n    ImageCropper.prototype.onTouchMove = function(e) {\n      if (!destroyed && this.isImageSet()) {\n        e.preventDefault();\n        /**\n         * fixes behaviour if event is wrapped by jquery\n         */\n        var touches = angular.isDefined(e.touches) ? e.touches : e.originalEvent.touches;\n        if (touches.length >= 1) {\n          for (var i = 0; i < touches.length; i++) {\n            var touch = touches[i];\n            var touchPosition = this.getTouchPos(this.canvas, touch);\n            var cropTouch = new CropTouch(touchPosition.x,touchPosition.y,touch.identifier);\n            PointPool.instance.returnPoint(touchPosition);\n            this.move(cropTouch, e);\n          }\n        }\n        this.draw(this.ctx);\n      }\n    }\n    ;\n    ImageCropper.prototype.onMouseMove = function(e) {\n      if (this.isImageSet()) {\n        var mousePosition = this.getMousePos(this.canvas, e);\n        this.move(new CropTouch(mousePosition.x,mousePosition.y,0), e);\n        var dragTouch = this.getDragTouchForID(0);\n        if (dragTouch) {\n          dragTouch.x = mousePosition.x;\n          dragTouch.y = mousePosition.y;\n        } else {\n          dragTouch = new CropTouch(mousePosition.x,mousePosition.y,0);\n        }\n        PointPool.instance.returnPoint(mousePosition);\n        this.drawCursors(dragTouch, e);\n        this.draw(this.ctx);\n      }\n    }\n    ;\n    ImageCropper.prototype.move = function(cropTouch, e) {\n      if (this.isMouseDown) {\n        this.handleMove(cropTouch);\n      }\n    }\n    ;\n    ImageCropper.prototype.getDragTouchForID = function(id) {\n      for (var i = 0; i < this.currentDragTouches.length; i++) {\n        if (id == this.currentDragTouches[i].id) {\n          return this.currentDragTouches[i];\n        }\n      }\n    }\n    ;\n    ImageCropper.prototype.drawCursors = function(cropTouch, e) {\n      var cursorDrawn = false;\n      if (cropTouch != null ) {\n        if (cropTouch.dragHandle == this.center) {\n          imageCropperDataShare.setStyle(this.canvas, 'move');\n          cursorDrawn = true;\n        }\n        if (cropTouch.dragHandle != null && cropTouch.dragHandle instanceof CornerMarker) {\n          this.drawCornerCursor(cropTouch.dragHandle, cropTouch.dragHandle.getPosition().x, cropTouch.dragHandle.getPosition().y, e);\n          cursorDrawn = true;\n        }\n      }\n      var didDraw = false;\n      if (!cursorDrawn) {\n        for (var i = 0; i < this.markers.length; i++) {\n          didDraw = didDraw || this.drawCornerCursor(this.markers[i], cropTouch.x, cropTouch.y, e);\n        }\n        if (!didDraw) {\n          imageCropperDataShare.setStyle(this.canvas, 'auto');\n        }\n      }\n      if (!didDraw && !cursorDrawn && this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\n        this.center.setOver(true);\n        imageCropperDataShare.setOver(this.canvas);\n        imageCropperDataShare.setStyle(this.canvas, 'move');\n      } else {\n        this.center.setOver(false);\n      }\n    }\n    ;\n    ImageCropper.prototype.drawCornerCursor = function(marker, x, y, e) {\n      if (marker.touchInBounds(x, y)) {\n        marker.setOver(true);\n        if (marker.getHorizontalNeighbour().getPosition().x > marker.getPosition().x) {\n          if (marker.getVerticalNeighbour().getPosition().y > marker.getPosition().y) {\n            imageCropperDataShare.setOver(this.canvas);\n            imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\n          } else {\n            imageCropperDataShare.setOver(this.canvas);\n            imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\n          }\n        } else {\n          if (marker.getVerticalNeighbour().getPosition().y > marker.getPosition().y) {\n            imageCropperDataShare.setOver(this.canvas);\n            imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\n          } else {\n            imageCropperDataShare.setOver(this.canvas);\n            imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\n          }\n        }\n        return true;\n      }\n      marker.setOver(false);\n      return false;\n    }\n    ;\n    ImageCropper.prototype.onTouchStart = function(e) {\n      if (this.isImageSet()) {\n        this.isMouseDown = true;\n      }\n    }\n    ;\n    ImageCropper.prototype.onTouchEnd = function(e) {\n      if (this.isImageSet()) {\n        /**\n         * fixes behaviour if event is wrapped by jquery\n         */\n        var changedTouches = angular.isDefined(e.changedTouches) ? e.changedTouches : e.originalEvent.changedTouches;\n        for (var i = 0; i < changedTouches.length; i++) {\n          var touch = changedTouches[i];\n          var dragTouch = this.getDragTouchForID(touch.identifier);\n          if (dragTouch != null ) {\n            if (dragTouch.dragHandle instanceof CornerMarker || dragTouch.dragHandle instanceof DragMarker) {\n              dragTouch.dragHandle.setOver(false);\n            }\n            this.handleRelease(dragTouch);\n          }\n        }\n        if (this.isImageSet() && this.currentlyInteracting) {\n          var img = this.getCroppedImage(this.scope.cropWidth, this.scope.cropHeight);\n          if (this.attrs.imgDst !== undefined) {\n            this.scope.imgDst = img.src;\n          }\n          this.scope.$apply();\n        }\n        if (this.currentDragTouches.length == 0) {\n          this.isMouseDown = false;\n          this.currentlyInteracting = false;\n        }\n      }\n    }\n    ;\n    //http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n    ImageCropper.prototype.drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n      // Works only if whole image is displayed:\n      // ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n      // The following works correct also when only a part of the image is displayed:\n      ctx.drawImage(img, sx * this.vertSquashRatio, sy * this.vertSquashRatio, sw * this.vertSquashRatio, sh * this.vertSquashRatio, dx, dy, dw, dh);\n    }\n    ;\n    ImageCropper.prototype.detectVerticalSquash = function(img) {\n      var iw = img.naturalWidth\n        , ih = img.naturalHeight;\n      var canvas = document.createElement('canvas');\n      canvas.width = 1;\n      canvas.height = ih;\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(img, 0, 0);\n      var data = ctx.getImageData(0, 0, 1, ih).data;\n      // search image edge pixel position in case it is squashed vertically.\n      var sy = 0;\n      var ey = ih;\n      var py = ih;\n      while (py > sy) {\n        var alpha = data[(py - 1) * 4 + 3];\n        if (alpha === 0) {\n          ey = py;\n        } else {\n          sy = py;\n        }\n        py = (ey + sy) >> 1;\n      }\n      var ratio = (py / ih);\n      return (ratio === 0) ? 1 : ratio;\n    }\n    ;\n    ImageCropper.prototype.onMouseDown = function(e) {\n      if (this.isImageSet()) {\n        this.isMouseDown = true;\n      }\n    }\n    ;\n    ImageCropper.prototype.onMouseUp = function(e) {\n      if (this.isImageSet()) {\n        imageCropperDataShare.setReleased(this.canvas);\n        this.isMouseDown = false;\n        this.handleRelease(new CropTouch(0,0,0));\n        if (this.currentlyInteracting == true) {\n          var img = this.getCroppedImage(this.scope.cropWidth, this.scope.cropHeight);\n          if (this.attrs.imgDst !== undefined) {\n            this.scope.imgDst = img.src;\n          }\n          this.scope.$apply();\n        }\n        this.currentlyInteracting = false;\n      }\n    }\n    ;\n    return ImageCropper;\n  });\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('PointPool', function (Point) {\n\n    function PointPool(inst) {\n      this.borrowed = 0; //for debugging\n      PointPool.instance = this;\n      var prev = null;\n      for (var i = 0; i < inst; i++) {\n        if (i === 0) {\n          this.firstAvailable = new Point();\n          prev = this.firstAvailable;\n        }\n        else {\n          var p = new Point();\n          prev.setNext(p);\n          prev = p;\n        }\n      }\n    }\n\n    PointPool.prototype.borrow = function (x, y) {\n      if (this.firstAvailable == null) {\n        throw \"Pool exhausted\";\n      }\n      this.borrowed++;\n      var p = this.firstAvailable;\n      this.firstAvailable = p.getNext();\n      p.x = x;\n      p.y = y;\n      return p;\n    };\n    PointPool.prototype.returnPoint = function (p) {\n      this.borrowed--;\n      p.x = 0;\n      p.y = 0;\n      p.setNext(this.firstAvailable);\n      this.firstAvailable = p;\n    };\n    return PointPool;\n\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('Point', function () {\n\n    function Point(x, y) {\n      if (x === void 0) {\n        x = 0;\n      }\n      if (y === void 0) {\n        y = 0;\n      }\n      this.x = x;\n      this.y = y;\n    }\n\n    Point.prototype.setNext = function (p) {\n      this.next = p;\n    };\n    Point.prototype.getNext = function () {\n      return this.next;\n    };\n\n    Point.prototype.scale = function(x, y) {\n      this.x *= x;\n      this.y *= y;\n    };\n\n    return Point;\n    \n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));"],"sourceRoot":"assets/scripts/"}