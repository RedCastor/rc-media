{"version":3,"sources":["../bower_components/angular-img-cropper-redcastor/dist/angular-img-cropper.js"],"names":["angular","$","mod","module","factory","__extends","d","b","__","this","constructor","p","hasOwnProperty","prototype","directive","$document","$window","ImageCropper","scope","imgSrc","imgDst","cropWidth","cropHeight","keepAspect","keepAspectRatio","touchRadius","cropAreaBounds","minWidth","minHeight","enforceCropAspect","enforceFileType","color","colorDrag","colorBg","colorCropBg","restrict","link","element","attrs","setup","newValue","oldValue","crop","width","height","oldImage","srcImage","canvas","data","setImage","fileType","load","imageObj","Image","undefined","cors","crossOrigin","addEventListener","$apply","src","imageData","destroyed","$on","$watch","control","internalControl","elem","elemental","document","querySelector","ev","createEvent","initEvent","dispatchEvent","$timeout","image","bind","changeEvent","reader","FileReader","eventThis","onload","loadEvent","thisHook","target","result","files","type","readAsDataURL","PointPool","Bounds","x","y","left","right","top","bottom","getWidth","getHeight","getCentre","w","h","instance","borrow","Handle","_super","CornerMarker","radius","call","drawCornerBorder","ctx","sideLength","over","drag","hDirection","vDirection","horizontalNeighbour","position","verticalNeighbour","beginPath","lineJoin","moveTo","lineTo","closePath","lineWidth","strokeStyle","stroke","drawCornerFill","fillStyle","fill","moveX","setPosition","moveY","move","addHorizontalNeighbour","neighbour","addVerticalNeighbour","getHorizontalNeighbour","getVerticalNeighbour","draw","CropService","init","getContext","DEG2RAD","id","DragMarker","iconPoints","Array","scaledIconPoints","getDragIconPoints","drawIcon","arr","scale","maxLength","arrowWidth","arrowLength","connectorThroat","push","points","k","length","recalculatePosition","bounds","c","returnPoint","Point","offset","setDrag","value","setOver","touchInBounds","getPosition","pressed","share","setPressed","setReleased","setStyle","style","documentElement","css","CropTouch","imageCropperDataShare","aspectRatio","currentDragTouches","isMouseDown","ratioW","ratioH","imageSet","pointPool","buffer","createElement","cropCanvas","tl","tr","bl","br","markers","center","croppedImage","currentlyInteracting","window","jQuery","off","on","onMouseMove","onMouseUp","onMouseDown","onTouchStart","onTouchMove","onTouchEnd","resizeCanvas","getBounds","clearRect","canvasWidth","canvasHeight","fillRect","sourceAspect","canvasAspect","sx","sy","drawImageIOSFix","drawImage","Math","max","i","strokeRect","dragCrop","marker","maxXClamp","minXClamp","minYClamp","maxYClamp","getCropBounds","enforceMinSize","xLength","yLength","xOver","abs","yOver","dragCorner","anchorMarker","iX","iY","ax","ay","newHeight","newWidth","newY","newX","fold","getSide","min","a","n","sign","NaN","handleRelease","newCropTouch","index","dragHandle","splice","handleMove","matched","dragTouch","clampedPositions","clampPosition","updateClampBounds","round","isImageSet","img","srcFileType","cropBounds","cropAspect","cX","cY","tlPos","trPos","blPos","brPos","imageH","cropW","cropH","imageW","vertSquashRatio","detectVerticalSquash","croppedImg","getCroppedImage","fillWidth","fillHeight","offsetH","offsetW","toDataURL","minX","Number","MAX_VALUE","minY","maxX","maxY","setBounds","topLeft","topRight","bottomLeft","bottomRight","currentBounds","getMousePos","evt","rect","getBoundingClientRect","pt","clientX","clientY","offsetHeight","offsetWidth","getTouchPos","touch","e","preventDefault","touches","isDefined","originalEvent","touchPosition","cropTouch","identifier","mousePosition","getDragTouchForID","drawCursors","cursorDrawn","drawCornerCursor","didDraw","changedTouches","sw","sh","dx","dy","dw","dh","naturalWidth","ih","naturalHeight","getImageData","ey","py","ratio","inst","borrowed","prev","firstAvailable","setNext","getNext","next"],"mappings":"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","file":"angular-img-cropper.js","sourcesContent":["(function (angular, $) {\n  'use strict';\n\n  var mod = angular.module('angular-img-cropper', []);\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////\n\n  mod.factory('__extends', function () {\n\n    var __extends = __extends || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() {\n        this.constructor = d;\n      }\n\n      __.prototype = b.prototype;\n      d.prototype = new __();\n    };\n\n    return __extends;\n  });\n\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // mod.directive(\"canvasResponsive\", function($window) {\n  //   return {\n  //     restrict: 'A',\n  //     link: function($scope, $element, $attrs) {\n        \n  //       var canvas = $element.find('canvas')[0];\n  //       var element = $element[0];\n  //       var ratio = canvas.offsetHeight / canvas.offsetWidth;\n\n  //       function scale() {\n  //         canvas.width = element.offsetWidth;\n  //         canvas.height = canvas.width * ratio;\n  //         console.log(canvas.width);\n  //         console.log(canvas.height);\n  //       } \n\n  //       scale();\n\n  //       $(window).bind('resize', function() {\n        \n  //         scale();\n\n\n  //       });\n\n  //     }\n  //   };\n  // });\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////\n\n  mod.directive(\"imgCropper\", function ($document, $window, ImageCropper) {\n    return {\n      scope: {\n        imgSrc: \"=\",\n        imgDst: \"=\",\n        cropWidth: \"=\",\n        cropHeight: \"=\",\n        keepAspect: \"=\",\n        keepAspectRatio: \"=\",\n        touchRadius: \"=\",\n        cropAreaBounds: \"=\",\n        minWidth: \"=\",\n        minHeight: \"=\",\n        enforceCropAspect: \"=\",\n        enforceFileType: \"@\",\n        color: \"@\",\n        colorDrag: \"@\",\n        colorBg: '@',\n        colorCropBg: '@'\n      },\n      restrict: \"A\",\n      link: function (scope, element, attrs) {\n\n        var crop, destroyed = false;\n        var canvas = element[0];\n\n        scope.color = scope.color || 'rgba(90,90,90,0.75)';\n        scope.colorDrag = scope.colorDrag || 'rgba(0, 0, 0, 0.7)';\n        scope.colorBg = scope.colorBg || 'rgba(192,192,192,1)';\n        scope.colorCropBg = scope.colorCropBg || 'rgba(0, 0, 0, 0.7)';\n\n        scope.$on('$destroy', function () {\n          destroyed = true;\n        });\n\n        function setup(newValue, oldValue) {\n          if (crop && newValue === oldValue) {\n            return;\n          }\n\n\n          var width = scope.cropWidth;\n          var height = scope.cropHeight;\n          var keepAspect = scope.keepAspect;\n          var keepAspectRatio = scope.keepAspectRatio;\n          var touchRadius = scope.touchRadius;\n          var oldImage = crop && crop.srcImage;\n\n          crop = new ImageCropper(canvas, canvas.width / 2 - width / 2, canvas.height / 2 - height / 2, width, height, keepAspect, keepAspectRatio, touchRadius, scope, attrs);\n\n          $(canvas).data('crop.angular-img-cropper', crop);\n\n          if (oldImage) {\n            crop.setImage(oldImage, scope.imgSrc.fileType);\n          } else {\n            load(scope.imgSrc);\n          }\n        }\n\n        function load(newValue) {\n          if (!newValue) {\n            return;\n          }\n\n          var imageObj = new Image();\n\n          if (attrs.cors !== undefined && attrs.cors !== \"no\") {\n            imageObj.crossOrigin = \"Anonymous\";\n          }\n\n          imageObj.addEventListener(\"load\", function () {\n            crop.setImage(imageObj, newValue.fileType);\n            scope.$apply();\n          }, false);\n          imageObj.src = newValue.imageData;\n        }\n\n        scope.$watch('cropWidth', setup);\n        scope.$watch('cropHeight', setup);\n        scope.$watch('keepAspect', setup);\n        scope.$watch('touchRadius', setup);\n\n\n        scope.$watch('imgSrc', load);\n\n      }\n    };\n  });\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////\n\n})(angular, angular.element);\n\n\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.directive('imgCropperFilereadCall', function factory() {\n    return {\n      scope: {\n        control: '='\n      },\n      link: function (scope) {\n        scope.internalControl = scope.control || {};\n        scope.internalControl.load = function (elem) {\n\n          var elemental = angular.element(document.querySelector(elem));\n          var ev = document.createEvent(\"MouseEvent\");\n          ev.initEvent(\"click\", true, false);\n          elemental[0].dispatchEvent(ev);\n        };\n      }\n    };\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.directive(\"imgCropperFileread\", function ($timeout) {\n    return {\n      scope: {\n        image: \"=\"\n      },\n      link: function (scope, element) {\n        element.bind(\"change\", function (changeEvent) {\n          var reader = new FileReader();\n          var eventThis = this;\n          reader.onload = function (loadEvent) {\n            $timeout(function () {\n              var thisHook = eventThis;\n              scope.image = {\n                'imageData': loadEvent.target.result,\n                'fileType': thisHook.fileType\n              };\n            }, 0);\n          };\n          if (changeEvent.target.files[0]) {\n            eventThis.fileType = changeEvent.target.files[0].type;\n            reader.readAsDataURL(changeEvent.target.files[0]);\n          }\n        });\n      }\n    };\n  });\n\n  \n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('Bounds', function (PointPool) {\n\n    function Bounds(x, y, width, height) {\n      if (x === void 0) {\n        x = 0;\n      }\n      if (y === void 0) {\n        y = 0;\n      }\n      if (width === void 0) {\n        width = 0;\n      }\n      if (height === void 0) {\n        height = 0;\n      }\n      this.left = x;\n      this.right = x + width;\n      this.top = y;\n      this.bottom = y + height;\n    }\n\n    Bounds.prototype.getWidth = function () {\n      return this.right - this.left;\n    };\n    Bounds.prototype.getHeight = function () {\n      return this.bottom - this.top;\n    };\n    Bounds.prototype.getCentre = function () {\n      var w = this.getWidth();\n      var h = this.getHeight();\n      return PointPool.instance.borrow(this.left + (w / 2), this.top + (h / 2));\n    };\n    return Bounds;\n\n\n\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('CornerMarker', function(Handle, __extends) {\n     var CornerMarker = (function (_super) {\n          __extends(CornerMarker, _super);\n          function CornerMarker(x, y, radius, color, colorCropBg) {\n            _super.call(this, x, y, radius);\n            this.color = color | 'rgba(90,90,90,0.75)';\n            this.colorCropBg = colorCropBg | 'rgba(0,0,0,1)';\n          }\n\n          CornerMarker.prototype.drawCornerBorder = function (ctx) {\n            var sideLength = 10;\n            if (this.over || this.drag) {\n              sideLength = 12;\n            }\n            var hDirection = 1;\n            var vDirection = 1;\n            if (this.horizontalNeighbour.position.x < this.position.x) {\n              hDirection = -1;\n            }\n            if (this.verticalNeighbour.position.y < this.position.y) {\n              vDirection = -1;\n            }\n            ctx.beginPath();\n            ctx.lineJoin = \"miter\";\n            ctx.moveTo(this.position.x, this.position.y);\n            ctx.lineTo(this.position.x + (sideLength * hDirection), this.position.y);\n            ctx.lineTo(this.position.x + (sideLength * hDirection), this.position.y + (sideLength * vDirection));\n            ctx.lineTo(this.position.x, this.position.y + (sideLength * vDirection));\n            ctx.lineTo(this.position.x, this.position.y);\n            ctx.closePath();\n            ctx.lineWidth = 2;\n            ctx.strokeStyle = this.color;\n            ctx.stroke();\n          };\n          CornerMarker.prototype.drawCornerFill = function (ctx) {\n            var sideLength = 10;\n            if (this.over || this.drag) {\n              sideLength = 12;\n            }\n            var hDirection = 1;\n            var vDirection = 1;\n            if (this.horizontalNeighbour.position.x < this.position.x) {\n              hDirection = -1;\n            }\n            if (this.verticalNeighbour.position.y < this.position.y) {\n              vDirection = -1;\n            }\n            ctx.beginPath();\n            ctx.moveTo(this.position.x, this.position.y);\n            ctx.lineTo(this.position.x + (sideLength * hDirection), this.position.y);\n            ctx.lineTo(this.position.x + (sideLength * hDirection), this.position.y + (sideLength * vDirection));\n            ctx.lineTo(this.position.x, this.position.y + (sideLength * vDirection));\n            ctx.lineTo(this.position.x, this.position.y);\n            ctx.closePath();\n            ctx.fillStyle = this.colorCropBg;\n            ctx.fill();\n          };\n          CornerMarker.prototype.moveX = function (x) {\n            this.setPosition(x, this.position.y);\n          };\n          CornerMarker.prototype.moveY = function (y) {\n            this.setPosition(this.position.x, y);\n          };\n          CornerMarker.prototype.move = function (x, y) {\n            this.setPosition(x, y);\n            this.verticalNeighbour.moveX(x);\n            this.horizontalNeighbour.moveY(y);\n          };\n          CornerMarker.prototype.addHorizontalNeighbour = function (neighbour) {\n            this.horizontalNeighbour = neighbour;\n          };\n          CornerMarker.prototype.addVerticalNeighbour = function (neighbour) {\n            this.verticalNeighbour = neighbour;\n          };\n          CornerMarker.prototype.getHorizontalNeighbour = function () {\n            return this.horizontalNeighbour;\n          };\n          CornerMarker.prototype.getVerticalNeighbour = function () {\n            return this.verticalNeighbour;\n          };\n          CornerMarker.prototype.draw = function (ctx) {\n            this.drawCornerFill(ctx);\n            this.drawCornerBorder(ctx);\n          };\n          return CornerMarker;\n        })(Handle);\n\n        return CornerMarker;\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('CropService', function () {\n\n    function CropService() {\n    }\n\n    CropService.init = function (canvas) {\n      this.canvas = canvas;\n      this.ctx = this.canvas.getContext(\"2d\");\n    };\n    CropService.DEG2RAD = 0.0174532925;\n    return CropService;\n\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('CropTouch', function () {\n    function CropTouch(x, y, id) {\n      if (x === void 0) {\n        x = 0;\n      }\n      if (y === void 0) {\n        y = 0;\n      }\n      if (id === void 0) {\n        id = 0;\n      }\n      this.id = 0;\n      this.x = x;\n      this.y = y;\n      this.id = id;\n    }\n\n    return CropTouch;\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('DragMarker', function (Handle, __extends, PointPool) {\n    var DragMarker = (function (_super) {\n      __extends(DragMarker, _super);\n      function DragMarker(x, y, radius, color) {\n        _super.call(this, x, y, radius);\n        this.iconPoints = new Array();\n        this.scaledIconPoints = new Array();\n        this.getDragIconPoints(this.iconPoints, 1);\n        this.getDragIconPoints(this.scaledIconPoints, 1.2);\n        this.color = color || 'rgba(90, 90, 90, 0.75)';\n      }\n\n      DragMarker.prototype.draw = function (ctx) {\n        if (this.over || this.drag) {\n          this.drawIcon(ctx, this.scaledIconPoints);\n        }\n        else {\n          this.drawIcon(ctx, this.iconPoints);\n        }\n      };\n      DragMarker.prototype.getDragIconPoints = function (arr, scale) {\n        var maxLength = 17 * scale;\n        var arrowWidth = 14 * scale;\n        var arrowLength = 8 * scale;\n        var connectorThroat = 4 * scale;\n        arr.push(PointPool.instance.borrow(-connectorThroat / 2, maxLength - arrowLength));\n        arr.push(PointPool.instance.borrow(-arrowWidth / 2, maxLength - arrowLength));\n        arr.push(PointPool.instance.borrow(0, maxLength));\n        arr.push(PointPool.instance.borrow(arrowWidth / 2, maxLength - arrowLength));\n        arr.push(PointPool.instance.borrow(connectorThroat / 2, maxLength - arrowLength));\n        arr.push(PointPool.instance.borrow(connectorThroat / 2, connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(maxLength - arrowLength, connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(maxLength - arrowLength, arrowWidth / 2));\n        arr.push(PointPool.instance.borrow(maxLength, 0));\n        arr.push(PointPool.instance.borrow(maxLength - arrowLength, -arrowWidth / 2));\n        arr.push(PointPool.instance.borrow(maxLength - arrowLength, -connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(connectorThroat / 2, -connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(connectorThroat / 2, -maxLength + arrowLength));\n        arr.push(PointPool.instance.borrow(arrowWidth / 2, -maxLength + arrowLength));\n        arr.push(PointPool.instance.borrow(0, -maxLength));\n        arr.push(PointPool.instance.borrow(-arrowWidth / 2, -maxLength + arrowLength));\n        arr.push(PointPool.instance.borrow(-connectorThroat / 2, -maxLength + arrowLength));\n        arr.push(PointPool.instance.borrow(-connectorThroat / 2, -connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(-maxLength + arrowLength, -connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(-maxLength + arrowLength, -arrowWidth / 2));\n        arr.push(PointPool.instance.borrow(-maxLength, 0));\n        arr.push(PointPool.instance.borrow(-maxLength + arrowLength, arrowWidth / 2));\n        arr.push(PointPool.instance.borrow(-maxLength + arrowLength, connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(-connectorThroat / 2, connectorThroat / 2));\n      };\n      DragMarker.prototype.drawIcon = function (ctx, points) {\n        ctx.beginPath();\n        ctx.moveTo(points[0].x + this.position.x, points[0].y + this.position.y);\n        for (var k = 0; k < points.length; k++) {\n          var p = points[k];\n          ctx.lineTo(p.x + this.position.x, p.y + this.position.y);\n        }\n        ctx.closePath();\n        ctx.fillStyle = this.color;\n        ctx.fill();\n      };\n      DragMarker.prototype.recalculatePosition = function (bounds) {\n        var c = bounds.getCentre();\n        this.setPosition(c.x, c.y);\n        PointPool.instance.returnPoint(c);\n      };\n      return DragMarker;\n    })(Handle);\n\n    return DragMarker;\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n  \n  mod.factory('Handle', function (Point) {\n\n    function Handle(x, y, radius) {\n      this.over = false;\n      this.drag = false;\n      this.position = new Point(x, y);\n      this.offset = new Point(0, 0);\n      this.radius = radius;\n    }\n\n    Handle.prototype.setDrag = function (value) {\n      this.drag = value;\n      this.setOver(value);\n    };\n    Handle.prototype.draw = function (ctx) {\n    };\n    Handle.prototype.setOver = function (over) {\n      this.over = over;\n    };\n    Handle.prototype.touchInBounds = function (x, y) {\n      return (x > this.position.x - this.radius && x < this.position.x + this.radius && y > this.position.y - this.radius && y < this.position.y + this.radius);\n    };\n    Handle.prototype.getPosition = function () {\n      return this.position;\n    };\n    Handle.prototype.setPosition = function (x, y) {\n      this.position.x = x;\n      this.position.y = y;\n    };\n    \n    return Handle;\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('imageCropperDataShare', function () {\n\n    var share = {};\n    var pressed;\n    var over;\n    share.setPressed = function (canvas) {\n      pressed = canvas;\n    };\n\n    share.setReleased = function (canvas) {\n      if (canvas === pressed) {\n        pressed = undefined;\n      }\n    };\n\n    share.setOver = function (canvas) {\n      over = canvas;\n    };\n\n    share.setStyle = function (canvas, style) {\n      if (pressed !== undefined) {\n        if (pressed === canvas) {\n          angular.element(document.documentElement).css('cursor', style);\n        }\n      }\n      else {\n        if (canvas === over) {\n          angular.element(document.documentElement).css('cursor', style);\n        }\n      }\n    };\n    return share;\n\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n(function(angular, $, mod) {\n  'use strict';\n  mod.factory('ImageCropper', function(__extends, Handle, Point, PointPool, CropService, DragMarker, CornerMarker, Bounds, CropTouch, imageCropperDataShare) {\n    function ImageCropper(canvas, x, y, width, height, keepAspect, keepAspectRatio, touchRadius, scope, attrs) {\n      if (x === void 0) {\n        x = 0;\n      }\n      if (y === void 0) {\n        y = 0;\n      }\n      if (width === void 0) {\n        width = 100;\n      }\n      if (height === void 0) {\n        height = 50;\n      }\n      if (keepAspect === void 0) {\n        keepAspect = true;\n      }\n      if (touchRadius === void 0) {\n        touchRadius = 20;\n      }\n      this.scope = scope;\n      this.attrs = attrs;\n      this.keepAspect = false;\n      this.aspectRatio = 0;\n      this.currentDragTouches = new Array();\n      this.isMouseDown = false;\n      this.ratioW = 1;\n      this.ratioH = 1;\n      this.fileType = 'image/png';\n      this.imageSet = false;\n      this.pointPool = new PointPool(200);\n      CropService.init(canvas);\n      this.buffer = document.createElement('canvas');\n      this.cropCanvas = document.createElement('canvas');\n      this.buffer.width = canvas.width;\n      this.buffer.height = canvas.height;\n      this.tl = new CornerMarker(x,y,touchRadius, this.scope.colorDrag, this.scope.colorCropBg);\n      this.tr = new CornerMarker(x + width,y,touchRadius, this.scope.colorDrag, this.scope.colorCropBg);\n      this.bl = new CornerMarker(x,y + height,touchRadius, this.scope.colorDrag, this.scope.colorCropBg);\n      this.br = new CornerMarker(x + width,y + height,touchRadius, this.scope.colorDrag, this.scope.colorCropBg);\n      this.tl.addHorizontalNeighbour(this.tr);\n      this.tl.addVerticalNeighbour(this.bl);\n      this.tr.addHorizontalNeighbour(this.tl);\n      this.tr.addVerticalNeighbour(this.br);\n      this.bl.addHorizontalNeighbour(this.br);\n      this.bl.addVerticalNeighbour(this.tl);\n      this.br.addHorizontalNeighbour(this.bl);\n      this.br.addVerticalNeighbour(this.tr);\n      this.markers = [this.tl, this.tr, this.bl, this.br];\n      // TODO: pass color to dragmarker\n      this.center = new DragMarker(x + (width / 2),y + (height / 2),touchRadius, this.scope.colorDrag);\n      this.canvas = canvas;\n      this.ctx = this.canvas.getContext(\"2d\");\n      this.keepAspect = keepAspect;\n      this.keepAspectRatio = keepAspectRatio || false;\n      this.aspectRatio = height / width;\n      this.draw(this.ctx);\n      this.croppedImage = new Image();\n      this.currentlyInteracting = false;\n      this.enforceCropAspect = this.scope.enforceCropAspect || false;\n      this.enforceFileType = this.scope.enforceFileType ? 'image/' + this.scope.enforceFileType : undefined;\n      if (window.jQuery) {\n        angular.element(window).off('mousemove.angular-img-cropper mouseup.angular-img-cropper').on('mousemove.angular-img-cropper', this.onMouseMove.bind(this)).on('mouseup.angular-img-cropper', this.onMouseUp.bind(this));\n        angular.element(canvas).off('mousedown.angular-img-cropper touchstart.angular-img-cropper  touchmove.angular-img-cropper touchend.angular-img-cropper').on('mousedown.angular-img-cropper', this.onMouseDown.bind(this)).on('touchstart.angular-img-cropper', this.onTouchStart.bind(this)).on('touchmove.angular-img-cropper', this.onTouchMove.bind(this)).on('touchend.angular-img-cropper', this.onTouchEnd.bind(this));\n      } else {\n        window.addEventListener('mousemove', this.onMouseMove.bind(this));\n        window.addEventListener('mouseup', this.onMouseUp.bind(this));\n        canvas.addEventListener('mousedown', this.onMouseDown.bind(this));\n        canvas.addEventListener('touchmove', this.onTouchMove.bind(this), false);\n        canvas.addEventListener('touchstart', this.onTouchStart.bind(this), false);\n        canvas.addEventListener('touchend', this.onTouchEnd.bind(this), false);\n      }\n    }\n    ImageCropper.prototype.resizeCanvas = function(width, height) {\n      this.canvas.width = width;\n      this.canvas.height = height;\n      this.buffer.width = width;\n      this.buffer.height = height;\n      this.draw(this.ctx);\n    }\n    ;\n    ImageCropper.prototype.draw = function(ctx) {\n      var bounds = this.getBounds();\n      if (this.srcImage) {\n        ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        ctx.fillStyle = this.scope.colorBg;\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        var sourceAspect = this.srcImage.height / this.srcImage.width;\n        var canvasAspect = this.canvasHeight / this.canvasWidth;\n        var w = this.canvasWidth;\n        var h = this.canvasHeight;\n        var sx = 0;\n        var sy = 0;\n        if (canvasAspect > sourceAspect) {\n          w = this.canvasWidth;\n          h = this.canvasWidth * sourceAspect;\n        } else {\n          h = this.canvasHeight;\n          w = this.canvasHeight / sourceAspect;\n        }\n        this.ratioW = w / this.srcImage.width;\n        this.ratioH = h / this.srcImage.height;\n        if (canvasAspect < sourceAspect) {\n          sx = this.buffer.width / 2 - w / 2;\n        } else {\n          sy = this.buffer.height / 2 - h / 2;\n        }\n        this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, sx, sy, w, h);\n        this.buffer.getContext('2d').drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\n        ctx.fillStyle = this.scope.colorCropBg;\n        ctx.fillRect(sx, sy, w, h);\n        ctx.drawImage(this.buffer, bounds.left, bounds.top, Math.max(bounds.getWidth(), 1), Math.max(bounds.getHeight(), 1), bounds.left, bounds.top, bounds.getWidth(), bounds.getHeight());\n        var marker;\n        for (var i = 0; i < this.markers.length; i++) {\n          marker = this.markers[i];\n          marker.draw(ctx);\n        }\n        this.center.draw(ctx);\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = this.scope.color;\n        ctx.strokeRect(bounds.left, bounds.top, bounds.getWidth(), bounds.getHeight());\n      } else {\n        ctx.fillStyle = this.scope.colorBg;\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n      }\n    }\n    ;\n    ImageCropper.prototype.dragCrop = function(x, y, marker) {\n      var bounds = this.getBounds();\n      var left = x - (bounds.getWidth() / 2);\n      var right = x + (bounds.getWidth() / 2);\n      var top = y - (bounds.getHeight() / 2);\n      var bottom = y + (bounds.getHeight() / 2);\n      if (right >= this.maxXClamp) {\n        x = this.maxXClamp - bounds.getWidth() / 2;\n      }\n      if (left <= this.minXClamp) {\n        x = bounds.getWidth() / 2 + this.minXClamp;\n      }\n      if (top < this.minYClamp) {\n        y = bounds.getHeight() / 2 + this.minYClamp;\n      }\n      if (bottom >= this.maxYClamp) {\n        y = this.maxYClamp - bounds.getHeight() / 2;\n      }\n      this.tl.moveX(x - (bounds.getWidth() / 2));\n      this.tl.moveY(y - (bounds.getHeight() / 2));\n      this.tr.moveX(x + (bounds.getWidth() / 2));\n      this.tr.moveY(y - (bounds.getHeight() / 2));\n      this.bl.moveX(x - (bounds.getWidth() / 2));\n      this.bl.moveY(y + (bounds.getHeight() / 2));\n      this.br.moveX(x + (bounds.getWidth() / 2));\n      this.br.moveY(y + (bounds.getHeight() / 2));\n      marker.setPosition(x, y);\n      if (this.scope.cropAreaBounds && this.imageSet) {\n        this.scope.cropAreaBounds = this.getCropBounds();\n        this.scope.$apply();\n      }\n    }\n    ;\n    ImageCropper.prototype.enforceMinSize = function(x, y, marker) {\n      var xLength = x - marker.getHorizontalNeighbour().getPosition().x;\n      var yLength = y - marker.getVerticalNeighbour().getPosition().y;\n      var xOver = this.scope.minWidth - Math.abs(xLength);\n      var yOver = this.scope.minHeight - Math.abs(yLength);\n      if (xLength == 0 || yLength == 0) {\n        x = marker.getPosition().x;\n        y = marker.getPosition().y;\n        return PointPool.instance.borrow(x, y);\n      }\n      if (this.scope.keepAspect) {\n        if (xOver > 0 && (yOver / this.aspectRatio) > 0) {\n          if (xOver > (yOver / this.aspectRatio)) {\n            if (xLength < 0) {\n              x -= xOver;\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            } else {\n              x += xOver;\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            }\n          } else {\n            if (yLength < 0) {\n              y -= yOver;\n              if (xLength < 0) {\n                x -= yOver / this.aspectRatio;\n              } else {\n                x += yOver / this.aspectRatio;\n              }\n            } else {\n              y += yOver;\n              if (xLength < 0) {\n                x -= yOver / this.aspectRatio;\n              } else {\n                x += yOver / this.aspectRatio;\n              }\n            }\n          }\n        } else {\n          if (xOver > 0) {\n            if (xLength < 0) {\n              x -= xOver;\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            } else {\n              x += xOver;\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            }\n          } else if (yOver > 0) {\n            if (yLength < 0) {\n              y -= yOver;\n              if (xLength < 0) {\n                x -= yOver / this.aspectRatio;\n              } else {\n                x += yOver / this.aspectRatio;\n              }\n            } else {\n              y += yOver;\n              if (xLength < 0) {\n                x -= yOver / this.aspectRatio;\n              } else {\n                x += yOver / this.aspectRatio;\n              }\n            }\n          }\n        }\n      } else {\n        if (xOver > 0) {\n          if (xLength < 0) {\n            x -= xOver;\n          } else {\n            x += xOver;\n          }\n        }\n        if (yOver > 0) {\n          if (yLength < 0) {\n            y -= yOver;\n          } else {\n            y += yOver;\n          }\n        }\n      }\n      if (x < this.minXClamp || x > this.maxXClamp || y < this.minYClamp || y > this.maxYClamp) {\n        x = marker.getPosition().x;\n        y = marker.getPosition().y;\n      }\n      return PointPool.instance.borrow(x, y);\n    }\n    ;\n    ImageCropper.prototype.dragCorner = function(x, y, marker) {\n      var iX = 0;\n      var iY = 0;\n      var ax = 0;\n      var ay = 0;\n      var newHeight = 0;\n      var newWidth = 0;\n      var newY = 0;\n      var newX = 0;\n      var anchorMarker;\n      var fold = 0;\n      if (this.scope.keepAspect) {\n        anchorMarker = marker.getHorizontalNeighbour().getVerticalNeighbour();\n        ax = anchorMarker.getPosition().x;\n        ay = anchorMarker.getPosition().y;\n        if (x <= anchorMarker.getPosition().x) {\n          if (y <= anchorMarker.getPosition().y) {\n            iX = ax - (100 / this.aspectRatio);\n            iY = ay - (100 / this.aspectRatio * this.aspectRatio);\n            fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.getPosition(), PointPool.instance.borrow(x, y));\n            if (fold > 0) {\n              newHeight = Math.abs(anchorMarker.getPosition().y - y);\n              newWidth = newHeight / this.aspectRatio;\n              newY = anchorMarker.getPosition().y - newHeight;\n              newX = anchorMarker.getPosition().x - newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            } else if (fold < 0) {\n              newWidth = Math.abs(anchorMarker.getPosition().x - x);\n              newHeight = newWidth * this.aspectRatio;\n              newY = anchorMarker.getPosition().y - newHeight;\n              newX = anchorMarker.getPosition().x - newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            }\n          } else {\n            iX = ax - (100 / this.aspectRatio);\n            iY = ay + (100 / this.aspectRatio * this.aspectRatio);\n            fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.getPosition(), PointPool.instance.borrow(x, y));\n            if (fold > 0) {\n              newWidth = Math.abs(anchorMarker.getPosition().x - x);\n              newHeight = newWidth * this.aspectRatio;\n              newY = anchorMarker.getPosition().y + newHeight;\n              newX = anchorMarker.getPosition().x - newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            } else if (fold < 0) {\n              newHeight = Math.abs(anchorMarker.getPosition().y - y);\n              newWidth = newHeight / this.aspectRatio;\n              newY = anchorMarker.getPosition().y + newHeight;\n              newX = anchorMarker.getPosition().x - newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            }\n          }\n        } else {\n          if (y <= anchorMarker.getPosition().y) {\n            iX = ax + (100 / this.aspectRatio);\n            iY = ay - (100 / this.aspectRatio * this.aspectRatio);\n            fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.getPosition(), PointPool.instance.borrow(x, y));\n            if (fold < 0) {\n              newHeight = Math.abs(anchorMarker.getPosition().y - y);\n              newWidth = newHeight / this.aspectRatio;\n              newY = anchorMarker.getPosition().y - newHeight;\n              newX = anchorMarker.getPosition().x + newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            } else if (fold > 0) {\n              newWidth = Math.abs(anchorMarker.getPosition().x - x);\n              newHeight = newWidth * this.aspectRatio;\n              newY = anchorMarker.getPosition().y - newHeight;\n              newX = anchorMarker.getPosition().x + newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            }\n          } else {\n            iX = ax + (100 / this.aspectRatio);\n            iY = ay + (100 / this.aspectRatio * this.aspectRatio);\n            fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.getPosition(), PointPool.instance.borrow(x, y));\n            if (fold < 0) {\n              newWidth = Math.abs(anchorMarker.getPosition().x - x);\n              newHeight = newWidth * this.aspectRatio;\n              newY = anchorMarker.getPosition().y + newHeight;\n              newX = anchorMarker.getPosition().x + newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            } else if (fold > 0) {\n              newHeight = Math.abs(anchorMarker.getPosition().y - y);\n              newWidth = newHeight / this.aspectRatio;\n              newY = anchorMarker.getPosition().y + newHeight;\n              newX = anchorMarker.getPosition().x + newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              PointPool.instance.returnPoint(min);\n            }\n          }\n        }\n      } else {\n        var min = this.enforceMinSize(x, y, marker);\n        marker.move(min.x, min.y);\n        PointPool.instance.returnPoint(min);\n      }\n      this.center.recalculatePosition(this.getBounds());\n      if (this.scope.cropAreaBounds && this.imageSet) {\n        this.scope.cropAreaBounds = this.getCropBounds();\n        this.scope.$apply();\n      }\n    }\n    ;\n    ImageCropper.prototype.getSide = function(a, b, c) {\n      var n = this.sign((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x));\n      //TODO move the return of the pools to outside of this function\n      PointPool.instance.returnPoint(a);\n      PointPool.instance.returnPoint(c);\n      return n;\n    }\n    ;\n    ImageCropper.prototype.sign = function(x) {\n      if (+x === x) {\n        return (x === 0) ? x : (x > 0) ? 1 : -1;\n      }\n      return NaN;\n    }\n    ;\n    ImageCropper.prototype.handleRelease = function(newCropTouch) {\n      if (newCropTouch == null ) {\n        return;\n      }\n      var index = 0;\n      for (var k = 0; k < this.currentDragTouches.length; k++) {\n        if (newCropTouch.id == this.currentDragTouches[k].id) {\n          this.currentDragTouches[k].dragHandle.setDrag(false);\n          newCropTouch.dragHandle = null ;\n          index = k;\n        }\n      }\n      this.currentDragTouches.splice(index, 1);\n      this.draw(this.ctx);\n    }\n    ;\n    ImageCropper.prototype.handleMove = function(newCropTouch) {\n      var matched = false;\n      for (var k = 0; k < this.currentDragTouches.length; k++) {\n        if (newCropTouch.id == this.currentDragTouches[k].id && this.currentDragTouches[k].dragHandle != null ) {\n          var dragTouch = this.currentDragTouches[k];\n          var clampedPositions = this.clampPosition(newCropTouch.x - dragTouch.dragHandle.offset.x, newCropTouch.y - dragTouch.dragHandle.offset.y);\n          newCropTouch.x = clampedPositions.x;\n          newCropTouch.y = clampedPositions.y;\n          PointPool.instance.returnPoint(clampedPositions);\n          if (dragTouch.dragHandle instanceof CornerMarker) {\n            this.dragCorner(newCropTouch.x, newCropTouch.y, dragTouch.dragHandle);\n          } else {\n            this.dragCrop(newCropTouch.x, newCropTouch.y, dragTouch.dragHandle);\n          }\n          this.currentlyInteracting = true;\n          matched = true;\n          imageCropperDataShare.setPressed(this.canvas);\n          break;\n        }\n      }\n      if (!matched) {\n        for (var i = 0; i < this.markers.length; i++) {\n          var marker = this.markers[i];\n          if (marker.touchInBounds(newCropTouch.x, newCropTouch.y)) {\n            newCropTouch.dragHandle = marker;\n            this.currentDragTouches.push(newCropTouch);\n            marker.setDrag(true);\n            newCropTouch.dragHandle.offset.x = newCropTouch.x - newCropTouch.dragHandle.getPosition().x;\n            newCropTouch.dragHandle.offset.y = newCropTouch.y - newCropTouch.dragHandle.getPosition().y;\n            this.dragCorner(newCropTouch.x - newCropTouch.dragHandle.offset.x, newCropTouch.y - newCropTouch.dragHandle.offset.y, newCropTouch.dragHandle);\n            break;\n          }\n        }\n        if (newCropTouch.dragHandle == null ) {\n          if (this.center.touchInBounds(newCropTouch.x, newCropTouch.y)) {\n            newCropTouch.dragHandle = this.center;\n            this.currentDragTouches.push(newCropTouch);\n            newCropTouch.dragHandle.setDrag(true);\n            newCropTouch.dragHandle.offset.x = newCropTouch.x - newCropTouch.dragHandle.getPosition().x;\n            newCropTouch.dragHandle.offset.y = newCropTouch.y - newCropTouch.dragHandle.getPosition().y;\n            this.dragCrop(newCropTouch.x - newCropTouch.dragHandle.offset.x, newCropTouch.y - newCropTouch.dragHandle.offset.y, newCropTouch.dragHandle);\n          }\n        }\n      }\n    }\n    ;\n    ImageCropper.prototype.updateClampBounds = function() {\n      var sourceAspect = this.srcImage.height / this.srcImage.width;\n      var canvasAspect = this.canvas.height / this.canvas.width;\n      var w = this.canvas.width;\n      var h = this.canvas.height;\n      if (canvasAspect > sourceAspect) {\n        w = this.canvas.width;\n        h = this.canvas.width * sourceAspect;\n      } else {\n        h = this.canvas.height;\n        w = this.canvas.height / sourceAspect;\n      }\n      this.minXClamp = this.canvas.width / 2 - w / 2;\n      this.minYClamp = this.canvas.height / 2 - h / 2;\n      this.maxXClamp = this.canvas.width / 2 + w / 2;\n      this.maxYClamp = this.canvas.height / 2 + h / 2;\n    }\n    ;\n    ImageCropper.prototype.getCropBounds = function() {\n      var h = this.canvas.height - (this.minYClamp * 2);\n      var bounds = this.getBounds();\n      bounds.top = Math.round((h - bounds.top + this.minYClamp) / this.ratioH);\n      bounds.bottom = Math.round((h - bounds.bottom + this.minYClamp) / this.ratioH);\n      bounds.left = Math.round((bounds.left - this.minXClamp) / this.ratioW);\n      bounds.right = Math.round((bounds.right - this.minXClamp) / this.ratioW);\n      return bounds;\n    }\n    ;\n    ImageCropper.prototype.clampPosition = function(x, y) {\n      if (x < this.minXClamp) {\n        x = this.minXClamp;\n      }\n      if (x > this.maxXClamp) {\n        x = this.maxXClamp;\n      }\n      if (y < this.minYClamp) {\n        y = this.minYClamp;\n      }\n      if (y > this.maxYClamp) {\n        y = this.maxYClamp;\n      }\n      return PointPool.instance.borrow(x, y);\n    }\n    ;\n    ImageCropper.prototype.isImageSet = function() {\n      return this.imageSet;\n    }\n    ;\n    ImageCropper.prototype.setImage = function(img, srcFileType) {\n      if (!img) {\n        throw \"Image is null\";\n      }\n      this.imageSet = true;\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      var bufferContext = this.buffer.getContext('2d');\n      bufferContext.clearRect(0, 0, this.buffer.width, this.buffer.height);\n      if (this.enforceFileType) {\n        this.fileType = this.enforceFileType;\n      } else if (srcFileType == 'image/png' || srcFileType == 'image/jpeg') {\n        this.fileType = srcFileType;\n      }\n      this.srcImage = img;\n      this.updateClampBounds();\n      var sourceAspect = this.srcImage.height / this.srcImage.width;\n      var cropBounds = this.getBounds();\n      var cropAspect = cropBounds.getHeight() / cropBounds.getWidth();\n      var w = this.canvas.width;\n      var h = this.canvas.height;\n      this.canvasWidth = w;\n      this.canvasHeight = h;\n      var cX = this.canvas.width / 2;\n      var cY = this.canvas.height / 2;\n      var tlPos = PointPool.instance.borrow(cX - cropBounds.getWidth() / 2, cY + cropBounds.getHeight() / 2);\n      var trPos = PointPool.instance.borrow(cX + cropBounds.getWidth() / 2, cY + cropBounds.getHeight() / 2);\n      var blPos = PointPool.instance.borrow(cX - cropBounds.getWidth() / 2, cY - cropBounds.getHeight() / 2);\n      var brPos = PointPool.instance.borrow(cX + cropBounds.getWidth() / 2, cY - cropBounds.getHeight() / 2);\n      this.tl.setPosition(tlPos.x, tlPos.y);\n      this.tr.setPosition(trPos.x, trPos.y);\n      this.bl.setPosition(blPos.x, blPos.y);\n      this.br.setPosition(brPos.x, brPos.y);\n      PointPool.instance.returnPoint(tlPos);\n      PointPool.instance.returnPoint(trPos);\n      PointPool.instance.returnPoint(blPos);\n      PointPool.instance.returnPoint(brPos);\n      this.center.setPosition(cX, cY);\n      if (cropAspect > sourceAspect) {\n        var imageH = Math.min(w * sourceAspect, h);\n        var cropW = imageH / cropAspect;\n        tlPos = PointPool.instance.borrow(cX - cropW / 2, cY + imageH / 2);\n        trPos = PointPool.instance.borrow(cX + cropW / 2, cY + imageH / 2);\n        blPos = PointPool.instance.borrow(cX - cropW / 2, cY - imageH / 2);\n        brPos = PointPool.instance.borrow(cX + cropW / 2, cY - imageH / 2);\n      } else if (cropAspect < sourceAspect) {\n        var imageW = Math.min(h / sourceAspect, w);\n        var cropH = imageW * cropAspect;\n        tlPos = PointPool.instance.borrow(cX - imageW / 2, cY + cropH / 2);\n        trPos = PointPool.instance.borrow(cX + imageW / 2, cY + cropH / 2);\n        blPos = PointPool.instance.borrow(cX - imageW / 2, cY - cropH / 2);\n        brPos = PointPool.instance.borrow(cX + imageW / 2, cY - cropH / 2);\n      } else {\n        var imageW = Math.min(h, w);\n        var cropH = imageW * cropAspect;\n        tlPos = PointPool.instance.borrow(cX - imageW / 2, cY + cropH / 2);\n        trPos = PointPool.instance.borrow(cX + imageW / 2, cY + cropH / 2);\n        blPos = PointPool.instance.borrow(cX - imageW / 2, cY - cropH / 2);\n        brPos = PointPool.instance.borrow(cX + imageW / 2, cY - cropH / 2);\n      }\n      this.tl.setPosition(tlPos.x, tlPos.y);\n      this.tr.setPosition(trPos.x, trPos.y);\n      this.bl.setPosition(blPos.x, blPos.y);\n      this.br.setPosition(brPos.x, brPos.y);\n      PointPool.instance.returnPoint(tlPos);\n      PointPool.instance.returnPoint(trPos);\n      PointPool.instance.returnPoint(blPos);\n      PointPool.instance.returnPoint(brPos);\n      if (this.scope.cropAreaBounds && this.scope.cropAreaBounds.left !== undefined && this.scope.cropAreaBounds.top !== undefined && this.scope.cropAreaBounds.right !== undefined && this.scope.cropAreaBounds.bottom !== undefined) {\n        var canvasAspect = this.canvasHeight / this.canvasWidth;\n        if (canvasAspect > sourceAspect) {\n          w = this.canvasWidth;\n          h = this.canvasWidth * sourceAspect;\n        } else {\n          h = this.canvasHeight;\n          w = this.canvasHeight / sourceAspect;\n        }\n        this.ratioW = w / this.srcImage.width;\n        this.ratioH = h / this.srcImage.height;\n        var bounds = new Bounds();\n        bounds.top = Math.round(h + this.minYClamp - this.ratioH * this.scope.cropAreaBounds.top);\n        bounds.bottom = Math.round(h + this.minYClamp - this.ratioH * this.scope.cropAreaBounds.bottom);\n        bounds.left = Math.round(this.ratioW * this.scope.cropAreaBounds.left + this.minXClamp);\n        bounds.right = Math.round(this.ratioW * this.scope.cropAreaBounds.right + this.minXClamp);\n        this.tl.setPosition(bounds.left, bounds.top);\n        this.tr.setPosition(bounds.right, bounds.top);\n        this.bl.setPosition(bounds.left, bounds.bottom);\n        this.br.setPosition(bounds.right, bounds.bottom);\n        this.center.setPosition(bounds.left + bounds.getWidth() / 2, bounds.top + bounds.getHeight() / 2);\n      }\n      this.vertSquashRatio = this.detectVerticalSquash(this.srcImage);\n      this.draw(this.ctx);\n      var croppedImg = this.getCroppedImage(this.scope.cropWidth, this.scope.cropHeight);\n      if (this.attrs.imgDst !== undefined) {\n        this.scope.imgDst = croppedImg.src;\n      }\n      if (this.scope.cropAreaBounds && this.imageSet) {\n        this.scope.cropAreaBounds = this.getCropBounds();\n      }\n    }\n    ;\n    ImageCropper.prototype.getCroppedImage = function(fillWidth, fillHeight) {\n      var bounds = this.getBounds();\n      if (!this.srcImage) {\n        throw \"Source image not set.\";\n      }\n\n      var sourceAspect = this.srcImage.height / this.srcImage.width;\n      var canvasAspect = this.canvas.height / this.canvas.width;\n      var w = this.canvas.width;\n      var h = this.canvas.height;\n      if (canvasAspect > sourceAspect) {\n          w = this.canvas.width;\n          h = this.canvas.width * sourceAspect;\n      } else if (canvasAspect < sourceAspect) {\n          h = this.canvas.height;\n          w = this.canvas.height / sourceAspect;\n      } else {\n          h = this.canvas.height;\n          w = this.canvas.width;\n      }\n      this.ratioW = w / this.srcImage.width;\n      this.ratioH = h / this.srcImage.height;\n\n      if (this.enforceCropAspect) {\n        fillWidth = false;\n      }\n      else if (this.keepAspectRatio) {\n          fillWidth = Math.round(Math.max(bounds.getWidth(), 1) / this.ratioW);\n          fillHeight = Math.round(Math.max(bounds.getHeight(), 1) / this.ratioH);\n      }\n\n      if (fillWidth && fillHeight) {\n        this.cropCanvas.width = fillWidth;\n        this.cropCanvas.height = fillHeight;\n        var offsetH = (this.buffer.height - h) / 2 / this.ratioH;\n        var offsetW = (this.buffer.width - w) / 2 / this.ratioW;\n        this.drawImageIOSFix(this.cropCanvas.getContext('2d'), this.srcImage, Math.max(Math.round((bounds.left) / this.ratioW - offsetW), 0), Math.max(Math.round(bounds.top / this.ratioH - offsetH), 0), Math.max(Math.round(bounds.getWidth() / this.ratioW), 1), Math.max(Math.round(bounds.getHeight() / this.ratioH), 1), 0, 0, fillWidth, fillHeight);\n        this.croppedImage.width = fillWidth;\n        this.croppedImage.height = fillHeight;\n      } else {\n        this.cropCanvas.width = Math.max(bounds.getWidth(), 1);\n        this.cropCanvas.height = Math.max(bounds.getHeight(), 1);\n        this.cropCanvas.getContext('2d').drawImage(this.buffer, bounds.left, bounds.top, Math.max(bounds.getWidth(), 1), Math.max(bounds.getHeight(), 1), 0, 0, bounds.getWidth(), bounds.getHeight());\n        this.croppedImage.width = this.cropCanvas.width;\n        this.croppedImage.height = this.cropCanvas.height;\n      }\n      this.croppedImage.src = this.cropCanvas.toDataURL(this.fileType);\n      return this.croppedImage;\n    }\n    ;\n    ImageCropper.prototype.getBounds = function() {\n      var minX = Number.MAX_VALUE;\n      var minY = Number.MAX_VALUE;\n      var maxX = -Number.MAX_VALUE;\n      var maxY = -Number.MAX_VALUE;\n      for (var i = 0; i < this.markers.length; i++) {\n        var marker = this.markers[i];\n        if (marker.getPosition().x < minX) {\n          minX = marker.getPosition().x;\n        }\n        if (marker.getPosition().x > maxX) {\n          maxX = marker.getPosition().x;\n        }\n        if (marker.getPosition().y < minY) {\n          minY = marker.getPosition().y;\n        }\n        if (marker.getPosition().y > maxY) {\n          maxY = marker.getPosition().y;\n        }\n      }\n      var bounds = new Bounds();\n      bounds.left = minX;\n      bounds.right = maxX;\n      bounds.top = minY;\n      bounds.bottom = maxY;\n      return bounds;\n    }\n    ;\n    ImageCropper.prototype.setBounds = function(bounds) {\n      var topLeft;\n      var topRight;\n      var bottomLeft;\n      var bottomRight;\n      var currentBounds = this.getBounds();\n      for (var i = 0; i < this.markers.length; i++) {\n        var marker = this.markers[i];\n        if (marker.getPosition().x == currentBounds.left) {\n          if (marker.getPosition().y == currentBounds.top) {\n            topLeft = marker;\n          } else {\n            bottomLeft = marker;\n          }\n        } else {\n          if (marker.getPosition().y == currentBounds.top) {\n            topRight = marker;\n          } else {\n            bottomRight = marker;\n          }\n        }\n      }\n      topLeft.setPosition(bounds.left, bounds.top);\n      topRight.setPosition(bounds.right, bounds.top);\n      bottomLeft.setPosition(bounds.left, bounds.bottom);\n      bottomRight.setPosition(bounds.right, bounds.bottom);\n      this.center.recalculatePosition(bounds);\n      this.center.draw(this.ctx);\n    }\n    ;\n    ImageCropper.prototype.getMousePos = function(canvas, evt) {\n      var rect = canvas.getBoundingClientRect();\n      var pt = PointPool.instance.borrow(evt.clientX - rect.left, evt.clientY - rect.top);\n      if (pt) {\n        var sy = canvas.height / canvas.offsetHeight;\n        var sx = canvas.width / canvas.offsetWidth;\n        pt.scale(sx, sy);\n      }\n      return pt;\n    }\n    ;\n    ImageCropper.prototype.getTouchPos = function(canvas, touch) {\n      var rect = canvas.getBoundingClientRect();\n      return PointPool.instance.borrow(touch.clientX - rect.left, touch.clientY - rect.top);\n    }\n    ;\n    ImageCropper.prototype.onTouchMove = function(e) {\n      if (!destroyed && this.isImageSet()) {\n        e.preventDefault();\n        /**\n         * fixes behaviour if event is wrapped by jquery\n         */\n        var touches = angular.isDefined(e.touches) ? e.touches : e.originalEvent.touches;\n        if (touches.length >= 1) {\n          for (var i = 0; i < touches.length; i++) {\n            var touch = touches[i];\n            var touchPosition = this.getTouchPos(this.canvas, touch);\n            var cropTouch = new CropTouch(touchPosition.x,touchPosition.y,touch.identifier);\n            PointPool.instance.returnPoint(touchPosition);\n            this.move(cropTouch, e);\n          }\n        }\n        this.draw(this.ctx);\n      }\n    }\n    ;\n    ImageCropper.prototype.onMouseMove = function(e) {\n      if (this.isImageSet()) {\n        var mousePosition = this.getMousePos(this.canvas, e);\n        this.move(new CropTouch(mousePosition.x,mousePosition.y,0), e);\n        var dragTouch = this.getDragTouchForID(0);\n        if (dragTouch) {\n          dragTouch.x = mousePosition.x;\n          dragTouch.y = mousePosition.y;\n        } else {\n          dragTouch = new CropTouch(mousePosition.x,mousePosition.y,0);\n        }\n        PointPool.instance.returnPoint(mousePosition);\n        this.drawCursors(dragTouch, e);\n        this.draw(this.ctx);\n      }\n    }\n    ;\n    ImageCropper.prototype.move = function(cropTouch, e) {\n      if (this.isMouseDown) {\n        this.handleMove(cropTouch);\n      }\n    }\n    ;\n    ImageCropper.prototype.getDragTouchForID = function(id) {\n      for (var i = 0; i < this.currentDragTouches.length; i++) {\n        if (id == this.currentDragTouches[i].id) {\n          return this.currentDragTouches[i];\n        }\n      }\n    }\n    ;\n    ImageCropper.prototype.drawCursors = function(cropTouch, e) {\n      var cursorDrawn = false;\n      if (cropTouch != null ) {\n        if (cropTouch.dragHandle == this.center) {\n          imageCropperDataShare.setStyle(this.canvas, 'move');\n          cursorDrawn = true;\n        }\n        if (cropTouch.dragHandle != null && cropTouch.dragHandle instanceof CornerMarker) {\n          this.drawCornerCursor(cropTouch.dragHandle, cropTouch.dragHandle.getPosition().x, cropTouch.dragHandle.getPosition().y, e);\n          cursorDrawn = true;\n        }\n      }\n      var didDraw = false;\n      if (!cursorDrawn) {\n        for (var i = 0; i < this.markers.length; i++) {\n          didDraw = didDraw || this.drawCornerCursor(this.markers[i], cropTouch.x, cropTouch.y, e);\n        }\n        if (!didDraw) {\n          imageCropperDataShare.setStyle(this.canvas, 'auto');\n        }\n      }\n      if (!didDraw && !cursorDrawn && this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\n        this.center.setOver(true);\n        imageCropperDataShare.setOver(this.canvas);\n        imageCropperDataShare.setStyle(this.canvas, 'move');\n      } else {\n        this.center.setOver(false);\n      }\n    }\n    ;\n    ImageCropper.prototype.drawCornerCursor = function(marker, x, y, e) {\n      if (marker.touchInBounds(x, y)) {\n        marker.setOver(true);\n        if (marker.getHorizontalNeighbour().getPosition().x > marker.getPosition().x) {\n          if (marker.getVerticalNeighbour().getPosition().y > marker.getPosition().y) {\n            imageCropperDataShare.setOver(this.canvas);\n            imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\n          } else {\n            imageCropperDataShare.setOver(this.canvas);\n            imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\n          }\n        } else {\n          if (marker.getVerticalNeighbour().getPosition().y > marker.getPosition().y) {\n            imageCropperDataShare.setOver(this.canvas);\n            imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\n          } else {\n            imageCropperDataShare.setOver(this.canvas);\n            imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\n          }\n        }\n        return true;\n      }\n      marker.setOver(false);\n      return false;\n    }\n    ;\n    ImageCropper.prototype.onTouchStart = function(e) {\n      if (this.isImageSet()) {\n        this.isMouseDown = true;\n      }\n    }\n    ;\n    ImageCropper.prototype.onTouchEnd = function(e) {\n      if (this.isImageSet()) {\n        /**\n         * fixes behaviour if event is wrapped by jquery\n         */\n        var changedTouches = angular.isDefined(e.changedTouches) ? e.changedTouches : e.originalEvent.changedTouches;\n        for (var i = 0; i < changedTouches.length; i++) {\n          var touch = changedTouches[i];\n          var dragTouch = this.getDragTouchForID(touch.identifier);\n          if (dragTouch != null ) {\n            if (dragTouch.dragHandle instanceof CornerMarker || dragTouch.dragHandle instanceof DragMarker) {\n              dragTouch.dragHandle.setOver(false);\n            }\n            this.handleRelease(dragTouch);\n          }\n        }\n        if (this.isImageSet() && this.currentlyInteracting) {\n          var img = this.getCroppedImage(this.scope.cropWidth, this.scope.cropHeight);\n          if (this.attrs.imgDst !== undefined) {\n            this.scope.imgDst = img.src;\n          }\n          this.scope.$apply();\n        }\n        if (this.currentDragTouches.length == 0) {\n          this.isMouseDown = false;\n          this.currentlyInteracting = false;\n        }\n      }\n    }\n    ;\n    //http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n    ImageCropper.prototype.drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n      // Works only if whole image is displayed:\n      // ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n      // The following works correct also when only a part of the image is displayed:\n      ctx.drawImage(img, sx * this.vertSquashRatio, sy * this.vertSquashRatio, sw * this.vertSquashRatio, sh * this.vertSquashRatio, dx, dy, dw, dh);\n    }\n    ;\n    ImageCropper.prototype.detectVerticalSquash = function(img) {\n      var iw = img.naturalWidth\n        , ih = img.naturalHeight;\n      var canvas = document.createElement('canvas');\n      canvas.width = 1;\n      canvas.height = ih;\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(img, 0, 0);\n      var data = ctx.getImageData(0, 0, 1, ih).data;\n      // search image edge pixel position in case it is squashed vertically.\n      var sy = 0;\n      var ey = ih;\n      var py = ih;\n      while (py > sy) {\n        var alpha = data[(py - 1) * 4 + 3];\n        if (alpha === 0) {\n          ey = py;\n        } else {\n          sy = py;\n        }\n        py = (ey + sy) >> 1;\n      }\n      var ratio = (py / ih);\n      return (ratio === 0) ? 1 : ratio;\n    }\n    ;\n    ImageCropper.prototype.onMouseDown = function(e) {\n      if (this.isImageSet()) {\n        this.isMouseDown = true;\n      }\n    }\n    ;\n    ImageCropper.prototype.onMouseUp = function(e) {\n      if (this.isImageSet()) {\n        imageCropperDataShare.setReleased(this.canvas);\n        this.isMouseDown = false;\n        this.handleRelease(new CropTouch(0,0,0));\n        if (this.currentlyInteracting == true) {\n          var img = this.getCroppedImage(this.scope.cropWidth, this.scope.cropHeight);\n          if (this.attrs.imgDst !== undefined) {\n            this.scope.imgDst = img.src;\n          }\n          this.scope.$apply();\n        }\n        this.currentlyInteracting = false;\n      }\n    }\n    ;\n    return ImageCropper;\n  });\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('PointPool', function (Point) {\n\n    function PointPool(inst) {\n      this.borrowed = 0; //for debugging\n      PointPool.instance = this;\n      var prev = null;\n      for (var i = 0; i < inst; i++) {\n        if (i === 0) {\n          this.firstAvailable = new Point();\n          prev = this.firstAvailable;\n        }\n        else {\n          var p = new Point();\n          prev.setNext(p);\n          prev = p;\n        }\n      }\n    }\n\n    PointPool.prototype.borrow = function (x, y) {\n      if (this.firstAvailable == null) {\n        throw \"Pool exhausted\";\n      }\n      this.borrowed++;\n      var p = this.firstAvailable;\n      this.firstAvailable = p.getNext();\n      p.x = x;\n      p.y = y;\n      return p;\n    };\n    PointPool.prototype.returnPoint = function (p) {\n      this.borrowed--;\n      p.x = 0;\n      p.y = 0;\n      p.setNext(this.firstAvailable);\n      this.firstAvailable = p;\n    };\n    return PointPool;\n\n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));\n\n(function (angular, $, mod) {\n  'use strict';\n\n  mod.factory('Point', function () {\n\n    function Point(x, y) {\n      if (x === void 0) {\n        x = 0;\n      }\n      if (y === void 0) {\n        y = 0;\n      }\n      this.x = x;\n      this.y = y;\n    }\n\n    Point.prototype.setNext = function (p) {\n      this.next = p;\n    };\n    Point.prototype.getNext = function () {\n      return this.next;\n    };\n\n    Point.prototype.scale = function(x, y) {\n      this.x *= x;\n      this.y *= y;\n    };\n\n    return Point;\n    \n  });\n\n})(angular, angular.element, angular.module('angular-img-cropper'));"],"sourceRoot":"assets/scripts/"}