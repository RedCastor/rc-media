{"version":3,"sources":["../bower_components/angular-foundation-6/dist/angular-foundation.js"],"names":["global","factory","define","amd","exports","mod","angularFoundation","this","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_classCallCheck","instance","Constructor","TypeError","AccordionController","$scope","$attrs","accordionConfig","$ctrl","groups","closeOthers","openGroup","angular","isDefined","$eval","forEach","group","isOpen","addGroup","groupScope","push","removeGroup","index","indexOf","splice","DropdownToggleController","mediaQueries","$element","$position","$timeout","$transclude","dropdownPaneOffset","close","e","active","closeOnClick","$body","off","open","positionPane","on","elementContents","prototype","slice","apply","querySelectorAll","every","node","target","$apply","offset_","offset","paneOffset","dropdownTrigger","element","querySelector","triggerPosition","position","css","top","height","paneAlign","left","width","transform","hoverTimeout","document","clone","tScope","append","parent","$close","$onDestroy","toggle","mouseover","cancel","mouseleave","dropdownToggle","$document","$window","$location","scope","restrict","bindToController","toggleOnHover","transclude","pane","templateUrl","controller","controllerAs","orbit","_this2","container","overflow","setContainer","container_","orbitBullets","orbitContainer","$interval","$swipe","_this3","slides","currentIdx","skipInterval","addSlide","slide","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","activateState","pct","stopAutoPlay","autoSlider","restartTimer","startPos","nextIdx","bind","start","pos","addClass","move","pctDist","x","offsetWidth","roundFn","Math","floor","ceil","end","removeClass","$onInit","$watch","orbitSlide","vm","float","$inject","Object","defineProperty","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","_typeof","obj","constructor","module","constant","directive","replace","require","accordion","heading","$parse","setHTMLHeading","HTMLHeading","$on","event","getIsOpen","setIsOpen","assign","$parent","$emit","template","link","attr","accordionGroupCtrl","accordionGroupController","html","run","$templateCache","put","closeable","type","data","bindHtmlUnsafe","activeClass","toggleEvent","buttonConfig","attrs","ctrls","buttonsCtrl","ngModelCtrl","$render","toggleClass","equals","$modelValue","btnRadio","hasClass","$setViewValue","getTrueValue","getCheckboxValue","btnCheckboxTrue","getFalseValue","btnCheckboxFalse","attributeValue","defaultValue","val","$compile","openMenu","ulChild","closeMenu","ulParent","one","reportChild","child","childMenus","$postLink","sizeChild","rect","getBoundingClientRect","maxHeight","max","maxWidth","minHeight","drilldownMenu","nodeName","elementWrapper","wrap","elementBack","children","elementChild","prepend","stopImmediatePropagation","preventDefault","disableHover","disableClickOpen","closingTime","opensLeft","dropdownMenu","mouseLeaveTimeout","topLevel","hasAttribute","matchMedia","doc","bool","docElem","documentElement","refNode","firstElementChild","firstChild","fakeBody","createElement","div","id","style","cssText","background","appendChild","q","innerHTML","insertBefore","removeChild","matches","media","get","size","queries","query","name","head","namedQueries","str","styleObject","trim","split","reduce","ret","param","parts","decodeURIComponent","hasOwnProperty","parseStyleToObject","getComputedStyle","fontFamily","iPhoneSniff","test","window","navigator","userAgent","androidSniff","getCurrentSize","matched","atLeast","mobileSniff","StackedMap","stack","find","s","map","filter","$modalStack","evt","modal","getTop","backdrop","currentTarget","stopPropagation","dismiss","windowClass","isTop","modalScope","$rootScope","$animate","$q","backdropIndex","topBackdropIndex","opened","openedWindows","keys","resizeHandler","eq","modalPos","reposition","removeModalWindow","modalInstance","modalWindow","remove","backdropDomEl","leave","then","backdropScope","$destroy","body","OPENED_MODAL_CLASS","isMobile","originalScrollPos","scrollTop","unbind","modalDomEl","isVisible","offsetHeight","getClientRects","getModalCenter","options","el","windowWidth","clientWidth","windowHeight","clientHeight","parseInt","which","keyboard","list","loadFocusElementList","focusChanged","shiftKey","isFocusInFirstItem","isModalFocused","focusLastFocusableElement","isFocusInLastItem","focusFirstFocusableElement","modalDomE1","elements","concat","srcElement","focus","deferred","add","$new","classes","window-class","join","content","detach","promises","enter","lastChild","modalParent","pageYOffset","all","focusedElem","y","result","resolve","reason","reject","dismissAll","leaveOpenIds","arguments","some","skipIds","provider","_this","$get","$injector","$http","$controller","getTemplatePromise","cache","getResolvePromises","resolves","promisesArr","isFunction","when","invoke","$modal","modalOpts","modalResultDeferred","defer","modalOpenedDeferred","promise","modalOptions","extend","Error","tplAndVars","$dismiss","ctrlInstance","ctrlLocals","resolveIter","$modalInstance","disableAutoClose","right","inner","exitOverlay","hide","leftToggle","rightToggle","win","offCanvasWrapper","offCanvas","$interpolate","self","setNumPages","numPages","noop","init","defaultItemsPerPage","itemsPerPage","totalPages","calculateTotalPages","noPrevious","page","noNext","isActive","totalItems","getAttributeValue","attribute","interpolate","render","pages","getPages","selectPage","onSelectPage","boundaryLinks","directionLinks","firstText","previousText","nextText","lastText","rotate","paginationConfig","paginationCtrl","makePage","number","text","isDisabled","disabled","maxSize","currentPage","startPage","endPage","isMaxSized","min","previousPageSet","unshift","nextPageSet","previousPage","nextPage","firstPage","lastPage","align","pagerConfig","isPrevious","isNext","previous","getStyle","cssprop","currentStyle","isStaticPositioned","parentOffsetEl","docDomEl","offsetParent","elBCR","offsetParentBCR","offsetParentEl","clientTop","clientLeft","scrollLeft","boundingClientRect","prop","pageXOffset","animate","progressConfig","bars","addBar","bar","oldValue","$index","update","removeBar","newValue","percent","getPercentage","transition","round","progressCtrl","stateOn","stateOff","ratingConfig","maxRange","createRateObjects","states","defaultOptions","n","range","ratingStates","copy","rate","readonly","onHover","reset","onLeave","ctrl","tabs","isUndefined","openOnLoad","select","tab","addTab","removeTab","newActiveIndex","elem","vertical","justified","onSelect","onDeselect","compile","elm","tabsetCtrl","getActive","setActive","oldVal","$transcludeFn","tabCtrl","isTabHeading","tagName","toLowerCase","tabContentTransclude","contents","headingElement","snake_case","regexp","letter","placement","popupDelay","triggerMap","click","globalOptions","setTriggers","triggers","prefix","defaultTriggerShow","getTriggers","trigger","show","directiveName","startSym","startSymbol","endSym","endSymbol","tElem","tooltipLinker","toggleTooltipBind","tt_isOpen","hideTooltipBind","showTooltipBind","hasEnableExp","tt_popupDelay","popupTimeout","tt_content","createTooltip","tooltip","appendToBody","positionTooltip","$digest","removeTooltip","ttWidth","ttHeight","ttPosition","tt_placement","$observe","tt_title","delay","isNaN","unregisterTriggers","showTrigger","hideTrigger","$tooltip"],"mappings":"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","file":"angular-foundation-6.js","sourcesContent":["(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports);\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports);\n        global.angularFoundation = mod.exports;\n    }\n})(this, function (exports) {\n    'use strict';\n\n    AccordionController.$inject = ['$scope', '$attrs', 'accordionConfig'];\n    DropdownToggleController.$inject = ['$scope', '$attrs', 'mediaQueries', '$element', '$position', '$timeout', '$transclude', 'dropdownPaneOffset'];\n    dropdownToggle.$inject = ['$document', '$window', '$location'];\n    orbit.$inject = ['$element'];\n    orbitBullets.$inject = ['$element'];\n    orbitContainer.$inject = ['$element', '$interval', '$scope', '$swipe'];\n    orbitSlide.$inject = ['$element'];\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    function _toConsumableArray(arr) {\n        if (Array.isArray(arr)) {\n            for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n                arr2[i] = arr[i];\n            }\n\n            return arr2;\n        } else {\n            return Array.from(arr);\n        }\n    }\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    var _createClass = function () {\n        function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n        };\n    }();\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n    } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    /*\n     * angular-foundation-6\n     * http://circlingthesun.github.io/angular-foundation-6/\n    \n     * Version: 0.11.8 - 2017-08-30\n     * License: MIT\n     * (c) \n     */\n\n    function AccordionController($scope, $attrs, accordionConfig) {\n        'ngInject';\n\n        var $ctrl = this;\n        // This array keeps track of the accordion groups\n        $ctrl.groups = [];\n\n        // Ensure that all the groups in this accordion are closed, unless close-others explicitly says not to\n        $ctrl.closeOthers = function (openGroup) {\n            var closeOthers = angular.isDefined($attrs.closeOthers) ? $scope.$eval($attrs.closeOthers) : accordionConfig.closeOthers;\n            if (closeOthers) {\n                angular.forEach(this.groups, function (group) {\n                    if (group !== openGroup) {\n                        group.isOpen = false;\n                    }\n                });\n            }\n        };\n\n        // This is called from the accordion-group directive to add itself to the accordion\n        $ctrl.addGroup = function (groupScope) {\n            var that = this;\n            this.groups.push(groupScope);\n        };\n\n        // This is called from the accordion-group directive when to remove itself\n        $ctrl.removeGroup = function (group) {\n            var index = this.groups.indexOf(group);\n            if (index !== -1) {\n                this.groups.splice(index, 1);\n            }\n        };\n    }\n\n    angular.module('mm.foundation.accordion', []).constant('accordionConfig', {\n        closeOthers: true\n    }).controller('AccordionController', AccordionController)\n\n    // The accordion directive simply sets up the directive controller\n    // and adds an accordion CSS class to itself element.\n    .directive('accordion', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            controller: AccordionController,\n            controllerAs: '$ctrl',\n            transclude: true,\n            replace: false,\n            templateUrl: 'template/accordion/accordion.html'\n        };\n    })\n\n    // The accordion-group directive indicates a block of html that will expand and collapse in an accordion\n    .directive('accordionGroup', function () {\n        'ngInject';\n\n        return {\n            require: { 'accordion': '^accordion' }, // We need this directive to be inside an accordion\n            restrict: 'EA',\n            transclude: true, // It transcludes the contents of the directive into the template\n            replace: true, // The element containing the directive will be replaced with the template\n            templateUrl: 'template/accordion/accordion-group.html',\n            scope: {},\n            controllerAs: \"$ctrl\",\n            bindToController: {\n                heading: '@'\n            }, // Create an isolated scope and interpolate the heading attribute onto this scope\n            controller: ['$scope', '$element', '$attrs', '$parse', function accordionGroupController($scope, $element, $attrs, $parse) {\n                'ngInject';\n\n                var $ctrl = this;\n                $ctrl.isOpen = false;\n\n                $ctrl.setHTMLHeading = function (element) {\n                    $ctrl.HTMLHeading = element;\n                };\n\n                $ctrl.$onInit = function () {\n                    $ctrl.accordion.addGroup($ctrl);\n\n                    $scope.$on('$destroy', function (event) {\n                        $ctrl.accordion.removeGroup($ctrl);\n                    });\n\n                    var getIsOpen;\n                    var setIsOpen;\n\n                    if ($attrs.isOpen) {\n                        getIsOpen = $parse($attrs.isOpen);\n                        setIsOpen = getIsOpen.assign;\n\n                        $scope.$parent.$watch(getIsOpen, function (value) {\n                            $ctrl.isOpen = !!value;\n                        });\n                    }\n\n                    $scope.$watch(function () {\n                        return $ctrl.isOpen;\n                    }, function (value) {\n                        if (value) {\n                            $ctrl.accordion.closeOthers($ctrl);\n                        }\n                        setIsOpen && setIsOpen($scope.$parent, value);\n\n                        if (value) {\n                            $scope.$emit('down.af.accordionGroup', $element, $scope);\n                        } else {\n                            $scope.$emit('up.af.accordionGroup', $element, $scope);\n                        }\n                    });\n                };\n            }]\n        };\n    })\n\n    // Use accordion-heading below an accordion-group to provide a heading containing HTML\n    // <accordion-group>\n    //   <accordion-heading>Heading containing HTML - <img src=\"...\"></accordion-heading>\n    // </accordion-group>\n    .directive('accordionHeading', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            transclude: true, // Grab the contents to be used as the heading\n            template: '', // In effect remove this element!\n            replace: true,\n            require: '^accordionGroup',\n            link: function link(scope, element, attr, accordionGroupCtrl, transclude) {\n                // Pass the heading to the accordion-group controller\n                // so that it can be transcluded into the right place in the template\n                // [The second parameter to transclude causes the elements to be cloned so that they work in ng-repeat]\n                accordionGroupCtrl.setHTMLHeading(transclude(scope, function () {}));\n            }\n        };\n    })\n\n    // Use in the accordion-group template to indicate where you want the heading to be transcluded\n    // You must provide the property on the accordion-group controller that will hold the transcluded element\n    // <div class=\"accordion-group\">\n    //   <div class=\"accordion-heading\" ><a ... accordion-transclude=\"heading\">...</a></div>\n    //   ...\n    // </div>\n    .directive('accordionTransclude', function () {\n        'ngInject';\n\n        return {\n            require: '^accordionGroup',\n            link: function link(scope, element, attr, accordionGroupController) {\n                scope.$watch(function () {\n                    return accordionGroupController.HTMLHeading;\n                }, function (heading) {\n                    if (heading) {\n                        element.html('');\n                        element.append(heading);\n                    }\n                });\n            }\n        };\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.accordion\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/accordion/accordion-group.html\", \"<li class=\\\"accordion-item\\\" ng-class=\\\"{ \\'is-active\\': $ctrl.isOpen }\\\">\\n  <a ng-click=\\\"$ctrl.isOpen = !$ctrl.isOpen\\\" class=\\\"accordion-title\\\" accordion-transclude>{{$ctrl.heading}}</a>\\n  <div class=\\\"accordion-content\\\" style=\\\"display: block;\\\" ng-show=\\\"$ctrl.isOpen\\\" ng-transclude></div>\\n</li>\\n\");\n            $templateCache.put(\"template/accordion/accordion.html\", \"<ul class=\\\"accordion\\\" ng-transclude></ul>\\n\");\n        }]);\n    })();\n    angular.module(\"mm.foundation.alert\", []).controller('AlertController', ['$scope', '$attrs', function ($scope, $attrs) {\n        'ngInject';\n\n        $scope.closeable = 'close' in $attrs && typeof $attrs.close !== \"undefined\";\n    }]).directive('alert', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            controller: 'AlertController',\n            templateUrl: 'template/alert/alert.html',\n            transclude: true,\n            replace: true,\n            scope: {\n                type: '=',\n                close: '&'\n            }\n        };\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.alert\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/alert/alert.html\", \"<div class=\\\"callout\\\" ng-class=\\'(type || \\\"\\\")\\'>\\n  <span ng-transclude></span>\\n  <button ng-click=\\\"close()\\\" ng-show=\\\"closeable\\\" class=\\\"close-button\\\" aria-label=\\\"Close alert\\\" type=\\\"button\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.bindHtml', []).directive('bindHtmlUnsafe', function () {\n        'ngInject';\n\n        return function (scope, element, attr) {\n            element.addClass('ng-binding').data('$binding', attr.bindHtmlUnsafe);\n            scope.$watch(attr.bindHtmlUnsafe, function bindHtmlUnsafeWatchAction(value) {\n                element.html(value || '');\n            });\n        };\n    });\n\n    angular.module('mm.foundation.buttons', []).constant('buttonConfig', {\n        activeClass: 'hollow',\n        toggleEvent: 'click'\n    }).controller('ButtonsController', ['buttonConfig', function (buttonConfig) {\n        this.activeClass = buttonConfig.activeClass;\n        this.toggleEvent = buttonConfig.toggleEvent;\n    }]).directive('btnRadio', function () {\n        'ngInject';\n\n        return {\n            require: ['btnRadio', 'ngModel'],\n            controller: 'ButtonsController',\n            link: function link(scope, element, attrs, ctrls) {\n                var buttonsCtrl = ctrls[0],\n                    ngModelCtrl = ctrls[1];\n\n                //model -> UI\n                ngModelCtrl.$render = function () {\n                    element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)));\n                };\n\n                //ui->model\n                element.bind(buttonsCtrl.toggleEvent, function () {\n                    if (!element.hasClass(buttonsCtrl.activeClass)) {\n                        scope.$apply(function () {\n                            ngModelCtrl.$setViewValue(scope.$eval(attrs.btnRadio));\n                            ngModelCtrl.$render();\n                        });\n                    }\n                });\n            }\n        };\n    }).directive('btnCheckbox', function () {\n        'ngInject';\n\n        return {\n            require: ['btnCheckbox', 'ngModel'],\n            controller: 'ButtonsController',\n            link: function link(scope, element, attrs, ctrls) {\n                var buttonsCtrl = ctrls[0],\n                    ngModelCtrl = ctrls[1];\n\n                function getTrueValue() {\n                    return getCheckboxValue(attrs.btnCheckboxTrue, true);\n                }\n\n                function getFalseValue() {\n                    return getCheckboxValue(attrs.btnCheckboxFalse, false);\n                }\n\n                function getCheckboxValue(attributeValue, defaultValue) {\n                    var val = scope.$eval(attributeValue);\n                    return angular.isDefined(val) ? val : defaultValue;\n                }\n\n                //model -> UI\n                ngModelCtrl.$render = function () {\n                    element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()));\n                };\n\n                //ui->model\n                element.bind(buttonsCtrl.toggleEvent, function () {\n                    scope.$apply(function () {\n                        ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());\n                        ngModelCtrl.$render();\n                    });\n                });\n            }\n        };\n    });\n\n    angular.module('mm.foundation.drilldownMenu', []).directive('drilldownMenu', ['$compile', '$timeout', function ($compile, $timeout) {\n        'ngInject';\n\n        return {\n            bindToController: {},\n            scope: {},\n            restrict: 'A',\n            controllerAs: 'vm',\n            controller: ['$scope', '$element', function controller($scope, $element) {\n                'ngInject';\n\n                var vm = this;\n\n                vm.maxHeight = -1;\n                vm.maxWidth = -1;\n                vm.childMenus = [];\n\n                vm.openMenu = openMenu;\n                vm.closeMenu = closeMenu;\n                vm.reportChild = reportChild;\n\n                vm.$postLink = $postLink;\n            }],\n            link: dmLinkFunction\n        };\n\n        /**\n         * Link function for `ul` which heads up the drilldown menu.\n         * We use this to add the wrapper element around the menu\n         *\n         *\n         * @param {Object} $scope           - The scope for this directive\n         * @param {Object} $element         - The element the directive is attached to\n         * @param {any[]} $attrs            - The attributes list for the element\n         * @param {?Object} drilldownMenu   - The drilldownMenu controller\n         */\n        function dmLinkFunction($scope, $element, $attrs, drilldownMenu) {\n            if (!drilldownMenu) {\n                return;\n            }\n\n            /**\n             * Check if our parent is already a wrapper div with the right class\n             */\n            var parent = $element.parent();\n            if (!parent || !parent[0] || parent[0].nodeName !== 'DIV' || !parent.hasClass('is-drilldown')) {\n                /**\n                 * Add a wrapper element to hide the overflowed menu items\n                 */\n                var wrapper = '<div class=\"is-drilldown\"></div>';\n                var elementWrapper = angular.element(wrapper);\n                $element.wrap(elementWrapper);\n            }\n\n            /**\n             * Compile the element so that angular knows about it and will apply the\n             * the li directive below\n             */\n            drilldownMenu.$element = $element;\n        }\n\n        /**\n         * Opens the UL representing the menu.\n         *\n         * @param {Object} ulChild  - The child UL menu to open\n         */\n        function openMenu(ulChild) {\n            ulChild.removeClass('invisible');\n            ulChild.addClass('is-active');\n        }\n\n        /**\n         * Closes the UL representing the menu.\n         *\n         * @param {Object} ulParent - The UL parent menu to close\n         */\n        function closeMenu(ulParent) {\n            ulParent.addClass('is-closing');\n            ulParent.one('transitionend', function () {\n                ulParent.removeClass('is-active is-closing');\n                ulParent.addClass('invisible');\n            });\n        }\n\n        /**\n         * The main controller gets notified of child menus so that it can manage\n         * them appropriately.\n         *\n         * @param {Object} child   - the child element (as an angular.element).\n         */\n        function reportChild(child) {\n            this.childMenus.push(child);\n        }\n\n        /**\n         * Called when everything is finished linking.  We use this to calculate the\n         * height of the sub mnenus so that we can size the wrapper div appropriately\n         * so that the largest submenu is visible.\n         */\n        function $postLink() {\n            var vm = this;\n            /**\n             * Calculate the height of each menu and work out the maxes.\n             */\n            function sizeChild(child) {\n                var rect = child[0].getBoundingClientRect();\n                vm.maxHeight = Math.max(vm.maxHeight, rect.height);\n                vm.maxWidth = Math.max(vm.maxWidth, rect.width);\n            }\n            sizeChild(vm.$element);\n            angular.forEach(vm.childMenus, sizeChild);\n\n            /**\n             * Turn the sizes into css and apply to the wrapper element (so the\n             * largest submenus are fully visible when shown and don't jump around)\n             */\n            var css = {\n                minHeight: vm.maxHeight + 'px',\n                maxWidth: vm.maxWidth + 'px'\n            };\n\n            var parent = vm.$element.parent();\n\n            parent.css(css);\n        }\n    }]).directive('ul', ['$compile', function ($compile) {\n        'ngInject';\n\n        return {\n            require: '?^^drilldownMenu', // Must be in an ancestor UL, not *this* UL\n            restrict: 'E',\n            link: ulLinkFunction\n        };\n\n        /**\n         * Link function for `ul` which may (or may not) be in a drilldown menu.\n         * We use this to add in the li for moving backwards in the list, and set\n         * the appropriate styles and click handlers.\n         *\n         * NOTE: we require the `drilldownMenu` control to be in an ancestor UL because\n         *       the top level menu doesn't need an automatically added back entry.\n         *\n         * @param {Object} $scope           - The scope for this directive\n         * @param {Object} $element         - The element the directive is attached to\n         * @param {any[]} $attrs            - The attributes list for the element\n         * @param {?Object} drilldownMenu   - The drilldownMenu controller (if any)\n         */\n        function ulLinkFunction($scope, $element, $attrs, drilldownMenu) {\n            if (!drilldownMenu) {\n                return;\n            }\n\n            /**\n             * Check if the dom already contains a \"back\" link with the right class\n             */\n            var elementBack = null;\n            var children = $element.children();\n            for (var i = 0; i < children.length; ++i) {\n                var elementChild = angular.element(children[i]);\n                if (elementChild[0].nodeName === 'LI' && elementChild.hasClass('js-drilldown-back')) {\n                    elementBack = elementChild;\n                }\n            }\n\n            if (!elementBack) {\n                /**\n                 * No existing one, so add in the automatic `back` element\n                 */\n                var backButton = '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>';\n                elementBack = angular.element(backButton);\n                $element.prepend(elementBack);\n\n                /**\n                 * Compile the element so that angular knows about it and will apply the\n                 * the li directive below\n                 */\n                $compile(elementBack)($scope);\n            }\n\n            /**\n             * Add the event handler to the `back` element (whether added or existing)\n             */\n            elementBack.on('click', function (event) {\n                drilldownMenu.closeMenu($element);\n                event.stopImmediatePropagation();\n                event.preventDefault();\n            });\n\n            /**\n             * Report this element to the controller for tracking\n             */\n            drilldownMenu.reportChild($element);\n\n            /**\n             * Now set the styles\n             */\n            $element.addClass('menu vertical nested submenu is-drilldown-submenu ' + 'drilldown-submenu-cover-previous invisible');\n\n            /**\n             * Find the parent LI, and set the event handler to open this level\n             */\n            var parent = $element.parent();\n            parent.addClass('is-drilldown-submenu-parent');\n            parent.on('click', function (event) {\n                drilldownMenu.openMenu($element);\n                // $element.attr('data-is-click', 'true');\n                event.stopImmediatePropagation();\n                event.preventDefault();\n            });\n        }\n    }]);\n\n    angular.module('mm.foundation.dropdownMenu', []).directive('dropdownMenu', ['$compile', function ($compile) {\n        'ngInject';\n\n        return {\n            bindToController: {\n                disableHover: '=',\n                disableClickOpen: '=',\n                closingTime: '=',\n                opensLeft: '='\n            },\n            scope: {},\n            restrict: 'A',\n            controllerAs: 'vm',\n            controller: ['$scope', '$element', function controller($scope, $element) {\n                'ngInject';\n\n                var vm = this;\n            }]\n        };\n    }]).directive('li', ['$timeout', function ($timeout) {\n        'ngInject';\n\n        return {\n            require: '?^^dropdownMenu',\n            restrict: 'E',\n            link: function link($scope, $element, $attrs, dropdownMenu) {\n                if (!dropdownMenu) {\n                    return;\n                }\n\n                var ulChild = null;\n                var children = $element[0].children;\n                var mouseLeaveTimeout;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = angular.element(children[i]);\n                    if (child[0].nodeName === 'UL' && child.hasClass('menu')) {\n                        ulChild = child;\n                    }\n                }\n\n                var topLevel = $element.parent()[0].hasAttribute('dropdown-menu');\n                if (!topLevel) {\n                    $element.addClass('is-submenu-item');\n                }\n\n                if (ulChild) {\n                    ulChild.addClass('is-dropdown-submenu menu submenu vertical');\n                    $element.addClass('is-dropdown-submenu-parent opens-' + (dropdownMenu.opensLeft ? 'left' : 'right'));\n\n                    if (topLevel) {\n                        ulChild.addClass('first-sub');\n                    }\n\n                    if (!dropdownMenu.disableHover) {\n                        $element.on('mouseenter', function () {\n\n                            $timeout.cancel(mouseLeaveTimeout);\n                            $element.parent().children().children().removeClass('js-dropdown-active');\n                            ulChild.addClass('js-dropdown-active');\n                            $element.addClass('is-active');\n                        });\n                    }\n\n                    $element.on('click', function () {\n                        ulChild.addClass('js-dropdown-active');\n                        $element.addClass('is-active');\n                        // $element.attr('data-is-click', 'true');\n                    });\n\n                    $element.on('mouseleave', function () {\n                        mouseLeaveTimeout = $timeout(function () {\n                            ulChild.removeClass('js-dropdown-active');\n                            $element.removeClass('is-active');\n                        }, dropdownMenu.closingTime ? dropdownMenu.closingTime : 500);\n                    });\n                }\n            }\n        };\n    }]);\n    function DropdownToggleController($scope, $attrs, mediaQueries, $element, $position, $timeout, $transclude, dropdownPaneOffset) {\n        'ngInject';\n\n        var $ctrl = this;\n        var hoverTimeout = void 0;\n        var $body = angular.element(document.querySelector('body'));\n        $ctrl.css = {};\n\n        $transclude(function (clone, tScope) {\n            var el = angular.element($element[0].querySelector('span:nth-child(1)'));\n            el.append(clone);\n        }, $element.parent(), 'toggle');\n\n        $transclude(function (clone, tScope) {\n            tScope.$close = close;\n            var el = angular.element($element[0].querySelector('div:nth-child(2)'));\n            el.append(clone);\n        }, $element.parent(), 'pane');\n\n        $timeout(function () {\n            positionPane();\n        });\n\n        function close(e) {\n            $ctrl.active = false;\n\n            if ($ctrl.closeOnClick) {\n                $body.off('click', closeOnClick);\n            }\n        }\n\n        function open(e) {\n            $ctrl.active = true;\n\n            positionPane(dropdownPaneOffset);\n\n            if ($ctrl.closeOnClick) {\n                $body.on('click', closeOnClick);\n            }\n        }\n\n        function closeOnClick(e) {\n            var elementContents = Array.prototype.slice.apply($element[0].querySelectorAll('*'));\n\n            if (!elementContents.length) {\n                return;\n            }\n\n            var isOuterElement = elementContents.every(function (node) {\n                return node !== e.target;\n            });\n\n            if (isOuterElement) {\n                close();\n                $scope.$apply();\n            }\n        }\n\n        $ctrl.$onDestroy = function () {\n            if ($ctrl.closeOnClick) {\n                $body.off('click', closeOnClick);\n            }\n        };\n\n        $ctrl.toggle = function () {\n            if ($ctrl.active) {\n                close();\n            } else {\n                open();\n            }\n        };\n\n        $ctrl.mouseover = function () {\n            $timeout.cancel(hoverTimeout);\n            $timeout(function () {\n                $ctrl.active = true;\n            });\n            positionPane(dropdownPaneOffset);\n        };\n\n        $ctrl.mouseleave = function () {\n            $timeout.cancel(hoverTimeout);\n            hoverTimeout = $timeout(function () {\n                $scope.$apply(function () {\n                    $ctrl.active = false;\n                });\n            }, 250);\n        };\n\n        function positionPane(offset_) {\n            var offset = $ctrl.paneOffset || offset_;\n            var dropdownTrigger = angular.element($element[0].querySelector('toggle *:first-child'));\n\n            // let dropdownWidth = dropdown.prop('offsetWidth');\n            var triggerPosition = $position.position(dropdownTrigger);\n\n            $ctrl.css.top = triggerPosition.top + triggerPosition.height + offset + 'px';\n\n            if ($ctrl.paneAlign === 'center') {\n                $ctrl.css.left = triggerPosition.left + triggerPosition.width / 2 + 'px';\n                $ctrl.css.transform = 'translateX(-50%)';\n            } else if ($ctrl.paneAlign === 'right') {\n                $ctrl.css.left = triggerPosition.left + triggerPosition.width + 'px';\n                $ctrl.css.transform = 'translateX(-100%)';\n            } else {\n                $ctrl.css.left = triggerPosition.left + 'px';\n            }\n        }\n    }\n\n    function dropdownToggle($document, $window, $location) {\n        'ngInject';\n\n        return {\n            scope: {},\n            restrict: 'EA',\n            bindToController: {\n                closeOnClick: '=',\n                paneAlign: '@',\n                toggleOnHover: '=',\n                paneOffset: '='\n            },\n            transclude: {\n                'toggle': 'toggle',\n                'pane': 'pane'\n            },\n            templateUrl: 'template/dropdownToggle/dropdownToggle.html',\n            controller: DropdownToggleController,\n            controllerAs: '$ctrl'\n        };\n    }\n\n    /*\n     * dropdownToggle - Provides dropdown menu functionality\n     * @restrict class or attribute\n     * @example:\n    \n       <a dropdown-toggle=\"#dropdown-menu\">My Dropdown Menu</a>\n       <ul id=\"dropdown-menu\" class=\"f-dropdown\">\n         <li ng-repeat=\"choice in dropChoices\">\n           <a ng-href=\"{{choice.href}}\">{{choice.text}}</a>\n         </li>\n       </ul>\n     */\n    angular.module('mm.foundation.dropdownToggle', ['mm.foundation.position', 'mm.foundation.mediaQueries']).directive('dropdownToggle', dropdownToggle).constant('dropdownPaneOffset', 1);\n\n    (function () {\n        angular.module(\"mm.foundation.dropdownToggle\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/dropdownToggle/dropdownToggle.html\", \"<span\\n    ng-class=\\\"{\\'is-open\\': $ctrl.active}\\\"\\n    ng-click=\\\"$ctrl.toggle()\\\"\\n    ng-mouseover=\\\"$ctrl.toggleOnHover && $ctrl.mouseover()\\\"\\n    ng-mouseleave=\\\"$ctrl.toggleOnHover && $ctrl.mouseleave($event)\\\"></span>\\n<div\\n    ng-style=\\\"$ctrl.css\\\"\\n    ng-class=\\\"{\\'is-open\\': $ctrl.active}\\\"\\n    ng-attr-aria-hidden=\\\"$ctrl.active\\\"\\n    ng-mouseover=\\\"$ctrl.toggleOnHover && $ctrl.mouseover()\\\"\\n    ng-mouseleave=\\\"$ctrl.toggleOnHover && $ctrl.mouseleave($event)\\\"\\n    class=\\\"dropdown-pane{{$ctrl.paneAlign && \\' dropdown-pane-\\' + $ctrl.paneAlign}}\\\"></div>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.mediaQueries', []).factory('matchMedia', ['$document', '$window', function ($document, $window) {\n        'ngInject';\n        // MatchMedia for IE <= 9\n\n        return $window.matchMedia || function (doc, undefined) {\n            var bool = void 0;\n            var docElem = doc.documentElement;\n            var refNode = docElem.firstElementChild || docElem.firstChild;\n            // fakeBody required for <FF4 when executed in <head>\n            var fakeBody = doc.createElement('body');\n            var div = doc.createElement('div');\n\n            div.id = 'mq-test-1';\n            div.style.cssText = 'position:absolute;top:-100em';\n            fakeBody.style.background = 'none';\n            fakeBody.appendChild(div);\n\n            return function (q) {\n                div.innerHTML = '&shy;<style media=\"' + q + '\"> #mq-test-1 { width: 42px; }</style>';\n                docElem.insertBefore(fakeBody, refNode);\n                bool = div.offsetWidth === 42;\n                docElem.removeChild(fakeBody);\n                return {\n                    matches: bool,\n                    media: q\n                };\n            };\n        }($document[0]);\n    }]).factory('mediaQueries', ['$document', 'matchMedia', function ($document, matchMedia) {\n        'ngInject';\n\n        // Thank you: https://github.com/sindresorhus/query-string\n\n        function parseStyleToObject(str) {\n            var styleObject = {};\n\n            if (typeof str !== 'string') {\n                return styleObject;\n            }\n\n            str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n            if (!str) {\n                return styleObject;\n            }\n\n            styleObject = str.split('&').reduce(function (ret, param) {\n                var parts = param.replace(/\\+/g, ' ').split('=');\n                var key = parts[0];\n                var val = parts[1];\n                key = decodeURIComponent(key);\n\n                // missing `=` should be `null`:\n                // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n                val = val === undefined ? null : decodeURIComponent(val);\n\n                if (!ret.hasOwnProperty(key)) {\n                    ret[key] = val;\n                } else if (Array.isArray(ret[key])) {\n                    ret[key].push(val);\n                } else {\n                    ret[key] = [ret[key], val];\n                }\n                return ret;\n            }, {});\n\n            return styleObject;\n        }\n\n        var head = angular.element($document[0].querySelector('head'));\n        head.append('<meta class=\"foundation-mq\" />');\n        var extractedStyles = getComputedStyle(head[0].querySelector('meta.foundation-mq')).fontFamily;\n        var namedQueries = parseStyleToObject(extractedStyles);\n        var queries = [];\n\n        for (var key in namedQueries) {\n            queries.push({\n                name: key,\n                value: 'only screen and (min-width: ' + namedQueries[key] + ')'\n            });\n        }\n\n        // Gets the media query of a breakpoint.\n        function get(size) {\n            for (var i in queries) {\n                var query = queries[i];\n                if (size === query.name) return query.value;\n            }\n\n            return null;\n        }\n\n        function atLeast(size) {\n            var query = get(size);\n\n            if (query) {\n                return window.matchMedia(query).matches;\n            }\n            return false;\n        }\n\n        // Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n        function getCurrentSize() {\n            var matched = void 0;\n\n            for (var i = 0; i < queries.length; i++) {\n                var query = queries[i];\n\n                if (matchMedia(query.value).matches) {\n                    matched = query;\n                }\n            }\n\n            if ((typeof matched === 'undefined' ? 'undefined' : _typeof(matched)) === 'object') {\n                return matched.name;\n            }\n            return matched;\n        }\n\n        var iPhoneSniff = function iPhoneSniff() {\n            return (/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)\n            );\n        };\n        var androidSniff = function androidSniff() {\n            return (/Android/.test(window.navigator.userAgent)\n            );\n        };\n\n        return {\n            getCurrentSize: getCurrentSize,\n            atLeast: atLeast,\n            mobileSniff: function mobileSniff() {\n                return iPhoneSniff() || androidSniff();\n            }\n        };\n    }]);\n\n    var StackedMap = exports.StackedMap = function () {\n        function StackedMap() {\n            _classCallCheck(this, StackedMap);\n\n            this.stack = [];\n        }\n\n        _createClass(StackedMap, [{\n            key: 'add',\n            value: function add(key, value) {\n                this.stack.push({\n                    key: key,\n                    value: value\n                });\n            }\n        }, {\n            key: 'get',\n            value: function get(key) {\n                return this.stack.find(function (s) {\n                    return s.key === key;\n                });\n            }\n        }, {\n            key: 'keys',\n            value: function keys() {\n                return this.stack.map(function (s) {\n                    return s.key;\n                });\n            }\n        }, {\n            key: 'top',\n            value: function top() {\n                return this.stack[this.stack.length - 1];\n            }\n        }, {\n            key: 'remove',\n            value: function remove(key) {\n                this.stack = this.stack.filter(function (s) {\n                    return s.key !== key;\n                });\n            }\n        }, {\n            key: 'removeTop',\n            value: function removeTop() {\n                return this.stack.splice(this.stack.length - 1, 1)[0];\n            }\n        }, {\n            key: 'length',\n            value: function length() {\n                return this.stack.length;\n            }\n        }]);\n\n        return StackedMap;\n    }();\n\n    angular.module('mm.foundation.modal', ['mm.foundation.mediaQueries'])\n\n    /**\n     * A helper directive for the $modal service. It creates a backdrop element.\n     */\n    .directive('modalBackdrop', ['$modalStack', function ($modalStack) {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            replace: true,\n            templateUrl: 'template/modal/backdrop.html',\n            link: function link(scope) {\n                scope.close = function (evt) {\n                    var modal = $modalStack.getTop();\n                    if (modal && modal.value.closeOnClick && modal.value.backdrop && modal.value.backdrop !== 'static' && evt.target === evt.currentTarget) {\n                        evt.preventDefault();\n                        evt.stopPropagation();\n                        $modalStack.dismiss(modal.key, 'backdrop click');\n                    }\n                };\n            }\n        };\n    }]).directive('modalWindow', ['$modalStack', function ($modalStack) {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            scope: {\n                index: '@'\n            },\n            replace: true,\n            transclude: true,\n            templateUrl: 'template/modal/window.html',\n            link: function link(scope, element, attrs) {\n                scope.windowClass = attrs.windowClass || '';\n                scope.isTop = function () {\n                    var top = $modalStack.getTop();\n                    return top ? top.value.modalScope && top.value.modalScope === scope.$parent : true;\n                };\n            }\n        };\n    }]).factory('$modalStack', ['$window', '$timeout', '$document', '$compile', '$rootScope', '$animate', '$q', 'mediaQueries', function ($window, $timeout, $document, $compile, $rootScope, $animate, $q, mediaQueries) {\n        'ngInject';\n\n        var isMobile = mediaQueries.mobileSniff();\n        var OPENED_MODAL_CLASS = 'is-reveal-open';\n        // For modal focus\n        var tabbableSelector = 'a[href], area[href], input:not([disabled]):not([tabindex=\\'-1\\']), ' + 'button:not([disabled]):not([tabindex=\\'-1\\']),select:not([disabled]):not([tabindex=\\'-1\\']), textarea:not([disabled]):not([tabindex=\\'-1\\']), ' + 'iframe, object, embed, *[tabindex]:not([tabindex=\\'-1\\']), *[contenteditable=true]';\n\n        var originalScrollPos = null; // For mobile scroll hack\n        var openedWindows = new StackedMap();\n        var $modalStack = {};\n\n        function backdropIndex() {\n            var topBackdropIndex = -1;\n            var opened = openedWindows.keys();\n            for (var i = 0; i < opened.length; i++) {\n                if (openedWindows.get(opened[i]).value.backdrop) {\n                    topBackdropIndex = i;\n                }\n            }\n            return topBackdropIndex;\n        }\n\n        function resizeHandler() {\n            var opened = openedWindows.keys();\n            var fixedPositiong = opened.length > 0;\n            var body = $document.find('body').eq(0);\n\n            for (var i = 0; i < opened.length; i++) {\n                var modalPos = $modalStack.reposition(opened[i]);\n                if (modalPos && modalPos.position !== 'fixed') {\n                    fixedPositiong = false;\n                }\n            }\n        }\n\n        function removeModalWindow(modalInstance) {\n            var modalWindow = openedWindows.get(modalInstance).value;\n\n            // clean up the stack\n            openedWindows.remove(modalInstance);\n\n            // Remove backdrop\n            if (modalWindow.backdropDomEl) {\n                $animate.leave(modalWindow.backdropDomEl).then(function () {\n                    modalWindow.backdropScope.$destroy();\n                });\n            }\n\n            // Remove modal\n            if (openedWindows.length() === 0) {\n                var body = $document.find('body').eq(0);\n                body.removeClass(OPENED_MODAL_CLASS);\n\n                if (isMobile) {\n                    var html = $document.find('html').eq(0);\n                    html.removeClass(OPENED_MODAL_CLASS);\n                    if (originalScrollPos) {\n                        body[0].scrollTop = originalScrollPos;\n                        originalScrollPos = null;\n                    }\n                }\n                angular.element($window).unbind('resize', resizeHandler);\n            }\n\n            // remove window DOM element\n            $animate.leave(modalWindow.modalDomEl).then(function () {\n                modalWindow.modalScope.$destroy();\n            });\n        }\n\n        function isVisible(element) {\n            return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n        }\n\n        function getModalCenter(modalInstance) {\n            var options = modalInstance.options;\n\n            if (options.backdrop) {\n                return { left: 0, position: 'relative' };\n            }\n\n            var el = options.modalDomEl;\n            var body = $document.find('body').eq(0);\n\n            var windowWidth = body.clientWidth || $document[0].documentElement.clientWidth;\n            var windowHeight = body.clientHeight || $document[0].documentElement.clientHeight;\n\n            var width = el[0].offsetWidth;\n            var height = el[0].offsetHeight;\n\n            var left = parseInt((windowWidth - width) / 2, 10);\n\n            var top = 0;\n            if (height < windowHeight) {\n                top = parseInt((windowHeight - height) / 4, 10);\n            }\n\n            var modalPos = options.modalPos = options.modalPos || {};\n\n            modalPos.left = left;\n            modalPos.position = 'fixed';\n\n            return modalPos;\n        }\n\n        $document.on('keydown', function (evt) {\n            var modal = openedWindows.top();\n            if (!modal) {\n                return;\n            }\n            if (evt.which === 27) {\n                if (modal.value.keyboard) {\n                    $rootScope.$apply(function () {\n                        $modalStack.dismiss(modal.key);\n                    });\n                }\n            } else if (evt.which === 9) {\n                var list = $modalStack.loadFocusElementList(modal);\n                var focusChanged = false;\n                if (evt.shiftKey) {\n                    if ($modalStack.isFocusInFirstItem(evt, list) || $modalStack.isModalFocused(evt, modal)) {\n                        focusChanged = $modalStack.focusLastFocusableElement(list);\n                    }\n                } else {\n                    if ($modalStack.isFocusInLastItem(evt, list)) {\n                        focusChanged = $modalStack.focusFirstFocusableElement(list);\n                    }\n                }\n\n                if (focusChanged) {\n                    evt.preventDefault();\n                    evt.stopPropagation();\n                }\n            }\n        });\n\n        $modalStack.loadFocusElementList = function (modalWindow) {\n            if (!modalWindow) {\n                return [];\n            }\n            var modalDomE1 = modalWindow.value.modalDomEl;\n            if (modalDomE1 && modalDomE1.length) {\n                var elements = modalDomE1[0].querySelectorAll(tabbableSelector);\n                return [].concat(_toConsumableArray(elements)).filter(function (e) {\n                    return isVisible(e);\n                });\n            }\n            return [];\n        };\n\n        $modalStack.isModalFocused = function (evt, modalWindow) {\n            if (evt && modalWindow) {\n                var modalDomEl = modalWindow.value.modalDomEl;\n                if (modalDomEl && modalDomEl.length) {\n                    return (evt.target || evt.srcElement) === modalDomEl[0];\n                }\n            }\n            return false;\n        };\n\n        $modalStack.isFocusInLastItem = function (evt, list) {\n            if (list.length > 0) {\n                return (evt.target || evt.srcElement) === list[list.length - 1];\n            }\n            return false;\n        };\n\n        $modalStack.focusFirstFocusableElement = function (list) {\n            if (list.length > 0) {\n                list[0].focus();\n                return true;\n            }\n            return false;\n        };\n\n        $modalStack.focusLastFocusableElement = function (list) {\n            if (list.length > 0) {\n                list[list.length - 1].focus();\n                return true;\n            }\n            return false;\n        };\n\n        $modalStack.isFocusInFirstItem = function (evt, list) {\n            if (list.length > 0) {\n                return (evt.target || evt.srcElement) === list[0];\n            }\n            return false;\n        };\n\n        $modalStack.open = function (modalInstance, options) {\n            modalInstance.options = {\n                deferred: options.deferred,\n                modalScope: options.scope,\n                backdrop: options.backdrop,\n                keyboard: options.keyboard,\n                closeOnClick: options.closeOnClick,\n                id: options.id\n            };\n            openedWindows.add(modalInstance, modalInstance.options);\n\n            var currBackdropIndex = backdropIndex();\n\n            var backdropDomEl = void 0;\n\n            if (options.backdrop) {\n                var backdropScope = $rootScope.$new(true);\n                backdropDomEl = $compile('<div modal-backdrop></div>')(backdropScope);\n                openedWindows.top().value.backdropDomEl = backdropDomEl;\n                openedWindows.top().value.backdropScope = backdropScope;\n            }\n\n            if (openedWindows.length() === 1) {\n                angular.element($window).on('resize', resizeHandler);\n            }\n\n            var classes = [];\n            if (options.windowClass) {\n                classes.push(options.windowClass);\n            }\n\n            if (options.size) {\n                classes.push(options.size);\n            }\n\n            if (!options.backdrop) {\n                classes.push('without-overlay');\n            }\n\n            var modalDomEl = angular.element('<div modal-window></div>').attr({\n                style: '\\n                visibility: visible;\\n                z-index: -1;\\n                display: block;\\n            ',\n                'window-class': classes.join(' '),\n                index: openedWindows.length() - 1\n            });\n\n            modalDomEl.html(options.content);\n            $compile(modalDomEl)(options.scope);\n            openedWindows.top().value.modalDomEl = modalDomEl;\n\n            return $timeout(function () {\n                // let the directives kick in\n                options.scope.$apply();\n\n                // Attach, measure, remove\n                var body = $document.find('body').eq(0);\n                body.prepend(modalDomEl);\n                var modalPos = getModalCenter(modalInstance, true);\n                modalDomEl.detach();\n\n                modalDomEl.attr({\n                    style: '\\n                    visibility: visible;\\n                    left: ' + modalPos.left + 'px;\\n                    display: block;\\n                    position: ' + modalPos.position + ';\\n                '\n                });\n\n                var promises = [];\n\n                if (backdropDomEl) {\n                    promises.push($animate.enter(backdropDomEl, body, body[0].lastChild));\n                }\n\n                var modalParent = backdropDomEl || body;\n\n                promises.push($animate.enter(modalDomEl, modalParent, modalParent[0].lastChild));\n\n                if (isMobile) {\n                    originalScrollPos = $window.pageYOffset;\n                    var html = $document.find('html').eq(0);\n                    html.addClass(OPENED_MODAL_CLASS);\n                }\n\n                body.addClass(OPENED_MODAL_CLASS);\n\n                // Only for no backdrop modals\n                if (!options.backdrop) {\n                    options.scope.$watch(function () {\n                        return Math.floor(modalDomEl[0].offsetHeight / 10);\n                    }, resizeHandler);\n                }\n\n                return $q.all(promises).then(function () {\n                    var focusedElem = modalDomEl[0].querySelector('[autofocus]') || modalDomEl[0];\n                    var y = modalParent[0].scrollTop;\n                    focusedElem.focus();\n                    modalParent[0].scrollTop = y;\n                });\n            });\n        };\n\n        $modalStack.reposition = function (modalInstance) {\n            var modalWindow = openedWindows.get(modalInstance).value;\n            if (modalWindow) {\n                var modalDomEl = modalWindow.modalDomEl;\n                var modalPos = getModalCenter(modalInstance);\n                modalDomEl.css('left', modalPos.left + 'px');\n                modalDomEl.css('position', modalPos.position);\n                return modalPos;\n            }\n            return {};\n        };\n\n        $modalStack.close = function (modalInstance, result) {\n            var modalWindow = openedWindows.get(modalInstance);\n            if (modalWindow) {\n                modalWindow.value.deferred.resolve(result);\n                return modalInstance.opened.then(function () {\n                    removeModalWindow(modalInstance);\n                });\n            }\n            return $q.resolve();\n        };\n\n        $modalStack.dismiss = function (modalInstance, reason) {\n            var modalWindow = openedWindows.get(modalInstance);\n            if (modalWindow) {\n                modalWindow.value.deferred.reject(reason);\n                return modalInstance.opened.then(function () {\n                    removeModalWindow(modalInstance);\n                });\n            }\n            return $q.resolve();\n        };\n\n        $modalStack.dismissAll = function (reason) {\n            var leaveOpenIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n            return $q.all(openedWindows.keys().filter(function (key) {\n                return leaveOpenIds.indexOf(openedWindows.get(key).value.id) === -1;\n            }).map(function (key) {\n                return $modalStack.dismiss(key, reason);\n            }));\n        };\n\n        $modalStack.getTop = function () {\n            return openedWindows.top();\n        };\n\n        $modalStack.isOpen = function (id) {\n            return openedWindows.keys().some(function (key) {\n                return skipIds.indexOf(openedWindows.get().value.id) !== -1;\n            });\n        };\n\n        return $modalStack;\n    }]).provider('$modal', function () {\n        'ngInject';\n\n        var _this = this;\n\n        this.options = {\n            backdrop: true, // can be also false or 'static'\n            keyboard: true,\n            closeOnClick: true,\n            id: 0\n        };\n\n        this.$get = ['$injector', '$rootScope', '$q', '$http', '$templateCache', '$controller', '$modalStack', function ($injector, $rootScope, $q, $http, $templateCache, $controller, $modalStack) {\n            'ngInject';\n\n            var $modal = {};\n\n            function getTemplatePromise(options) {\n                if (options.template) {\n                    return $q.resolve(options.template);\n                }\n                return $http.get(options.templateUrl, {\n                    cache: $templateCache\n                }).then(function (result) {\n                    return result.data;\n                });\n            }\n\n            function getResolvePromises(resolves) {\n                var promisesArr = [];\n                angular.forEach(resolves, function (value) {\n                    if (angular.isFunction(value) || angular.isArray(value)) {\n                        promisesArr.push($q.when($injector.invoke(value)));\n                    }\n                });\n                return promisesArr;\n            }\n\n            $modal.open = function (modalOpts) {\n                var modalResultDeferred = $q.defer();\n                var modalOpenedDeferred = $q.defer();\n\n                // prepare an instance of a modal to be injected into controllers and returned to a caller\n                var modalInstance = {\n                    result: modalResultDeferred.promise,\n                    opened: modalOpenedDeferred.promise,\n                    close: function close(result) {\n                        $modalStack.close(modalInstance, result);\n                    },\n                    dismiss: function dismiss(reason) {\n                        $modalStack.dismiss(modalInstance, reason);\n                    },\n                    reposition: function reposition() {\n                        $modalStack.reposition(modalInstance);\n                    }\n                };\n\n                // merge and clean up options\n                var modalOptions = angular.extend({}, _this.options, modalOpts);\n                modalOptions.resolve = modalOptions.resolve || {};\n\n                // verify options\n                if (!modalOptions.template && !modalOptions.templateUrl) {\n                    throw new Error('One of template or templateUrl options is required.');\n                }\n\n                var templateAndResolvePromise = $q.all([getTemplatePromise(modalOptions)].concat(getResolvePromises(modalOptions.resolve)));\n\n                var openedPromise = templateAndResolvePromise.then(function (tplAndVars) {\n                    var modalScope = (modalOptions.scope || $rootScope).$new();\n                    modalScope.$close = modalInstance.close;\n                    modalScope.$dismiss = modalInstance.dismiss;\n\n                    var ctrlInstance = void 0;\n                    var ctrlLocals = {};\n                    var resolveIter = 1;\n\n                    // controllers\n                    if (modalOptions.controller) {\n                        ctrlLocals.$scope = modalScope;\n                        ctrlLocals.$modalInstance = modalInstance;\n                        angular.forEach(modalOptions.resolve, function (value, key) {\n                            ctrlLocals[key] = tplAndVars[resolveIter++];\n                        });\n\n                        ctrlInstance = $controller(modalOptions.controller, ctrlLocals);\n                        if (modalOptions.controllerAs) {\n                            modalScope[modalOptions.controllerAs] = ctrlInstance;\n                        }\n                    }\n\n                    return $modalStack.open(modalInstance, {\n                        scope: modalScope,\n                        deferred: modalResultDeferred,\n                        content: tplAndVars[0],\n                        backdrop: modalOptions.backdrop,\n                        keyboard: modalOptions.keyboard,\n                        windowClass: modalOptions.windowClass,\n                        size: modalOptions.size,\n                        closeOnClick: modalOptions.closeOnClick,\n                        id: modalOptions.id\n                    });\n                }, function (reason) {\n                    modalResultDeferred.reject(reason);\n                    return $q.reject(reason);\n                });\n\n                openedPromise.then(function () {\n                    modalOpenedDeferred.resolve();\n                }, function () {\n                    modalOpenedDeferred.reject();\n                });\n\n                return modalInstance;\n            };\n            return $modal;\n        }];\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.modal\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/modal/backdrop.html\", \"<div ng-animate-children=\\\"true\\\"\\n    class=\\\"reveal-overlay ng-animate\\\"\\n    ng-click=\\\"close($event)\\\"\\n    style=\\\"display: block;\\\"></div>\\n\");\n            $templateCache.put(\"template/modal/window.html\", \"<div tabindex=\\\"-1\\\" class=\\\"reveal {{ windowClass }}\\\" style=\\\"display: block; visibility: visible;\\\">\\n  <div ng-transclude></div>\\n</div>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.offcanvas', []).directive('offCanvasWrapper', ['$window', function ($window) {\n        'ngInject';\n\n        return {\n            scope: {},\n            bindToController: { disableAutoClose: '=' },\n            controllerAs: 'vm',\n            restrict: 'C',\n            controller: ['$scope', '$element', function controller($scope, $element) {\n                'ngInject';\n\n                var $ctrl = this;\n\n                var left = angular.element($element[0].querySelector('.position-left'));\n                var right = angular.element($element[0].querySelector('.position-right'));\n                var inner = angular.element($element[0].querySelector('.off-canvas-wrapper-inner'));\n                // var overlay = angular.element(); js-off-canvas-exit\n                var exitOverlay = angular.element('<div class=\"js-off-canvas-exit\"></div>');\n                inner.append(exitOverlay);\n\n                exitOverlay.on('click', function () {\n                    $ctrl.hide();\n                });\n\n                $ctrl.leftToggle = function () {\n                    inner && inner.toggleClass('is-off-canvas-open');\n                    inner && inner.toggleClass('is-open-left');\n                    left && left.toggleClass('is-open');\n                    exitOverlay.addClass('is-visible');\n                    // is-visible\n                };\n\n                $ctrl.rightToggle = function () {\n                    inner && inner.toggleClass('is-off-canvas-open');\n                    inner && inner.toggleClass('is-open-right');\n                    right && right.toggleClass('is-open');\n                    exitOverlay.addClass('is-visible');\n                };\n\n                $ctrl.hide = function () {\n                    inner && inner.removeClass('is-open-left');\n                    inner && inner.removeClass('is-open-right');\n                    left && left.removeClass('is-open');\n                    right && right.removeClass('is-open');\n                    inner && inner.removeClass('is-off-canvas-open');\n                    exitOverlay.removeClass('is-visible');\n                };\n\n                var win = angular.element($window);\n\n                win.bind('resize.body', $ctrl.hide);\n\n                $scope.$on('$destroy', function () {\n                    win.unbind('resize.body', $ctrl.hide);\n                });\n            }]\n        };\n    }]).directive('leftOffCanvasToggle', function () {\n        'ngInject';\n\n        return {\n            require: '^^offCanvasWrapper',\n            restrict: 'C',\n            link: function link($scope, element, attrs, offCanvasWrapper) {\n                element.on('click', function () {\n                    offCanvasWrapper.leftToggle();\n                });\n            }\n        };\n    }).directive('rightOffCanvasToggle', function () {\n        'ngInject';\n\n        return {\n            require: '^^offCanvasWrapper',\n            restrict: 'C',\n            link: function link($scope, element, attrs, offCanvasWrapper) {\n                element.on('click', function () {\n                    offCanvasWrapper.rightToggle();\n                });\n            }\n        };\n    }).directive('offCanvas', function () {\n        'ngInject';\n\n        return {\n            require: { 'offCanvasWrapper': '^^offCanvasWrapper' },\n            restrict: 'C',\n            bindToController: {},\n            scope: {},\n            controllerAs: 'vm',\n            controller: function controller() {}\n        };\n    }).directive('li', function () {\n        'ngInject';\n\n        return {\n            require: '?^^offCanvas',\n            restrict: 'E',\n            link: function link($scope, element, attrs, offCanvas) {\n                if (!offCanvas || offCanvas.offCanvasWrapper.disableAutoClose) {\n                    return;\n                }\n                element.on('click', function () {\n                    offCanvas.offCanvasWrapper.hide();\n                });\n            }\n        };\n    });\n\n    function orbit($element) {\n        'ngInject';\n\n        var _this2 = this;\n\n        this.container = null;\n        this.$element = $element;\n        $element.css({ overflow: 'hidden' });\n        this.setContainer = function (container_) {\n            _this2.container = container_;\n        };\n    }\n\n    function orbitBullets($element) {\n        'ngInject';\n\n        var vm = this;\n    }\n\n    function orbitContainer($element, $interval, $scope, $swipe) {\n        'ngInject';\n\n        var _this3 = this;\n\n        this.slides = [];\n        this.currentIdx = 0;\n        this.skipInterval = true;\n        $element.css({ position: 'relative' });\n        this.addSlide = function (slide) {\n            _this3.slides.push(slide);\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = _this3.slides[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var _slide = _step.value;\n\n                    _slide.element.css({ width: 100 / _this3.slides.length + '%' });\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            $element.css({ width: _this3.slides.length * 100 + '%' });\n        };\n        this.activateState = function (index) {\n            _this3.currentIdx = index;\n            var pct = 100 * _this3.currentIdx / _this3.slides.length;\n            $element.css({ transform: 'translateX(' + -pct + '%)' });\n        };\n        this.stopAutoPlay = function () {\n            $interval.cancel(_this3.autoSlider);\n            _this3.autoSlider = null;\n        };\n        this.restartTimer = function () {\n            _this3.stopAutoPlay();\n            _this3.autoSlider = $interval(function () {\n                _this3.activateState(++_this3.currentIdx % _this3.slides.length);\n            }, 5000);\n        };\n        $element.on('mouseenter', this.stopAutoPlay);\n        $element.on('mouseleave', this.restartTimer);\n        this.$onDestroy = function () {\n            _this3.stopAutoPlay();\n            $element.off('mouseenter', _this3.stopAutoPlay);\n            $element.off('mouseleave', _this3.restartTimer);\n        };\n\n        var startPos = null;\n        var nextIdx = this.currentIdx;\n        var vm = this;\n\n        $swipe.bind($element, {\n            start: function start(pos) {\n                $element.addClass('touching');\n                _this3.stopAutoPlay();\n                startPos = pos;\n            },\n            move: function move(pos) {\n                var dist = startPos.x - pos.x;\n                var width = _this3.orbit.$element[0].offsetWidth;\n                var pctDist = 100 * dist / width;\n                var lastPct = 100 * _this3.currentIdx / _this3.slides.length;\n                var pct = lastPct + pctDist / _this3.slides.length;\n                var roundFn = pos.x > startPos.x ? Math.floor : Math.ceil;\n\n                nextIdx = roundFn(pct / (100 / _this3.slides.length));\n\n                $element.css({ transform: 'translateX(' + -pct + '%)' });\n            },\n            end: function end(pos) {\n                $element.removeClass('touching');\n\n                if (nextIdx >= _this3.slides.length) {\n                    nextIdx = _this3.slides.length - 1;\n                } else if (nextIdx < 0) {\n                    nextIdx = 0;\n                }\n\n                _this3.activateState(nextIdx);\n                _this3.restartTimer();\n                $scope.$apply();\n            },\n            cancel: function cancel() {\n                _this3.restartTimer();\n                $element.removeClass('touching');\n            }\n        });\n        this.$onInit = function () {\n            _this3.orbit.setContainer(_this3);\n            // this.restartTimer();\n            $scope.$watch(function () {\n                return _this3.currentIdx;\n            }, _this3.restartTimer);\n        };\n    }\n    function orbitSlide($element) {\n        'ngInject';\n\n        var vm = this;\n        // transform: translateX(-50%);\n        $element.css({ overflow: 'hidden', float: 'left', position: 'relative' });\n        this.$onInit = function () {\n            vm.orbitContainer.addSlide({ element: $element });\n        };\n    }\n\n    angular.module('mm.foundation.orbit', ['ngTouch']).directive('orbit', function () {\n        return {\n            scope: {},\n            restrict: 'C',\n            controller: orbit\n        };\n    }).directive('orbitContainer', function () {\n        return {\n            scope: {},\n            restrict: 'C',\n            require: { orbit: '^^orbit' },\n            controller: orbitContainer,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n    }).directive('orbitSlide', function () {\n        return {\n            scope: {},\n            restrict: 'C',\n            require: { orbitContainer: '^^orbitContainer' },\n            controller: orbitSlide,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n    }).directive('orbitBullets', function () {\n        return {\n            scope: {},\n            restrict: 'EC',\n            require: { orbit: '^^orbit' },\n            controller: orbitBullets,\n            controllerAs: 'vm',\n            bindToController: true,\n            template: '\\n        <button\\n            ng-click=\"vm.orbit.container.activateState($index)\"\\n            ng-repeat=\"slide in vm.orbit.container.slides\"\\n            ng-class=\"{\\'is-active\\': $index === vm.orbit.container.currentIdx}\">\\n            </button>\\n    '\n        };\n    });\n\n    angular.module('mm.foundation.pagination', []).controller('PaginationController', ['$scope', '$attrs', '$parse', '$interpolate', function ($scope, $attrs, $parse, $interpolate) {\n        var self = this,\n            setNumPages = $attrs.numPages ? $parse($attrs.numPages).assign : angular.noop;\n\n        this.init = function (defaultItemsPerPage) {\n            if ($attrs.itemsPerPage) {\n                $scope.$parent.$watch($parse($attrs.itemsPerPage), function (value) {\n                    self.itemsPerPage = parseInt(value, 10);\n                    $scope.totalPages = self.calculateTotalPages();\n                });\n            } else {\n                this.itemsPerPage = defaultItemsPerPage;\n            }\n        };\n\n        this.noPrevious = function () {\n            return this.page === 1;\n        };\n        this.noNext = function () {\n            return this.page === $scope.totalPages;\n        };\n\n        this.isActive = function (page) {\n            return this.page === page;\n        };\n\n        this.calculateTotalPages = function () {\n            var totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil($scope.totalItems / this.itemsPerPage);\n            return Math.max(totalPages || 0, 1);\n        };\n\n        this.getAttributeValue = function (attribute, defaultValue, interpolate) {\n            return angular.isDefined(attribute) ? interpolate ? $interpolate(attribute)($scope.$parent) : $scope.$parent.$eval(attribute) : defaultValue;\n        };\n\n        this.render = function () {\n            this.page = parseInt($scope.page, 10) || 1;\n            if (this.page > 0 && this.page <= $scope.totalPages) {\n                $scope.pages = this.getPages(this.page, $scope.totalPages);\n            }\n        };\n\n        $scope.selectPage = function (page) {\n            if (!self.isActive(page) && page > 0 && page <= $scope.totalPages) {\n                $scope.page = page;\n                $scope.onSelectPage({\n                    page: page\n                });\n            }\n        };\n\n        $scope.$watch('page', function () {\n            self.render();\n        });\n\n        $scope.$watch('totalItems', function () {\n            $scope.totalPages = self.calculateTotalPages();\n        });\n\n        $scope.$watch('totalPages', function (value) {\n            setNumPages($scope.$parent, value); // Readonly variable\n\n            if (self.page > value) {\n                $scope.selectPage(value);\n            } else {\n                self.render();\n            }\n        });\n    }]).constant('paginationConfig', {\n        itemsPerPage: 10,\n        boundaryLinks: false,\n        directionLinks: true,\n        firstText: 'First',\n        previousText: 'Previous',\n        nextText: 'Next',\n        lastText: 'Last',\n        rotate: true\n    }).directive('pagination', ['$parse', 'paginationConfig', function ($parse, paginationConfig) {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            scope: {\n                page: '=',\n                totalItems: '=',\n                onSelectPage: ' &'\n            },\n            controller: 'PaginationController',\n            templateUrl: 'template/pagination/pagination.html',\n            replace: true,\n            link: function link(scope, element, attrs, paginationCtrl) {\n\n                // Setup configuration parameters\n                var maxSize,\n                    boundaryLinks = paginationCtrl.getAttributeValue(attrs.boundaryLinks, paginationConfig.boundaryLinks),\n                    directionLinks = paginationCtrl.getAttributeValue(attrs.directionLinks, paginationConfig.directionLinks),\n                    firstText = paginationCtrl.getAttributeValue(attrs.firstText, paginationConfig.firstText, true),\n                    previousText = paginationCtrl.getAttributeValue(attrs.previousText, paginationConfig.previousText, true),\n                    nextText = paginationCtrl.getAttributeValue(attrs.nextText, paginationConfig.nextText, true),\n                    lastText = paginationCtrl.getAttributeValue(attrs.lastText, paginationConfig.lastText, true),\n                    rotate = paginationCtrl.getAttributeValue(attrs.rotate, paginationConfig.rotate);\n\n                paginationCtrl.init(paginationConfig.itemsPerPage);\n\n                if (attrs.maxSize) {\n                    scope.$parent.$watch($parse(attrs.maxSize), function (value) {\n                        maxSize = parseInt(value, 10);\n                        paginationCtrl.render();\n                    });\n                }\n\n                // Create page object used in template\n                function makePage(number, text, isActive, isDisabled) {\n                    return {\n                        number: number,\n                        text: text,\n                        active: isActive,\n                        disabled: isDisabled\n                    };\n                }\n\n                paginationCtrl.getPages = function (currentPage, totalPages) {\n                    var pages = [];\n\n                    // Default page limits\n                    var startPage = 1,\n                        endPage = totalPages;\n                    var isMaxSized = angular.isDefined(maxSize) && maxSize < totalPages;\n\n                    // recompute if maxSize\n                    if (isMaxSized) {\n                        if (rotate) {\n                            // Current page is displayed in the middle of the visible ones\n                            startPage = Math.max(currentPage - Math.floor(maxSize / 2), 1);\n                            endPage = startPage + maxSize - 1;\n\n                            // Adjust if limit is exceeded\n                            if (endPage > totalPages) {\n                                endPage = totalPages;\n                                startPage = endPage - maxSize + 1;\n                            }\n                        } else {\n                            // Visible pages are paginated with maxSize\n                            startPage = (Math.ceil(currentPage / maxSize) - 1) * maxSize + 1;\n\n                            // Adjust last page if limit is exceeded\n                            endPage = Math.min(startPage + maxSize - 1, totalPages);\n                        }\n                    }\n\n                    // Add page number links\n                    for (var number = startPage; number <= endPage; number++) {\n                        var page = makePage(number, number, paginationCtrl.isActive(number), false);\n                        pages.push(page);\n                    }\n\n                    // Add links to move between page sets\n                    if (isMaxSized && !rotate) {\n                        if (startPage > 1) {\n                            var previousPageSet = makePage(startPage - 1, '...', false, false);\n                            pages.unshift(previousPageSet);\n                        }\n\n                        if (endPage < totalPages) {\n                            var nextPageSet = makePage(endPage + 1, '...', false, false);\n                            pages.push(nextPageSet);\n                        }\n                    }\n\n                    // Add previous & next links\n                    if (directionLinks) {\n                        var previousPage = makePage(currentPage - 1, previousText, false, paginationCtrl.noPrevious());\n                        pages.unshift(previousPage);\n\n                        var nextPage = makePage(currentPage + 1, nextText, false, paginationCtrl.noNext());\n                        pages.push(nextPage);\n                    }\n\n                    // Add first & last links\n                    if (boundaryLinks) {\n                        var firstPage = makePage(1, firstText, false, paginationCtrl.noPrevious());\n                        pages.unshift(firstPage);\n\n                        var lastPage = makePage(totalPages, lastText, false, paginationCtrl.noNext());\n                        pages.push(lastPage);\n                    }\n\n                    return pages;\n                };\n            }\n        };\n    }]).constant('pagerConfig', {\n        itemsPerPage: 10,\n        previousText: '« Previous',\n        nextText: 'Next »',\n        align: true\n    }).directive('pager', ['pagerConfig', function (pagerConfig) {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            scope: {\n                page: '=',\n                totalItems: '=',\n                onSelectPage: ' &'\n            },\n            controller: 'PaginationController',\n            templateUrl: 'template/pagination/pager.html',\n            replace: true,\n            link: function link(scope, element, attrs, paginationCtrl) {\n\n                // Setup configuration parameters\n                var previousText = paginationCtrl.getAttributeValue(attrs.previousText, pagerConfig.previousText, true),\n                    nextText = paginationCtrl.getAttributeValue(attrs.nextText, pagerConfig.nextText, true),\n                    align = paginationCtrl.getAttributeValue(attrs.align, pagerConfig.align);\n\n                paginationCtrl.init(pagerConfig.itemsPerPage);\n\n                // Create page object used in template\n                function makePage(number, text, isDisabled, isPrevious, isNext) {\n                    return {\n                        number: number,\n                        text: text,\n                        disabled: isDisabled,\n                        previous: align && isPrevious,\n                        next: align && isNext\n                    };\n                }\n\n                paginationCtrl.getPages = function (currentPage) {\n                    return [makePage(currentPage - 1, previousText, paginationCtrl.noPrevious(), true, false), makePage(currentPage + 1, nextText, paginationCtrl.noNext(), false, true)];\n                };\n            }\n        };\n    }]);\n\n    (function () {\n        angular.module(\"mm.foundation.pagination\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/pagination/pager.html\", \"<ul class=\\\"pagination\\\">\\n  <li ng-repeat=\\\"page in pages\\\" class=\\\"arrow\\\" ng-class=\\\"{unavailable: page.disabled, left: page.previous, right: page.next}\\\"><a ng-click=\\\"selectPage(page.number)\\\">{{page.text}}</a></li>\\n</ul>\\n\");\n            $templateCache.put(\"template/pagination/pagination.html\", \"<ul class=\\\"pagination\\\" role=\\\"navigation\\\" aria-label=\\\"Pagination\\\">\\n  <li ng-repeat=\\\"page in pages\\\"\\n    ng-class=\\\"{\\n        \\'pagination-previous\\': $first,\\n        \\'pagination-next\\': $last,\\n        current: page.active,\\n        unavailable: page.disabled\\n        }\\\">\\n    <a ng-if=\\\"!page.active\\\" ng-click=\\\"selectPage(page.number)\\\">{{page.text}}</a>\\n    <span ng-if=\\\"page.active\\\">{{page.text}}</span>\\n  </li>\\n</ul>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.position', [])\n\n    /**\n     * A set of utility methods that can be use to retrieve position of DOM elements.\n     * It is meant to be used where we need to absolute-position DOM elements in\n     * relation to other, existing elements (this is the case for tooltips, popovers,\n     * typeahead suggestions etc.).\n     */\n    .factory('$position', ['$document', '$window', function ($document, $window) {\n        'ngInject';\n\n        function getStyle(el, cssprop) {\n            if (el.currentStyle) {\n                //IE\n                return el.currentStyle[cssprop];\n            } else if ($window.getComputedStyle) {\n                return $window.getComputedStyle(el)[cssprop];\n            }\n            // finally try and get inline style\n            return el.style[cssprop];\n        }\n\n        /**\n         * Checks if a given element is statically positioned\n         * @param element - raw DOM element\n         */\n        function isStaticPositioned(element) {\n            return (getStyle(element, \"position\") || 'static') === 'static';\n        }\n\n        /**\n         * returns the closest, non-statically positioned parentOffset of a given element\n         * @param element\n         */\n        var parentOffsetEl = function parentOffsetEl(element) {\n            var docDomEl = $document[0];\n            var offsetParent = element.offsetParent || docDomEl;\n            while (offsetParent && offsetParent !== docDomEl && isStaticPositioned(offsetParent)) {\n                offsetParent = offsetParent.offsetParent;\n            }\n            return offsetParent || docDomEl;\n        };\n\n        return {\n            /**\n             * Provides read-only equivalent of jQuery's position function:\n             * http://api.jquery.com/position/\n             */\n            position: function position(element) {\n                var elBCR = this.offset(element);\n                var offsetParentBCR = {\n                    top: 0,\n                    left: 0\n                };\n                var offsetParentEl = parentOffsetEl(element[0]);\n                if (offsetParentEl != $document[0]) {\n                    offsetParentBCR = this.offset(angular.element(offsetParentEl));\n                    offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;\n                    offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;\n                }\n\n                var boundingClientRect = element[0].getBoundingClientRect();\n                return {\n                    width: boundingClientRect.width || element.prop('offsetWidth'),\n                    height: boundingClientRect.height || element.prop('offsetHeight'),\n                    top: elBCR.top - offsetParentBCR.top,\n                    left: elBCR.left - offsetParentBCR.left\n                };\n            },\n\n            /**\n             * Provides read-only equivalent of jQuery's offset function:\n             * http://api.jquery.com/offset/\n             */\n            offset: function offset(element) {\n                var boundingClientRect = element[0].getBoundingClientRect();\n                return {\n                    width: boundingClientRect.width || element.prop('offsetWidth'),\n                    height: boundingClientRect.height || element.prop('offsetHeight'),\n                    top: boundingClientRect.top + ($window.pageYOffset || $document[0].body.scrollTop || $document[0].documentElement.scrollTop),\n                    left: boundingClientRect.left + ($window.pageXOffset || $document[0].body.scrollLeft || $document[0].documentElement.scrollLeft)\n                };\n            }\n        };\n    }]);\n\n    angular.module('mm.foundation.progressbar', []).constant('progressConfig', {\n        animate: true,\n        max: 100\n    }).controller('ProgressController', ['$scope', '$attrs', 'progressConfig', '$animate', function ($scope, $attrs, progressConfig, $animate) {\n        'ngInject';\n\n        var self = this,\n            bars = [],\n            max = angular.isDefined($attrs.max) ? $scope.$parent.$eval($attrs.max) : progressConfig.max,\n            animate = angular.isDefined($attrs.animate) ? $scope.$parent.$eval($attrs.animate) : progressConfig.animate;\n\n        this.addBar = function (bar, element) {\n            var oldValue = 0,\n                index = bar.$parent.$index;\n            if (angular.isDefined(index) && bars[index]) {\n                oldValue = bars[index].value;\n            }\n            bars.push(bar);\n\n            this.update(element, bar.value, oldValue);\n\n            bar.$watch('value', function (value, oldValue) {\n                if (value !== oldValue) {\n                    self.update(element, value, oldValue);\n                }\n            });\n\n            bar.$on('$destroy', function () {\n                self.removeBar(bar);\n            });\n        };\n\n        // Update bar element width\n        this.update = function (element, newValue, oldValue) {\n            var percent = this.getPercentage(newValue);\n\n            if (animate) {\n                element.css('width', this.getPercentage(oldValue) + '%');\n                $animate.animate(element, {\n                    'width': this.getPercentage(oldValue) + '%'\n                }, {\n                    width: percent + '%'\n                });\n                // $transition(element, {\n                //     width: percent + '%'\n                // });\n            } else {\n                element.css({\n                    'transition': 'none',\n                    'width': percent + '%'\n                });\n            }\n        };\n\n        this.removeBar = function (bar) {\n            bars.splice(bars.indexOf(bar), 1);\n        };\n\n        this.getPercentage = function (value) {\n            return Math.round(100 * value / max);\n        };\n    }]).directive('progress', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            replace: true,\n            transclude: true,\n            controller: 'ProgressController',\n            require: 'progress',\n            scope: {},\n            template: '<div class=\"progress\" ng-transclude></div>'\n            //templateUrl: 'template/progressbar/progress.html' // Works in AngularJS 1.2\n        };\n    }).directive('bar', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            replace: true,\n            transclude: true,\n            require: '^progress',\n            scope: {\n                value: '=',\n                type: '@'\n            },\n            templateUrl: 'template/progressbar/bar.html',\n            link: function link(scope, element, attrs, progressCtrl) {\n                progressCtrl.addBar(scope, element);\n            }\n        };\n    }).directive('progressbar', function () {\n        return {\n            restrict: 'EA',\n            replace: true,\n            transclude: true,\n            controller: 'ProgressController',\n            scope: {\n                value: '=',\n                type: '@'\n            },\n            templateUrl: 'template/progressbar/progressbar.html',\n            link: function link(scope, element, attrs, progressCtrl) {\n                progressCtrl.addBar(scope, angular.element(element.children()[0]));\n            }\n        };\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.progressbar\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/progressbar/bar.html\", \"<span class=\\\"meter\\\" ng-transclude></span>\\n\");\n            $templateCache.put(\"template/progressbar/progress.html\", \"<div class=\\\"progress\\\" ng-class=\\\"type\\\" ng-transclude></div>\\n\");\n            $templateCache.put(\"template/progressbar/progressbar.html\", \"<div class=\\\"progress\\\" role=\\\"progressbar\\\" ng-class=\\\"type\\\">\\n  <span class=\\\"progress-meter\\\"><p class=\\\"progress-meter-text\\\" ng-transclude></p></span>\\n</div>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.rating', []).constant('ratingConfig', {\n        max: 5,\n        stateOn: null,\n        stateOff: null\n    }).controller('RatingController', ['$scope', '$attrs', '$parse', 'ratingConfig', function ($scope, $attrs, $parse, ratingConfig) {\n\n        this.maxRange = angular.isDefined($attrs.max) ? $scope.$parent.$eval($attrs.max) : ratingConfig.max;\n        this.stateOn = angular.isDefined($attrs.stateOn) ? $scope.$parent.$eval($attrs.stateOn) : ratingConfig.stateOn;\n        this.stateOff = angular.isDefined($attrs.stateOff) ? $scope.$parent.$eval($attrs.stateOff) : ratingConfig.stateOff;\n\n        this.createRateObjects = function (states) {\n            var defaultOptions = {\n                stateOn: this.stateOn,\n                stateOff: this.stateOff\n            };\n\n            for (var i = 0, n = states.length; i < n; i++) {\n                states[i] = angular.extend({ index: i }, defaultOptions, states[i]);\n            }\n            return states;\n        };\n\n        // Get objects used in template\n        $scope.range = angular.isDefined($attrs.ratingStates) ? this.createRateObjects(angular.copy($scope.$parent.$eval($attrs.ratingStates))) : this.createRateObjects(new Array(this.maxRange));\n\n        $scope.rate = function (value) {\n            if ($scope.value !== value && !$scope.readonly) {\n                $scope.value = value;\n            }\n        };\n\n        $scope.enter = function (value) {\n            if (!$scope.readonly) {\n                $scope.val = value;\n            }\n            $scope.onHover({ value: value });\n        };\n\n        $scope.reset = function () {\n            $scope.val = angular.copy($scope.value);\n            $scope.onLeave();\n        };\n\n        $scope.$watch('value', function (value) {\n            $scope.val = value;\n        });\n\n        $scope.readonly = false;\n        if ($attrs.readonly) {\n            $scope.$parent.$watch($parse($attrs.readonly), function (value) {\n                $scope.readonly = !!value;\n            });\n        }\n    }]).directive('rating', function () {\n        return {\n            restrict: 'EA',\n            scope: {\n                value: '=',\n                onHover: '&',\n                onLeave: '&'\n            },\n            controller: 'RatingController',\n            templateUrl: 'template/rating/rating.html',\n            replace: true\n        };\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.rating\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/rating/rating.html\", \"<span ng-mouseleave=\\\"reset()\\\">\\n  <i ng-repeat=\\\"r in range\\\" ng-mouseenter=\\\"enter($index + 1)\\\" ng-click=\\\"rate($index + 1)\\\" class=\\\"fa\\\"\\n    ng-class=\\\"$index < val && (r.stateOn || \\'fa-star\\') || (r.stateOff || \\'fa-star-o\\')\\\"></i>\\n</span>\\n\");\n        }]);\n    })();\n    /**\n     * @ngdoc overview\n     * @name mm.foundation.tabs\n     *\n     * @description\n     * AngularJS version of the tabs directive.\n     */\n\n    angular.module('mm.foundation.tabs', []).controller('TabsetController', ['$scope', function TabsetCtrl($scope) {\n        'ngInject';\n\n        var ctrl = this;\n        var tabs = ctrl.tabs = $scope.tabs = [];\n\n        if (angular.isUndefined($scope.openOnLoad)) {\n            $scope.openOnLoad = true;\n        }\n\n        ctrl.select = function (tab) {\n            angular.forEach(tabs, function (tab) {\n                tab.active = false;\n            });\n            tab.active = true;\n        };\n\n        ctrl.addTab = function addTab(tab) {\n            tabs.push(tab);\n            if ($scope.openOnLoad && (tabs.length === 1 || tab.active)) {\n                ctrl.select(tab);\n            }\n        };\n\n        ctrl.removeTab = function removeTab(tab) {\n            var index = tabs.indexOf(tab);\n            //Select a new tab if the tab to be removed is selected\n            if (tab.active && tabs.length > 1) {\n                //If this is the last tab, select the previous tab. else, the next tab.\n                var newActiveIndex = index == tabs.length - 1 ? index - 1 : index + 1;\n                ctrl.select(tabs[newActiveIndex]);\n            }\n            tabs.splice(index, 1);\n        };\n    }])\n\n    /**\n     * @ngdoc directive\n     * @name mm.foundation.tabs.directive:tabset\n     * @restrict EA\n     *\n     * @description\n     * Tabset is the outer container for the tabs directive\n     *\n     * @param {boolean=} vertical Whether or not to use vertical styling for the tabs.\n     * @param {boolean=} justified Whether or not to use justified styling for the tabs.\n     *\n     * @example\n    <example module=\"mm.foundation\">\n      <file name=\"index.html\">\n        <tabset>\n          <tab heading=\"Tab 1\"><b>First</b> Content!</tab>\n          <tab heading=\"Tab 2\"><i>Second</i> Content!</tab>\n        </tabset>\n        <hr />\n        <tabset vertical=\"true\">\n          <tab heading=\"Vertical Tab 1\"><b>First</b> Vertical Content!</tab>\n          <tab heading=\"Vertical Tab 2\"><i>Second</i> Vertical Content!</tab>\n        </tabset>\n        <tabset justified=\"true\">\n          <tab heading=\"Justified Tab 1\"><b>First</b> Justified Content!</tab>\n          <tab heading=\"Justified Tab 2\"><i>Second</i> Justified Content!</tab>\n        </tabset>\n      </file>\n    </example>\n     */\n    .directive('tabset', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            transclude: true,\n            replace: true,\n            scope: {\n                openOnLoad: '=?'\n            },\n            controller: 'TabsetController',\n            templateUrl: function templateUrl(elem, attr) {\n                var type = attr.vertical == 'true' ? 'vertical' : 'horizontal';\n                return 'template/tabs/tabset-' + type + '.html';\n            },\n            link: function link(scope, element, attrs) {\n                scope.vertical = angular.isDefined(attrs.vertical) ? scope.$parent.$eval(attrs.vertical) : false;\n                scope.justified = angular.isDefined(attrs.justified) ? scope.$parent.$eval(attrs.justified) : false;\n                scope.type = angular.isDefined(attrs.type) ? scope.$parent.$eval(attrs.type) : 'tabs';\n            }\n        };\n    })\n\n    /**\n     * @ngdoc directive\n     * @name mm.foundation.tabs.directive:tab\n     * @restrict EA\n     *\n     * @param {string=} heading The visible heading, or title, of the tab. Set HTML headings with {@link mm.foundation.tabs.directive:tabHeading tabHeading}.\n     * @param {string=} select An expression to evaluate when the tab is selected.\n     * @param {boolean=} active A binding, telling whether or not this tab is selected.\n     * @param {boolean=} disabled A binding, telling whether or not this tab is disabled.\n     *\n     * @description\n     * Creates a tab with a heading and content. Must be placed within a {@link mm.foundation.tabs.directive:tabset tabset}.\n     *\n     * @example\n    <example module=\"mm.foundation\">\n      <file name=\"index.html\">\n        <div ng-controller=\"TabsDemoCtrl\">\n          <button class=\"button small\" ng-click=\"items[0].active = true\">\n            Select item 1, using active binding\n          </button>\n          <button class=\"button small\" ng-click=\"items[1].disabled = !items[1].disabled\">\n            Enable/disable item 2, using disabled binding\n          </button>\n          <br />\n          <tabset>\n            <tab heading=\"Tab 1\">First Tab</tab>\n            <tab select=\"alertMe()\">\n              <tab-heading><i class=\"fa fa-bell\"></i> Alert me!</tab-heading>\n              Second Tab, with alert callback and html heading!\n            </tab>\n            <tab ng-repeat=\"item in items\"\n              heading=\"{{item.title}}\"\n              disabled=\"item.disabled\"\n              active=\"item.active\">\n              {{item.content}}\n            </tab>\n          </tabset>\n        </div>\n      </file>\n      <file name=\"script.js\">\n        function TabsDemoCtrl($scope) {\n          $scope.items = [\n            { title:\"Dynamic Title 1\", content:\"Dynamic Item 0\" },\n            { title:\"Dynamic Title 2\", content:\"Dynamic Item 1\", disabled: true }\n          ];\n    \n          $scope.alertMe = function() {\n            setTimeout(function() {\n              alert(\"You've selected the alert tab!\");\n            });\n          };\n        };\n      </file>\n    </example>\n     */\n\n    /**\n     * @ngdoc directive\n     * @name mm.foundation.tabs.directive:tabHeading\n     * @restrict EA\n     *\n     * @description\n     * Creates an HTML heading for a {@link mm.foundation.tabs.directive:tab tab}. Must be placed as a child of a tab element.\n     *\n     * @example\n    <example module=\"mm.foundation\">\n      <file name=\"index.html\">\n        <tabset>\n          <tab>\n            <tab-heading><b>HTML</b> in my titles?!</tab-heading>\n            And some content, too!\n          </tab>\n          <tab>\n            <tab-heading><i class=\"fa fa-heart\"></i> Icon heading?!?</tab-heading>\n            That's right.\n          </tab>\n        </tabset>\n      </file>\n    </example>\n     */\n    .directive('tab', ['$parse', function ($parse) {\n        'ngInject';\n\n        return {\n            require: '^tabset',\n            restrict: 'EA',\n            replace: true,\n            templateUrl: 'template/tabs/tab.html',\n            transclude: true,\n            scope: {\n                heading: '@',\n                onSelect: '&select', //This callback is called in contentHeadingTransclude\n                //once it inserts the tab's content into the dom\n                onDeselect: '&deselect'\n            },\n            controller: function controller() {\n                //Empty controller so other directives can require being 'under' a tab\n            },\n            compile: function compile(elm, attrs, transclude) {\n                return function postLink(scope, elm, attrs, tabsetCtrl) {\n                    var getActive, setActive;\n                    if (attrs.active) {\n                        getActive = $parse(attrs.active);\n                        setActive = getActive.assign;\n                        scope.$parent.$watch(getActive, function updateActive(value, oldVal) {\n                            // Avoid re-initializing scope.active as it is already initialized\n                            // below. (watcher is called async during init with value ===\n                            // oldVal)\n                            if (value !== oldVal) {\n                                scope.active = !!value;\n                            }\n                        });\n                        scope.active = getActive(scope.$parent);\n                    } else {\n                        setActive = getActive = angular.noop;\n                    }\n\n                    scope.$watch('active', function (active) {\n                        if (!angular.isFunction(setActive)) {\n                            return;\n                        }\n                        // Note this watcher also initializes and assigns scope.active to the\n                        // attrs.active expression.\n                        setActive(scope.$parent, active);\n                        if (active) {\n                            tabsetCtrl.select(scope);\n                            scope.onSelect();\n                            scope.$emit('change.af.tabs', elm);\n                        } else {\n                            scope.onDeselect();\n                        }\n                    });\n\n                    scope.disabled = false;\n                    if (attrs.disabled) {\n                        scope.$parent.$watch($parse(attrs.disabled), function (value) {\n                            scope.disabled = !!value;\n                        });\n                    }\n\n                    scope.select = function () {\n                        if (!scope.disabled) {\n                            scope.active = true;\n                        }\n                    };\n\n                    tabsetCtrl.addTab(scope);\n                    scope.$on('$destroy', function () {\n                        tabsetCtrl.removeTab(scope);\n                    });\n\n                    //We need to transclude later, once the content container is ready.\n                    //when this link happens, we're inside a tab heading.\n                    scope.$transcludeFn = transclude;\n                };\n            }\n        };\n    }]).directive('tabHeadingTransclude', function () {\n        'ngInject';\n\n        return {\n            restrict: 'A',\n            require: '^tab',\n            link: function link(scope, elm, attrs, tabCtrl) {\n                scope.$watch('headingElement', function updateHeadingElement(heading) {\n                    if (heading) {\n                        elm.html('');\n                        elm.append(heading);\n                    }\n                });\n            }\n        };\n    }).directive('tabContentTransclude', function () {\n        'ngInject';\n\n        return {\n            restrict: 'A',\n            require: '^tabset',\n            link: function link(scope, elm, attrs) {\n                var tab = scope.$eval(attrs.tabContentTransclude);\n\n                //Now our tab is ready to be transcluded: both the tab heading area\n                //and the tab content area are loaded.  Transclude 'em both.\n                tab.$transcludeFn(tab.$parent, function (contents) {\n                    angular.forEach(contents, function (node) {\n                        if (isTabHeading(node)) {\n                            //Let tabHeadingTransclude know.\n                            tab.headingElement = node;\n                        } else {\n                            elm.append(node);\n                        }\n                    });\n                });\n            }\n        };\n\n        function isTabHeading(node) {\n            return node.tagName && (node.hasAttribute('tab-heading') || node.hasAttribute('data-tab-heading') || node.tagName.toLowerCase() === 'tab-heading' || node.tagName.toLowerCase() === 'data-tab-heading');\n        }\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.tabs\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/tabs/tab.html\", \"<li class=\\\"tabs-title\\\" ng-class=\\\"{\\'is-active\\': active}\\\">\\n    <a href=\\\"\\\" ng-click=\\\"select()\\\" ng-attr-aria-selected=\\\"{{active}}\\\" tab-heading-transclude>{{heading}}</a>\\n</li>\\n\");\n            $templateCache.put(\"template/tabs/tabset-horizontal.html\", \"<div class=\\\"tabbable\\\">\\n  <ul class=\\\"tabs\\\" ng-transclude></ul>\\n  <div class=\\\"tabs-content\\\">\\n    <div class=\\\"tabs-panel\\\"\\n      ng-repeat=\\\"tab in tabs\\\"\\n      ng-class=\\\"{\\'is-active\\': tab.active}\\\" \\n      aria-hidden=\\\\\\\"{{!tab.active}}\\\\\\\">\\n      <div tab-content-transclude=\\\"tab\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\");\n            $templateCache.put(\"template/tabs/tabset-vertical.html\", \"<div class=\\\"tabbable row collapse\\\">\\n  <div class=\\\"medium-3 columns\\\">\\n    <ul class=\\\"tabs vertical\\\" ng-transclude></ul>\\n  </div>\\n  <div class=\\\"medium-9 columns\\\">\\n    <div class=\\\"tabs-content vertical\\\">\\n      <div class=\\\"tabs-panel\\\"\\n        ng-repeat=\\\"tab in tabs\\\"\\n        ng-class=\\\"{\\'is-active\\': tab.active}\\\" aria-hidden=\\\\\\\"{{!tab.active}}\\\\\\\">\\n        <div tab-content-transclude=\\\"tab\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n        }]);\n    })();\n    /**\n     * The following features are still outstanding: animation as a\n     * function, placement as a function, inside, support for more triggers than\n     * just mouse enter/leave, html tooltips, and selector delegation.\n     */\n    angular.module('mm.foundation.tooltip', ['mm.foundation.position', 'mm.foundation.bindHtml'])\n\n    /**\n     * The $tooltip service creates tooltip- and popover-like directives as well as\n     * houses global options for them.\n     */\n    .provider('$tooltip', function () {\n        'ngInject';\n        // The default options tooltip and popover.\n\n        var defaultOptions = {\n            placement: 'top',\n            popupDelay: 0\n        };\n\n        // Default hide triggers for each show trigger\n        var triggerMap = {\n            'mouseover': 'mouseout',\n            'click': 'click',\n            'focus': 'blur'\n        };\n\n        // The options specified to the provider globally.\n        var globalOptions = {};\n\n        /**\n         * `options({})` allows global configuration of all tooltips in the\n         * application.\n         *\n         *   var app = angular.module( 'App', ['mm.foundation.tooltip'], function( $tooltipProvider ) {\n         *     // place tooltips left instead of top by default\n         *     $tooltipProvider.options( { placement: 'left' } );\n         *   });\n         */\n        this.options = function (value) {\n            angular.extend(globalOptions, value);\n        };\n\n        /**\n         * This allows you to extend the set of trigger mappings available. E.g.:\n         *\n         *   $tooltipProvider.setTriggers( 'openTrigger': 'closeTrigger' );\n         */\n        this.setTriggers = function setTriggers(triggers) {\n            angular.extend(triggerMap, triggers);\n        };\n\n        /**\n         * This is a helper function for translating camel-case to snake-case.\n         */\n        function snake_case(name) {\n            var regexp = /[A-Z]/g;\n            var separator = '-';\n            return name.replace(regexp, function (letter, pos) {\n                return (pos ? separator : '') + letter.toLowerCase();\n            });\n        }\n\n        /**\n         * Returns the actual instance of the $tooltip service.\n         * TODO support multiple triggers\n         */\n        this.$get = ['$window', '$compile', '$timeout', '$parse', '$document', '$position', '$interpolate', '$animate', function ($window, $compile, $timeout, $parse, $document, $position, $interpolate, $animate) {\n            'ngInject';\n\n            return function $tooltip(type, prefix, defaultTriggerShow) {\n                var options = angular.extend({}, defaultOptions, globalOptions);\n\n                /**\n                 * Returns an object of show and hide triggers.\n                 *\n                 * If a trigger is supplied,\n                 * it is used to show the tooltip; otherwise, it will use the `trigger`\n                 * option passed to the `$tooltipProvider.options` method; else it will\n                 * default to the trigger supplied to this directive factory.\n                 *\n                 * The hide trigger is based on the show trigger. If the `trigger` option\n                 * was passed to the `$tooltipProvider.options` method, it will use the\n                 * mapped trigger from `triggerMap` or the passed trigger if the map is\n                 * undefined; otherwise, it uses the `triggerMap` value of the show\n                 * trigger; else it will just use the show trigger.\n                 */\n                function getTriggers(trigger) {\n                    var show = (trigger || options.trigger || defaultTriggerShow).split(' ');\n                    var hide = show.map(function (trigger) {\n                        return triggerMap[trigger] || trigger;\n                    });\n                    return {\n                        show: show,\n                        hide: hide\n                    };\n                }\n\n                var directiveName = snake_case(type);\n\n                var startSym = $interpolate.startSymbol();\n                var endSym = $interpolate.endSymbol();\n                var template = '<div ' + directiveName + '-popup ' + 'title=\"' + startSym + 'tt_title' + endSym + '\" ' + 'content=\"' + startSym + 'tt_content' + endSym + '\" ' + 'placement=\"' + startSym + 'tt_placement' + endSym + '\" ' + 'is-open=\"tt_isOpen\"' + '>' + '</div>';\n\n                return {\n                    restrict: 'EA',\n                    scope: true,\n                    compile: function compile(tElem) {\n                        var tooltipLinker = $compile(template);\n\n                        return function link(scope, element, attrs) {\n                            var tooltip;\n                            var popupTimeout;\n                            var appendToBody = angular.isDefined(options.appendToBody) ? options.appendToBody : false;\n                            var triggers = getTriggers(undefined);\n                            var hasEnableExp = angular.isDefined(attrs[prefix + 'Enable']);\n\n                            var positionTooltip = function positionTooltip() {\n                                var position;\n                                var ttWidth;\n                                var ttHeight;\n                                var ttPosition;\n                                // Get the position of the directive element.\n                                position = appendToBody ? $position.offset(element) : $position.position(element);\n\n                                // Get the height and width of the tooltip so we can center it.\n                                ttWidth = tooltip.prop('offsetWidth');\n                                ttHeight = tooltip.prop('offsetHeight');\n\n                                // Calculate the tooltip's top and left coordinates to center it with\n                                // this directive.\n                                switch (scope.tt_placement) {\n                                    case 'right':\n                                        ttPosition = {\n                                            top: position.top + position.height / 2 - ttHeight / 2,\n                                            left: position.left + position.width + 10\n                                        };\n                                        break;\n                                    case 'bottom':\n                                        ttPosition = {\n                                            top: position.top + position.height + 10,\n                                            left: position.left - ttWidth / 2 + position.width / 2\n                                        };\n                                        break;\n                                    case 'left':\n                                        ttPosition = {\n                                            top: position.top + position.height / 2 - ttHeight / 2,\n                                            left: position.left - ttWidth - 10\n                                        };\n                                        break;\n                                    default:\n                                        ttPosition = {\n                                            top: position.top - ttHeight - 10,\n                                            left: position.left - ttWidth / 2 + position.width / 2\n                                        };\n                                        break;\n                                }\n\n                                ttPosition.top += 'px';\n                                ttPosition.left += 'px';\n\n                                // Now set the calculated positioning.\n                                tooltip.css(ttPosition);\n                            };\n\n                            // By default, the tooltip is not open.\n                            // TODO add ability to start tooltip opened\n                            scope.tt_isOpen = false;\n\n                            function toggleTooltipBind() {\n                                if (!scope.tt_isOpen) {\n                                    showTooltipBind();\n                                } else {\n                                    hideTooltipBind();\n                                }\n                            }\n\n                            // Show the tooltip with delay if specified, otherwise show it immediately\n                            function showTooltipBind() {\n                                if (hasEnableExp && !scope.$eval(attrs[prefix + 'Enable'])) {\n                                    return;\n                                }\n                                if (scope.tt_popupDelay) {\n                                    popupTimeout = $timeout(show, scope.tt_popupDelay, false);\n                                    popupTimeout.then(function (reposition) {\n                                        reposition();\n                                    }, angular.noop);\n                                } else {\n                                    show()();\n                                }\n                            }\n\n                            function hideTooltipBind() {\n                                scope.$apply(function () {\n                                    hide();\n                                });\n                            }\n\n                            // Show the tooltip popup element.\n                            function show() {\n\n                                // Don't show empty tooltips.\n                                if (!scope.tt_content) {\n                                    return angular.noop;\n                                }\n\n                                createTooltip();\n\n                                // Set the initial positioning.\n                                tooltip.css({\n                                    top: 0,\n                                    left: 0\n                                });\n\n                                // Now we add it to the DOM because need some info about it. But it's not\n                                // visible yet anyway.\n                                if (appendToBody) {\n                                    // $document.find('body').append(tooltip);\n                                    // $document.find('body')\n                                    $animate.enter(tooltip, $document.find('body'));\n                                } else {\n                                    $animate.enter(tooltip, element.parent(), element);\n                                    // element.after(tooltip);\n                                }\n\n                                positionTooltip();\n\n                                // And show the tooltip.\n                                scope.tt_isOpen = true;\n                                scope.$digest(); // digest required as $apply is not called\n\n                                // Return positioning function as promise callback for correct\n                                // positioning after draw.\n                                return positionTooltip;\n                            }\n\n                            // Hide the tooltip popup element.\n                            function hide() {\n                                // First things first: we don't show it anymore.\n                                scope.tt_isOpen = false;\n\n                                //if tooltip is going to be shown after delay, we must cancel this\n                                $timeout.cancel(popupTimeout);\n                                removeTooltip();\n                            }\n\n                            function createTooltip() {\n                                // There can only be one tooltip element per directive shown at once.\n                                if (tooltip) {\n                                    removeTooltip();\n                                }\n                                tooltip = tooltipLinker(scope, function () {});\n\n                                // Get contents rendered into the tooltip\n                                scope.$digest();\n                            }\n\n                            function removeTooltip() {\n                                if (tooltip) {\n                                    $animate.leave(tooltip);\n                                    // tooltip.remove();\n                                    tooltip = null;\n                                }\n                            }\n\n                            /**\n                             * Observe the relevant attributes.\n                             */\n                            attrs.$observe(type, function (val) {\n                                scope.tt_content = val;\n\n                                if (!val && scope.tt_isOpen) {\n                                    hide();\n                                }\n                            });\n\n                            attrs.$observe(prefix + 'Title', function (val) {\n                                scope.tt_title = val;\n                            });\n\n                            attrs[prefix + 'Placement'] = attrs[prefix + 'Placement'] || null;\n\n                            attrs.$observe(prefix + 'Placement', function (val) {\n                                scope.tt_placement = angular.isDefined(val) && val ? val : options.placement;\n                            });\n\n                            attrs[prefix + 'PopupDelay'] = attrs[prefix + 'PopupDelay'] || null;\n\n                            attrs.$observe(prefix + 'PopupDelay', function (val) {\n                                var delay = parseInt(val, 10);\n                                scope.tt_popupDelay = !isNaN(delay) ? delay : options.popupDelay;\n                            });\n\n                            var unregisterTriggers = function unregisterTriggers() {\n                                triggers.show.forEach(function (showTrigger, i) {\n                                    var hideTrigger = triggers.hide[i];\n                                    if (showTrigger === hideTrigger) {\n                                        element.off(showTrigger, toggleTooltipBind);\n                                    } else {\n                                        element.off(showTrigger, showTooltipBind);\n                                        element.off(hideTrigger, hideTooltipBind);\n                                    }\n                                });\n                            };\n\n                            attrs[prefix + 'Trigger'] = attrs[prefix + 'Trigger'] || null;\n\n                            attrs.$observe(prefix + 'Trigger', function (val) {\n                                unregisterTriggers();\n                                triggers = getTriggers(val);\n                                triggers.show.forEach(function (showTrigger, i) {\n                                    var hideTrigger = triggers.hide[i];\n                                    if (showTrigger === hideTrigger) {\n                                        element.bind(showTrigger, toggleTooltipBind);\n                                    } else {\n                                        element.bind(showTrigger, showTooltipBind);\n                                        element.bind(hideTrigger, hideTooltipBind);\n                                    }\n                                });\n                                element.on('keydown', function (e) {\n                                    if (e.which === 27) {\n                                        hideTooltipBind();\n                                    }\n                                });\n                            });\n\n                            attrs.$observe(prefix + 'AppendToBody', function (val) {\n                                appendToBody = angular.isDefined(val) ? $parse(val)(scope) : appendToBody;\n                            });\n\n                            // if a tooltip is attached to <body> we need to remove it on\n                            // location change as its parent scope will probably not be destroyed\n                            // by the change.\n                            if (appendToBody) {\n                                scope.$on('$locationChangeSuccess', function closeTooltipOnLocationChangeSuccess() {\n                                    if (scope.tt_isOpen) {\n                                        hide();\n                                    }\n                                });\n                            }\n\n                            // Make sure tooltip is destroyed and removed.\n                            scope.$on('$destroy', function onDestroyTooltip() {\n                                $timeout.cancel(popupTimeout);\n                                unregisterTriggers();\n                                removeTooltip();\n                            });\n                        };\n                    }\n                };\n            };\n        }];\n    }).directive('tooltipPopup', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            replace: true,\n            scope: {\n                content: '@',\n                placement: '@',\n                isOpen: '&'\n            },\n            templateUrl: 'template/tooltip/tooltip-popup.html'\n        };\n    }).directive('tooltip', ['$tooltip', function ($tooltip) {\n        'ngInject';\n\n        return $tooltip('tooltip', 'tooltip', 'mouseover');\n    }]).directive('tooltipHtmlUnsafePopup', function () {\n        return {\n            restrict: 'EA',\n            replace: true,\n            scope: {\n                content: '@',\n                placement: '@',\n                isOpen: '&'\n            },\n            templateUrl: 'template/tooltip/tooltip-html-unsafe-popup.html'\n        };\n    }).directive('tooltipHtmlUnsafe', ['$tooltip', function ($tooltip) {\n        'ngInject';\n\n        return $tooltip('tooltipHtmlUnsafe', 'tooltip', 'mouseover');\n    }]);\n\n    (function () {\n        angular.module(\"mm.foundation.tooltip\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/tooltip/tooltip-html-unsafe-popup.html\", \"<div class=\\\"tooltip {{placement}}\\\" style=\\\"width: auto;\\\">\\n  <span bind-html-unsafe=\\\"content\\\"></span>\\n</div>\\n\");\n            $templateCache.put(\"template/tooltip/tooltip-popup.html\", \"<div class=\\\"tooltip {{placement}}\\\" style=\\\"width: auto;\\\">\\n  <span ng-bind=\\\"content\\\"></span>\\n</div>\\n\");\n        }]);\n    })();\n    angular.module(\"mm.foundation\", [\"mm.foundation.accordion\", \"mm.foundation.alert\", \"mm.foundation.bindHtml\", \"mm.foundation.buttons\", \"mm.foundation.drilldownMenu\", \"mm.foundation.dropdownMenu\", \"mm.foundation.dropdownToggle\", \"mm.foundation.mediaQueries\", \"mm.foundation.modal\", \"mm.foundation.offcanvas\", \"mm.foundation.orbit\", \"mm.foundation.pagination\", \"mm.foundation.position\", \"mm.foundation.progressbar\", \"mm.foundation.rating\", \"mm.foundation.tabs\", \"mm.foundation.tooltip\"]);\n});"],"sourceRoot":"assets/scripts/"}