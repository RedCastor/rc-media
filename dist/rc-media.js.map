{"version":3,"sources":["rc-media.js","rc-media-constants.js","rc-media-gallery-controls.js","rc-media-gallery.js","rc-media-search.js","rc-media-select.js","rc-media-translate.js","rc-media-upload-controls.js","rc-media-upload.js","rc-media-controller.js","rc-media-select-controller.js","rc-media-services.js","tpls-media.js"],"names":["angular","module","constant","SELECT_FILES","CROP_IMAGE","PROGRESS_FILES","directive","$log","$parse","$compile","restrict","require","scope","deleteClick","saveClick","templateUrl","elem","attrs","rcmTemplateUrl","link","rcMediaApi","loading","deleteSources","then","response_success","response_error","$parent","$applyAsync","deselectSources","saveSources","galleryControlsElement","element","$window","$timeout","sources","seletedSources","order","multiple","search","loadIcon","uploadClick","alerts","loadMore","isDefined","onChangeGalleryLoading","newValue","oldValue","gallery","isObject","result","message","push","type","msg","onChangeSources","debug","onChangeSourcesSelected","selectSource","source","index","sourcesSelected","loadMoreSources","length","closeAlert","splice","galleryElement","initMediaGallery","$watchCollection","$watch","value","onSearch","newVal","oldVal","searchSources","searchElement","initMediaSearch","transclude","theme","name","id","class","onetime","single","media","config","initSources","controller","rcmSelect","rcMedia","ref","html","text","getLocalizedText","replace","file","cancelClick","uploadFile","upload","evt","cancelUploadFile","resetUploadFile","back","uploadControlsElement","accept","pattern","fileName","minWidth","minHeight","fixOrientation","crop","cropArea","progress","currentState","crop_area_default","auto","width","height","cropWidth","cropHeight","keepAspect","enforceCropAspect","touchRadius","color","colorDrag","colorBg","colorCropBg","add_alert","extend","onChangeUploadLoading","onChangeUploadResult","onChangeUploadFile","onChangeUploadMultiple","onChangeUploadCrop","onChangeUploadProgress","onChangeUploadCurrentState","uploadSelectFiles","$files","changeFiles","$file","$newFiles","$duplicateFiles","$invalidFiles","$event","err_text","forEach","file_key","i","$errorMessages","key","uploadElement","initMediaUpload","model","modelPreview","sourceUrl","returnModelType","returnModelKey","returnModelPush","sourceId","sourceUrlKey","sourceTitle","sourcesOffsetKey","sourcesLimitKey","sourcesSearchKey","deleteQuery","sourcesQuery","onMediaReady","onUploadUpdateState","onUploadFile","onResetUploadFile","onSaveSources","onDeleteSources","onSelectSource","onSearchSources","onLoadMoreSources","controllerAs","post","attr","rcMediaElement","$scope","$q","$injector","$filter","RCMEDIA_UPLOAD_STATES","rcMediaService","this","debounce_bind_resize","init","deferred","$eval","isUndefined","addBindings","$rcMediaApi","isString","getSources","setUploadState","getSourceTitle","source_title_list","split","find_source","title","join","newState","$state","Upload","get","imageDimensions","dimensions","viewWidth","clientWidth","viewHeight","clientHeight","ratioH","ratioW","ratio","parseInt","error","err","defer","destDataUrl","$ngfBlobUrl","dataUrltoBlob","ext","$ngfName","slice","lastIndexOf","url","getRestUrl","data","addSource","resolve","reject","progressPercentage","loaded","total","notify","promise","abort","indexOf","activeClass","$source","index_source","sources_query","sources_deferred","all","delete","removeSource","status","defer_all","deleted_index","map","o","bindResize","tooltipTitle","copy","new_model","toString","concat","$model","$search","cancel","dispatchEvent","Event","sourcePreviewHover","default_media","per_page","force","searchValue","selectedSources","sourcesPreview","isArray","merge","$index","isNumber","sources_str","include","$resourceProvider","defaults","cancellable","provider","rcMediaProvider","rest","path","locale","defaultText","en-us","TITLE_GALLERY","TITLE_EMPTY_GALLERY","TITLE_UPLOAD","TITLE_DRAG_FILE","SUB_TITLE_EMPTY_GALLERY","SUB_TITLE_DRAG_FILE","BTN_CANCEL","BTN_SAVE","BTN_DELETE_FILE","BTN_DELETE_FILES","BTN_DESELECT_ALL","BTN_SELECT_FILE","BTN_SELECT_FILES","BTN_SHOW_MORE","BTN_BACK_GALLERY","BTN_UPLOAD_FILE","BTN_UPLOAD_FILES","BTN_BROWSE_FILE","UPLOAD_INVALID_FILE","UPLOAD_INVALID_minWidth","UPLOAD_INVALID_minHeight","UPLOAD_INVALID_pattern","fr-FR","nl-NL","interfaceText","$get","$http","$locale","localizedText","useXDomain","headers","common","getRest","item","setLocalizedText","localeId","obj","Error","useLocale","local","toUpperCase","setRest","factory","$resource","rest_url","resource","Media","mediaId","method","cache","query","params","rcMediaResource","service","request","undefined","isFunction","$cancelRequest","$promise","source_id","delete_query","run","$templateCache","put"],"mappings":"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","file":"rc-media.js","sourcesContent":["(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n\n    module.directive(\"rcMedia\", [ function () {\n        return {\n            restrict: \"EA\",\n            require   : ['?ngModel'],\n            scope     : {\n                model        : '=ngModel',\n                modelPreview : '=ngModelPreview',\n                sourceUrl    : '@rcmSourceUrl',\n                returnModelType : '@rcmReturnModelType',\n                returnModelKey  : '@rcmReturnModelKey',\n                returnModelPush : '=?rcmReturnModelPush',\n                sourceId     : '@rcmSourceId',\n                sourceUrlKey : '@rcmSourceUrlKey',\n                sourceTitle  : '@rcmSourceTitle',\n                sourcesOffsetKey: '@rcmSourcesOffsetKey',\n                sourcesLimitKey : '@rcmSourcesLimitKey',\n                sourcesSearchKey: '@rcmSourcesSearchKey',\n                deleteQuery     : '@rcmDeleteQuery',\n                sourcesQuery    : '@rcmSourcesQuery',\n                onMediaReady       : '&rcmOnMediaReady',\n                onUploadUpdateState: \"&rcmOnUploadUpdateState\",\n                onUploadFile       : '&rcmOnUploadFile',\n                onResetUploadFile  : '&rcmOnResetUploadFile',\n                onSaveSources      : '&rcmOnSaveSources',\n                onDeleteSources    : '&rcmOnDeleteSources',\n                onSelectSource     : '&rcmOnSelectSource',\n                onSearchSources    : '&rcmOnSearchSources',\n                onLoadMoreSources  : '&rcmOnLoadMoreSources'\n            },\n            controller: \"rcMediaCtrl\",\n            controllerAs: \"rcMediaApi\",\n            link: {\n                post: function (scope, elem, attr, controller) {\n                    scope.rcMediaApi.rcMediaElement = angular.element(elem);\n                }\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n\n    var module = angular.module('rcMedia');\n\n    module.constant(\"RCMEDIA_UPLOAD_STATES\", {\n        SELECT_FILES  : \"selectFiles\",\n        CROP_IMAGE   : \"cropImage\",\n        PROGRESS_FILES: \"progressFiles\"\n    });\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n\n    module.directive(\"rcmGalleryControls\", [ '$log', '$parse', '$compile', function ($log, $parse, $compile) {\n        return {\n            restrict  : 'EA',\n            require: \"^rcMedia\",\n            scope     : {\n                deleteClick: '@?rcmDeleteClick',\n                saveClick: '@?rcmSaveClick'\n            },\n            templateUrl: function (elem, attrs) {\n                return attrs.rcmTemplateUrl || 'rc-media-gallery-controls.tpl.html';\n            },\n            link: function (scope, elem, attrs, rcMediaApi) {\n\n                scope.loading = false;\n\n                scope.deleteSources = function () {\n                    scope.loading = true;\n\n                    rcMediaApi.deleteSources().then(\n                        function (response_success) {\n                            scope.loading = false;\n                        },\n                        function (response_error) {\n                            scope.loading = false;\n                        }\n                    );\n\n                    scope.$parent.$parent.$applyAsync($parse(scope.deleteClick));\n                };\n\n                scope.deselectSources = function () {\n                    rcMediaApi.deselectSources();\n                };\n\n                scope.saveSources = function () {\n                    rcMediaApi.saveSources();\n\n                    scope.$parent.$parent.$applyAsync($parse(scope.saveClick));\n                };\n\n\n                // INIT\n                rcMediaApi.galleryControlsElement = angular.element(elem);\n                scope.rcMediaApi = rcMediaApi;\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n    module.directive(\"rcmGallery\", ['$parse', '$compile', '$window', '$timeout', '$log', function ($parse, $compile, $window, $timeout, $log) {\n        return {\n            restrict  : 'EA',\n            require: \"^rcMedia\",\n            scope     : {\n                sources  : '=?ngModel',\n                seletedSources  : '=?rcmSelectedSources',\n                order   : '@?rcmOrder',\n                multiple: '=?rcmMultiple',\n                search  : '@?rcmSearchValue',\n                loadIcon : '@?rcmLoadIcon',\n                uploadClick: '@?rcmUploadClick'\n            },\n            templateUrl: function (elem, attrs) {\n                return attrs.rcmTemplateUrl  || 'rc-media-gallery.tpl.html';\n            },\n            link: function (scope, elem, attrs, rcMediaApi) {\n\n                scope.alerts = [];\n                scope.loading = false;\n                scope.loadMore = false;\n\n                scope.sources = angular.isDefined(scope.sources) ? scope.sources : [];\n                scope.seletedSources = angular.isDefined(scope.seletedSources) ? scope.seletedSources : [];\n                scope.order = angular.isDefined(scope.order) ? scope.order : 'date';\n                scope.multiple = angular.isDefined(scope.multiple) ? scope.multiple : false;\n                scope.search = angular.isDefined(scope.search) ? scope.search : '';\n\n                // FUNCTIONS\n                scope.onChangeGalleryLoading = function (newValue, oldValue) {\n\n                    if (newValue === false) {\n                        scope.loadMore = rcMediaApi.gallery.loadMore;\n\n                        if (angular.isObject(rcMediaApi.gallery.result) && angular.isDefined(rcMediaApi.gallery.result.message)) {\n                            scope.alerts.push({type: 'alert', msg: rcMediaApi.gallery.result.message});\n                        }\n                    }\n                    else {\n                        scope.alerts = [];\n                    }\n\n                    scope.loading = newValue;\n                };\n\n                scope.onChangeSources = function (newValue, oldValue) {\n                    $log.debug('onChangeSources');\n                    if (newValue !== oldValue) {\n                        $log.debug('onChangeSources');\n                        scope.sources = newValue;\n                    }\n                };\n                scope.onChangeSourcesSelected = function (newValue, oldValue) {\n\n                    if (newValue !== oldValue) {\n                        $log.debug('onChangeSourcesSelected');\n                        scope.seletedSources = newValue;\n                    }\n                };\n\n                scope.selectSource = function (source, index) {\n                    rcMediaApi.selectSource(source, index);\n                    scope.seletedSources = rcMediaApi.sourcesSelected;\n                };\n\n                scope.loadMoreSources = function () {\n\n                    rcMediaApi.loadMoreSources().then(\n                        function (response_success) {\n                            scope.loadMore = response_success.length > 0 ? true : false;\n                        },\n                        function (response_error) {\n\n                        }\n                    );\n                };\n\n                scope.closeAlert = function(index) {\n                    scope.alerts.splice(index, 1);\n                };\n\n                // INIT\n                rcMediaApi.galleryElement = angular.element(elem);\n                rcMediaApi.initMediaGallery( {\n                        loading: scope.loading,\n                        order: scope.order,\n                        multiple: scope.multiple,\n                        loadMore: scope.loadMore\n                    },\n                    scope.search\n                );\n\n\n                scope.rcMediaApi = rcMediaApi;\n\n                scope.$watchCollection('rcMediaApi.sources', scope.onChangeSources);\n                scope.$watchCollection('rcMediaApi.sourcesSelected', scope.onChangeSourcesSelected);\n                scope.$watch('rcMediaApi.gallery.loading', scope.onChangeGalleryLoading);\n\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n    module.directive(\"rcmSearch\", [ '$log', function ($log) {\n        return {\n            restrict  : 'EA',\n            require   : '^rcMedia',\n            scope     : {\n                search: '=?ngModel',\n                value : '@?rcmValue'\n            },\n            templateUrl: function (elem, attrs) {\n                return attrs.rcmTemplateUrl || 'rc-media-search.tpl.html';\n            },\n            link: function (scope, elem, attrs, rcMediaApi) {\n\n                scope.search = angular.isDefined(scope.value) ? scope.value : scope.search;\n                scope.value = angular.isDefined(scope.value) ? scope.value : '';\n\n                scope.onSearch = function (newVal, oldVal) {\n\n                    if (newVal !== oldVal) {\n                        $log.debug('onSearch');\n                        rcMediaApi.search = newVal;\n                        rcMediaApi.searchSources();\n                    }\n                };\n\n                // INIT\n                rcMediaApi.searchElement = angular.element(elem);\n                rcMediaApi.initMediaSearch( scope.search );\n\n                scope.rcMediaApi = rcMediaApi;\n\n                scope.$watch('search', scope.onSearch);\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n    module.directive(\"rcmSelect\", [ '$log', function ($log) {\n        return {\n            restrict  : 'EA',\n            transclude: true,\n            scope     : {\n                theme   : '@?rcmTheme',\n                name    : '@?rcmName',\n                type    : '@?rcmType',\n                id      : '@?rcmId',\n                class   : '@?rcmClass',\n                onetime : '=?rcmOnetime',\n                single  : '=?rcmSingle',\n                media   : '=?rcmMedia',\n                config  : '@?rcmConfig',\n                initSources : '=?rcmInitSources'\n            },\n            templateUrl: function (elem, attrs) {\n                return attrs.rcmTemplateUrl  || 'rc-media-select.tpl.html';\n            },\n            controller: \"rcMediaSelectCtrl\",\n            link: function (scope, elem, attrs) {\n\n                scope.theme = angular.isDefined(attrs.rcmSelect) ? attrs.rcmSelect : scope.theme;\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n    module.directive(\"rcmTranslate\", [ '$log', 'rcMedia', function ($log, rcMedia) {\n        return {\n            restrict  : 'EA',\n            require: \"^rcMedia\",\n            link: function (scope, elem, attrs, rcMediaApi) {\n\n                var ref = elem.html();\n\n                if (ref.length > 0) {\n                    var text = rcMedia.getLocalizedText(ref);\n                    elem.html(elem.html().replace(ref, text));\n                }\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n\n    module.directive(\"rcmUploadControls\", [ '$log', '$parse', '$compile', function ($log, $parse, $compile) {\n        return {\n            restrict  : 'EA',\n            require: \"^rcMedia\",\n            scope     : {\n                file  : '=?ngModel',\n                saveClick: '@?rcmSaveClick',\n                cancelClick: '@?rcmCancelClick'\n            },\n            templateUrl: function (elem, attrs) {\n                return attrs.rcmTemplateUrl || 'rc-media-upload-controls.tpl.html';\n            },\n            link: function (scope, elem, attrs, rcMediaApi) {\n\n                scope.file = angular.isDefined(scope.file) ? scope.file : null;\n\n                scope.uploadFile = function () {\n                    scope.file = rcMediaApi.upload.file;\n\n                    return rcMediaApi.uploadFile().then(\n                        function (response_success) {\n                            $log.debug(response_success);\n                            scope.$parent.$parent.$applyAsync($parse(scope.saveClick));\n                        },\n                        function (response_error) {\n                            $log.debug(response_error);\n                        },\n                        function (evt) {\n                            $log.debug(evt);\n                        }\n                    );\n                };\n\n                scope.cancelUploadFile = function () {\n                    rcMediaApi.cancelUploadFile();\n                };\n\n                scope.resetUploadFile = function (back) {\n                    scope.file = null;\n                    rcMediaApi.resetUploadFile();\n\n                    if (back === true) {\n                        scope.$parent.$parent.$applyAsync($parse(scope.cancelClick));\n                    }\n                };\n\n                // INIT\n                rcMediaApi.uploadControlsElement = angular.element(elem);\n                scope.rcMediaApi = rcMediaApi;\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n    module.directive(\"rcmUpload\", [ 'rcMedia', '$log', function (rcMedia, $log) {\n        return {\n            restrict  : 'EA',\n            require: \"^rcMedia\",\n            scope     : {\n                file      : '=?ngModel',\n                multiple  : '=?rcmMultiple',\n                accept    : '@?rcmAccept',\n                pattern   : '@?rcmPattern',\n                fileName  : '@?rcmFileName',\n                minWidth  : '=?rcmMinWidth',\n                minHeight : '=?rcmMinHeight',\n                fixOrientation: '=?rcmFixOrientation',\n                crop      : '=?rcmCrop',\n                cropArea  : '=?rcmCropArea',\n                loadIcon : '@?rcmLoadIcon'\n            },\n            templateUrl: function (elem, attrs) {\n                return attrs.rcmTemplateUrl || 'rc-media-upload.tpl.html';\n            },\n            link: function (scope, elem, attrs, rcMediaApi) {\n\n                scope.alerts = [];\n                scope.loading = false;\n                scope.progress = 0;\n                scope.currentState = '';\n\n                scope.file = angular.isDefined(scope.file) ? scope.file : rcMediaApi.resetUploadFile();\n                scope.multiple = angular.isDefined(scope.multiple) ? scope.multiple : false;\n                scope.accept = angular.isDefined(scope.accept) ? scope.accept : '*/*';\n                scope.pattern = angular.isDefined(scope.pattern) ? scope.pattern : '*/*';\n                scope.fileName = angular.isDefined(scope.fileName) ? scope.fileName : '';\n                scope.minWidth = angular.isDefined(scope.minWidth) ? scope.minWidth : 0;\n                scope.minHeight = angular.isDefined(scope.minHeight) ? scope.minHeight : 0;\n                scope.fixOrientation = angular.isDefined(scope.fixOrientation) ? scope.fixOrientation : false;\n\n                scope.crop = angular.isDefined(scope.crop) ? scope.crop : true;\n\n                var crop_area_default = {\n                    auto: true,\n                    width: scope.minWidth,\n                    height: scope.minHeight,\n                    minWidth: scope.minWidth,\n                    minHeight: scope.minHeight,\n                    cropWidth: 0,\n                    cropHeight: 0,\n                    keepAspect: true,\n                    enforceCropAspect: false,\n                    touchRadius: 10,\n                    color: 'rgba(118, 118, 118, 0.8)',\n                    colorDrag: 'rgba(118, 118, 118, 0.8)',\n                    colorBg: 'rgba(200, 200, 200, 0.8)',\n                    colorCropBg: 'rgba(118, 118, 118, 0.8)'\n                };\n\n\n                function add_alert (type, msg) {\n                    scope.alerts.push({type: type, msg: msg});\n                }\n\n                scope.cropArea = angular.isObject(scope.cropArea) ? angular.extend(crop_area_default, scope.cropArea)  : crop_area_default;\n\n                // FUNCTIONS\n                scope.onChangeUploadLoading = function (newValue, oldValue) {\n                    scope.loading = newValue;\n                };\n\n                scope.onChangeUploadResult = function (newValue, oldValue) {\n\n                    $log.debug('onChangeUploadResult');\n                    $log.debug(newValue);\n                    $log.debug(oldValue);\n\n                    if (newValue !== oldValue) {\n                        if (angular.isObject(rcMediaApi.upload.result) && angular.isDefined(rcMediaApi.upload.result.message)) {\n                            add_alert('alert', rcMediaApi.upload.result.message);\n                        }\n                        else {\n                            scope.alerts = [];\n                        }\n                    }\n                };\n\n                scope.onChangeUploadFile = function (newValue, oldValue) {\n                    if (newValue !== oldValue) {\n                        $log.debug('onChangeUploadFile');\n                        scope.file = newValue;\n                    }\n                };\n\n                scope.onChangeUploadMultiple = function (newValue, oldValue) {\n                    if (newValue !== oldValue) {\n                        $log.debug('onChangeUploadMultiple');\n                        scope.multiple = newValue;\n                    }\n                };\n\n                scope.onChangeUploadCrop = function (newValue, oldValue) {\n                    if (newValue !== oldValue) {\n                        $log.debug('onChangeUploadCrop');\n                        scope.crop = newValue;\n                    }\n                };\n\n                scope.onChangeUploadProgress = function (newValue, oldValue) {\n                    if (newValue !== oldValue) {\n                        $log.debug('onChangeUploadProgress');\n                        scope.progress = newValue;\n                    }\n                };\n\n                scope.onChangeUploadCurrentState = function (newValue, oldValue) {\n                    $log.debug('onChangeUploadCurrentState');\n\n                    angular.extend(scope.cropArea, rcMediaApi.upload.cropArea);\n                    scope.currentState = newValue;\n                };\n\n                scope.uploadSelectFiles = function ($files) {\n                    scope.alerts = [];\n                    rcMediaApi.uploadSelectFiles($files);\n                };\n\n                scope.changeFiles = function ($files, $file, $newFiles, $duplicateFiles, $invalidFiles, $event) {\n\n                    if ($invalidFiles.length > 0) {\n                        var err_text = rcMedia.getLocalizedText('UPLOAD_INVALID_FILE');\n\n                        angular.forEach($invalidFiles, function (file, file_key) {\n                            if (file_key > 0) {\n                                err_text += '\\r\\n';\n                            }\n                            var i = 0;\n                            angular.forEach(file.$errorMessages, function (value, key) {\n\n                                if (i > 0 ) {\n                                    err_text += ', ';\n                                }\n                                else {\n                                    err_text += ' ';\n                                }\n                                if (value === true) {\n                                    err_text += rcMedia.getLocalizedText('UPLOAD_INVALID_' + key);\n\n                                    switch (key) {\n                                        case 'minHeight':\n                                            err_text += ' ' + rcMediaApi.upload.minHeight + 'px';\n                                            break;\n                                        case 'minWidth':\n                                            err_text += ' ' + rcMediaApi.upload.minWidth + 'px';\n                                            break;\n                                        case 'pattern':\n                                            break;\n                                    }\n                                }\n                                i++;\n                            });\n                        });\n\n\n                        add_alert('alert', err_text);\n                    }\n                    else if ($files.length > 0) {\n                        scope.uploadSelectFiles($files);\n                    }\n                };\n\n                scope.closeAlert = function(index) {\n                    scope.alerts.splice(index, 1);\n                };\n\n                // INIT\n                rcMediaApi.uploadElement = angular.element(elem);\n                rcMediaApi.initMediaUpload( {\n                    multiple : scope.multiple,\n                    accept   : scope.accept,\n                    pattern  : scope.pattern,\n                    fileName : scope.fileName,\n                    minWidth : scope.minWidth,\n                    minHeight: scope.minHeight,\n                    crop     : scope.crop,\n                    cropArea : scope.cropArea,\n                    file     : scope.file\n                } );\n\n                scope.rcMediaApi = rcMediaApi;\n\n                scope.$watch('rcMediaApi.upload.file',      scope.onChangeUploadFile);\n                scope.$watch('rcMediaApi.upload.multiple',  scope.onChangeUploadMultiple);\n                scope.$watch('rcMediaApi.upload.crop',      scope.onChangeUploadCrop);\n                scope.$watch('rcMediaApi.upload.progress',  scope.onChangeUploadProgress);\n                scope.$watch('rcMediaApi.upload.loading',   scope.onChangeUploadLoading);\n                scope.$watch('rcMediaApi.upload.result',    scope.onChangeUploadResult);\n                scope.$watch('rcMediaApi.upload.currentState', scope.onChangeUploadCurrentState);\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n    module.controller(\"rcMediaCtrl\", [\n        '$scope',\n        '$q',\n        '$window',\n        '$injector',\n        '$filter',\n        '$log',\n        '$timeout',\n        'RCMEDIA_UPLOAD_STATES',\n        'rcMediaService',\n        function ($scope, $q, $window, $injector, $filter, $log, $timeout, RCMEDIA_UPLOAD_STATES, rcMediaService) {\n\n        var rcMediaApi = this;\n        var debounce_bind_resize;\n\n        this.rcMediaElement = null;\n\n        /**\n         * Init Controller\n         */\n        this.init = function () {\n            $log.debug('rcMedia Init');\n\n            //Set default upload\n            this.upload = {\n                multiple: false,\n                accept: '*/*',\n                pattern: '*/*',\n                fileName: '',\n                minWidth: 0,\n                minHeight: 0,\n                fixOrientation: false,\n                crop: true,\n                cropArea: {\n                    auto: true\n                },\n                file: {},\n                loading: false,\n                result: null,\n                progress: 0,\n                currentState: '',\n                deferred: null,\n                uploadFile: null\n            };\n\n            this.search = '';\n\n            this.sourceUrl      = angular.isDefined($scope.sourceUrl) ? $scope.sourceUrl : '';\n            this.sourceId       = angular.isDefined($scope.sourceId) ? $scope.sourceId : 'id';\n            this.sourceUrlKey   = angular.isDefined($scope.sourceUrlKey) ? $scope.sourceUrlKey : 'source_url';\n            this.sourceTitle    = angular.isDefined($scope.sourceTitle) ? $scope.sourceTitle : 'title.rendered';\n\n            this.returnModelType  = angular.isDefined($scope.returnModelType) ? $scope.returnModelType : 'string';\n            this.returnModelKey   = angular.isDefined($scope.returnModelKey) ? $scope.returnModelKey : null;\n            this.returnModelPush   = angular.isDefined($scope.returnModelPush) ? $scope.returnModelPush : false;\n\n            this.accept         = angular.isDefined($scope.accept) ? $scope.accept : 'image/*';\n\n            this.sourcesLimitKey = angular.isDefined($scope.sourcesLimitKey) ? $scope.sourcesLimitKey : 'limit';\n            this.sourcesOffsetKey = angular.isDefined($scope.sourcesOffsetKey) ? $scope.sourcesOffsetKey : 'offset';\n            this.sourcesSearchKey = angular.isDefined($scope.sourcesSearchKey) ? $scope.sourcesSearchKey : 'search';\n            this.sourcesQuery = angular.isDefined($scope.sourcesQuery) ? $scope.$eval($scope.sourcesQuery) : {};\n            this.deleteQuery = angular.isDefined($scope.deleteQuery) ? $scope.$eval($scope.deleteQuery) : {};\n\n            this.sources        = angular.isDefined(this.sources) ? this.sources : [];\n            this.sourcesSelected = [];\n\n\n            if (angular.isUndefined(this.sourcesQuery[this.sourcesLimitKey])) {\n                this.sourcesQuery[this.sourcesLimitKey] = 10;\n            }\n\n            if (angular.isUndefined(this.sourcesQuery[this.sourcesOffsetKey])) {\n                this.sourcesQuery[this.sourcesOffsetKey] = 0;\n            }\n\n            if (angular.isUndefined(this.sourcesQuery[this.sourcesSearchKey])) {\n                this.sourcesQuery[this.sourcesSearchKey] = '';\n            }\n\n\n            this.addBindings();\n\n            $scope.onMediaReady({$rcMediaApi: this});\n        };\n\n        /**\n         * Function to execute when init Media Gallery.\n         */\n        this.initMediaGallery = function ( gallery, search ) {\n            $log.debug('initMediaGallery');\n\n            //Set default gallery\n            this.gallery = {\n                result: null,\n                loading: false,\n                loadMore: false,\n                multiple: false,\n                order: 'date'\n            };\n\n            if (angular.isObject(gallery)) {\n                angular.extend(this.gallery, gallery);\n            }\n\n            if (angular.isString(search) && search.length > 0) {\n                this.search = search;\n                this.searchSources();\n            }\n            else {\n                this.getSources(this.sourcesQuery);\n            }\n        };\n\n        /**\n        * Function to execute when init Media Search.\n        */\n        this.initMediaSearch = function ( value ) {\n            $log.debug('initMediaSearch');\n\n            if (angular.isString(value) && value.length > 0) {\n                this.search = value;\n                this.searchSources();\n            }\n        };\n\n\n        /**\n         * Function to execute when init Media Upload.\n         *\n         * @param upload\n         */\n        this.initMediaUpload = function ( upload ) {\n            $log.debug('initMediaUpload');\n\n            if (angular.isObject(upload)) {\n                angular.extend(this.upload, upload);\n            }\n\n\n            this.setUploadState(RCMEDIA_UPLOAD_STATES.SELECT_FILES);\n        };\n\n\n        /**\n         * Function return the source title by expression\n         *\n         * @param source\n         * @param expression\n         * @returns {*}\n         */\n        this.getSourceTitle = function( source ) {\n\n            var source_title_list = this.sourceTitle.split('.');\n            var find_source = source;\n\n            for(var i = 0; i < source_title_list.length - 1; i++) {\n                var elem = source_title_list[i];\n                if( !find_source[elem] ) {\n                    find_source[elem] = {};\n                }\n\n                find_source = find_source[elem];\n            }\n\n            var title = find_source[source_title_list[source_title_list.length - 1]];\n\n            if (title) {\n                return title.split('_').join(' ');\n            }\n\n            return '';\n        };\n\n\n        /**\n         * Set upload new state\n         *\n         * @param newState\n         * @returns {string|*}\n         */\n        this.setUploadState = function (newState) {\n            if (newState && newState !== this.upload.currentState) {\n                $scope.onUploadUpdateState({$state: newState});\n\n                this.upload.currentState = newState;\n            }\n\n            return this.upload.currentState;\n        };\n\n        /**\n         * Upload Select File.\n         *\n         * @param $files\n         */\n        this.uploadSelectFiles = function ($files) {\n\n            //Attention multiple file crop not supported.\n\n            if ( $files.length > 0 ) {\n                $log.debug('Upload selectFiles');\n                $log.debug($files);\n\n                try {\n                    var Upload = $injector.get('Upload');\n\n                    /* Get image file dimensions*/\n                    Upload.imageDimensions($files[0]).then(\n                        function(dimensions){\n                            if ( rcMediaApi.upload.multiple === false && rcMediaApi.upload.crop === true ) {\n\n                                if ( angular.isDefined(rcMediaApi.uploadElement) &&\n                                    angular.isDefined(rcMediaApi.upload.cropArea.auto) &&\n                                    rcMediaApi.upload.cropArea.auto === true\n                                ) {\n\n                                    var viewWidth = rcMediaApi.uploadElement[0].clientWidth;\n                                    var viewHeight = rcMediaApi.uploadElement[0].clientHeight;\n\n                                    if (!rcMediaApi.upload.cropArea.cropHeight) {\n                                        rcMediaApi.upload.cropArea.cropHeight = rcMediaApi.upload.minHeight;\n                                    }\n\n                                    if (!rcMediaApi.upload.cropArea.cropWidth) {\n                                        rcMediaApi.upload.cropArea.cropWidth = rcMediaApi.upload.minWidth;\n                                    }\n\n                                    rcMediaApi.upload.cropArea.width = viewWidth;\n                                    rcMediaApi.upload.cropArea.height = viewHeight;\n\n\n                                    var ratioH = dimensions.height / viewHeight;\n                                    var ratioW = dimensions.width / viewWidth;\n                                    var ratio;\n\n                                    if (ratioH >= ratioW) {\n                                        ratio = ratioH;\n                                    }\n                                    else {\n                                        ratio = ratioW;\n                                    }\n\n                                    rcMediaApi.upload.cropArea.minWidth = parseInt(rcMediaApi.upload.cropArea.cropWidth / ratio);\n                                    rcMediaApi.upload.cropArea.minHeight = parseInt(rcMediaApi.upload.cropArea.cropHeight / ratio);\n                                }\n\n                                $log.debug('change state to Crop');\n                                rcMediaApi.setUploadState(RCMEDIA_UPLOAD_STATES.CROP_IMAGE);\n                            }\n                            else {\n                                //Crop not enable\n                                rcMediaApi.uploadFile();\n                            }\n                        },\n                        function (error) {\n                            //Is not image file\n                            rcMediaApi.uploadFile();\n                        }\n                    );\n                }\n                catch(err) {\n                    $log.error(err);\n                }\n            }\n        };\n\n        /**\n         * Function to upload files.\n         *\n         * @param file\n         */\n        this.uploadFile = function () {\n            $log.debug('upload');\n\n            this.upload.deferred = $q.defer();\n\n            this.upload.loading = true;\n            this.upload.progress = 0;\n            this.setUploadState(RCMEDIA_UPLOAD_STATES.PROGRESS_FILES);\n\n            try {\n                var Upload = $injector.get('Upload');\n\n                if (angular.isUndefined(this.upload.file.destDataUrl) || !this.upload.file.destDataUrl) {\n                    this.upload.file.destDataUrl = this.upload.file.source.$ngfBlobUrl;\n                }\n                else {\n\n                    this.upload.file.source = Upload.dataUrltoBlob(this.upload.file.destDataUrl, this.upload.file.source.name);\n                }\n\n                //Rename File\n                if (this.upload.fileName.length > 0) {\n                    var ext = this.upload.file.source.$ngfName.slice((this.upload.file.source.$ngfName.lastIndexOf(\".\") - 1 >>> 0) + 2);\n                    this.upload.file.source.$ngfName = this.upload.fileName + '.' + ext;\n                }\n\n                this.upload.uploadFile = Upload.upload({\n                    url   : rcMediaService.getRestUrl(),\n                    data: {\n                        file: this.upload.file.source\n                    }\n                });\n\n                this.upload.uploadFile.then(\n                    function (response_success) {\n                        rcMediaApi.resetUploadFile();\n                        rcMediaApi.addSource(response_success.data);\n                        $scope.onUploadFile({$file: rcMediaApi.upload.file});\n\n                        rcMediaApi.setUploadState(RCMEDIA_UPLOAD_STATES.SELECT_FILES);\n\n                        rcMediaApi.upload.result = null;\n                        rcMediaApi.upload.loading = false;\n\n                        rcMediaApi.upload.deferred.resolve(response_success);\n                    },\n                    function (response_error) {\n                        $log.debug('error status: ' + response_error);\n                        rcMediaApi.resetUploadFile();\n                        rcMediaApi.setUploadState(RCMEDIA_UPLOAD_STATES.SELECT_FILES);\n\n                        rcMediaApi.upload.result = response_error.data;\n                        rcMediaApi.upload.loading = false;\n\n                        rcMediaApi.upload.deferred.reject(response_error);\n                    },\n                    function (evt) {\n                        $log.debug('Progress status: ' + evt);\n\n                        var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                        rcMediaApi.upload.progress = progressPercentage;\n\n                        rcMediaApi.upload.deferred.notify(progressPercentage);\n                    }\n                );\n            }\n            catch(err) {\n                $log.error(err);\n\n                rcMediaApi.setUploadState(RCMEDIA_UPLOAD_STATES.SELECT_FILES);\n\n                rcMediaApi.upload.deferred.reject();\n            }\n\n\n            return this.upload.deferred.promise;\n        };\n\n        /**\n         * Cancell upload file\n         */\n        this.cancelUploadFile = function () {\n            this.upload.uploadFile.abort();\n        };\n\n        /**\n         * Function to reset upload file object.\n         *\n         * @returns {{srcFile: null, destDataUrl: string}}\n         */\n        this.resetUploadFile = function () {\n            rcMediaApi.upload.file = {\n                source: null,\n                destDataUrl: ''\n            };\n\n            rcMediaApi.setUploadState(RCMEDIA_UPLOAD_STATES.SELECT_FILES);\n\n            $scope.onResetUploadFile({$file: rcMediaApi.upload.file});\n\n            return rcMediaApi.upload.file;\n        };\n\n        /**\n         * Function to instantiate and check the sources selected.\n         *\n         * @param source\n         */\n        this.selectSource = function (source) {\n            $log.debug('selectSource');\n\n            if ( rcMediaApi.sourcesSelected.indexOf(source) === -1 ) {\n                if (this.gallery.multiple) {\n                    source.activeClass = true;\n                    this.sourcesSelected.push(source);\n                } else {\n                    angular.forEach(rcMediaApi.sources, function (value, key) {\n                        rcMediaApi.sources[key].activeClass = false;\n                    });\n                    source.activeClass = true;\n                    this.sourcesSelected = [];\n                    this.sourcesSelected.push(source);\n                }\n                $scope.onSelectSource({$source: source});\n            } else {\n                var index_source = rcMediaApi.sources.indexOf(source);\n\n                angular.forEach(rcMediaApi.sourcesSelected, function (value, key) {\n                    if (value === source) {\n                        if (index_source !== -1) {\n                            rcMediaApi.sources[index_source].activeClass = false;\n                        }\n                        rcMediaApi.sourcesSelected.splice(key, 1);\n                    }\n                });\n            }\n        };\n\n\n        /**\n         * Function to Deselect all selected source.\n         *\n         * @returns {{srcFile: null, destDataUrl: string}}\n         */\n        this.deselectSources = function () {\n            angular.forEach(rcMediaApi.sources, function (value, key) {\n                rcMediaApi.sources[key].activeClass = false;\n            });\n\n            rcMediaApi.sourcesSelected = [];\n        };\n\n\n        this.getSources = function ( sources_query ) {\n            $log.debug('getGallerySources');\n\n            this.gallery.loading = true;\n\n            var sources_deferred = rcMediaService.get(sources_query, true);\n\n            sources_deferred.then(\n                function (response_success) {\n                    if (response_success.length > 0) {\n                        angular.forEach(response_success, function (value, key) {\n                            rcMediaApi.addSource(value);\n                        });\n                    }\n\n                    rcMediaApi.gallery.loadMore = rcMediaApi.sources.length > 0 ? true : false;\n                    rcMediaApi.gallery.loading = false;\n                    rcMediaApi.gallery.result = null;\n                },\n                function (response_error) {\n                    rcMediaApi.sources = [];\n                    rcMediaApi.gallery.loadMore = rcMediaApi.sources.length > 0 ? true : false;\n                    rcMediaApi.gallery.loading = false;\n                    rcMediaApi.gallery.result = response_error.data;\n                }\n            );\n\n            return sources_deferred;\n        };\n\n        /**\n         * Function to instantiate delete the selected values.\n         */\n        this.deleteSources = function ()  {\n            $log.debug('deleteSources');\n\n            var all = [];\n\n            angular.forEach(this.sourcesSelected, function (source, key) {\n\n                all.push(rcMediaService.delete(source[rcMediaApi.sourceId], rcMediaApi.deleteQuery).then(\n                    function (response_success) {\n                        rcMediaApi.removeSource(source);\n                        $scope.onDeleteSources({$source: source} );\n                    },\n                    function (response_error) {\n\n                        //Delete not found remove in sources\n                        if (response_error.status === 404) {\n                            rcMediaApi.removeSource(source);\n                            $scope.onDeleteSources({$source: source} );\n                        }\n                    }\n                ));\n            });\n\n            this.gallery.loading = true;\n\n            var defer_all = $q.all(all);\n\n            defer_all.then(\n                function (response_success) {\n                    rcMediaApi.gallery.loading = false;\n                },\n                function (response_error) {\n                    rcMediaApi.gallery.loading = false;\n                }\n            );\n\n            return defer_all;\n        };\n\n\n        /**\n         * Remove item in sources and in selected sources\n         *\n         * @param source\n         */\n        this.removeSource = function ( source ) {\n\n            //Remove in source\n            var deleted_index = rcMediaApi.sources.map(function(o) { return o[rcMediaApi.sourceId]; }).indexOf(source[rcMediaApi.sourceId]);\n            if (deleted_index !== -1) {\n                rcMediaApi.sources.splice(deleted_index, 1);\n            }\n\n            //Remove in sourcesSelected\n            deleted_index = rcMediaApi.sourcesSelected.map(function(o) { return o[rcMediaApi.sourceId]; }).indexOf(source[rcMediaApi.sourceId]);\n            if (deleted_index !== -1) {\n                rcMediaApi.sourcesSelected.splice(deleted_index, 1);\n            }\n\n            rcMediaApi.bindResize();\n        };\n\n\n        /**\n         * Add item in sources\n         *\n         * @param source\n         */\n        this.addSource = function ( source ) {\n            source.tooltipTitle = rcMediaApi.getSourceTitle(source);\n            rcMediaApi.sources.push(angular.copy(source));\n\n            rcMediaApi.bindResize();\n        };\n\n\n        /**\n         * Function to instantiate model with the selected values.\n         */\n        this.saveSources = function () {\n            $log.debug('saveSources');\n\n            if (this.sourcesSelected.length > 0) {\n                var model = [];\n\n                if (this.returnModelPush === false) {\n                    $scope.modelPreview = [];\n                }\n\n                angular.forEach(rcMediaApi.sourcesSelected, function (value) {\n                    if (rcMediaApi.returnModelKey) {\n                        model.push(value[rcMediaApi.returnModelKey]);\n                    }\n                    else {\n                        model.push(value);\n                    }\n\n                    $scope.modelPreview.push(value);\n                });\n\n\n                switch (this.returnModelType) {\n                    case 'string':\n                        if (this.returnModelPush === true) {\n                            var new_model = $scope.model;\n                            if (new_model.length > 0) {\n                                new_model += ',';\n                            }\n                            model = new_model + model.toString();\n                        }\n                        $scope.model = model.toString();\n                        break;\n                    case 'array':\n                        if (this.returnModelPush === true) {\n                            model = $scope.model.concat(model);\n                        }\n                        $scope.model = model;\n                        break;\n                }\n\n                $scope.onSaveSources({$model: $scope.model});\n            }\n        };\n\n        /**\n         * Function to load more sources from DB.\n         */\n        this.loadMoreSources = function () {\n            $log.debug('loadMore');\n\n            this.sourcesQuery[this.sourcesOffsetKey] = this.sources.length;\n\n            this.gallery.loading = true;\n\n            var sources_deferred = rcMediaService.get(this.sourcesQuery);\n\n            sources_deferred.then(\n                function (response_success) {\n                    if (response_success.length > 0) {\n                        angular.forEach(response_success, function (value, key) {\n                            rcMediaApi.addSource(value);\n                        });\n                    }\n                    else {\n                        rcMediaApi.gallery.loadMore = false;\n                    }\n                    rcMediaApi.gallery.result = null;\n                    rcMediaApi.gallery.loading = false;\n\n                    $scope.onLoadMoreSources();\n                },\n                function (response_error) {\n                    rcMediaApi.gallery.result = response_error.data;\n                    rcMediaApi.gallery.loading = false;\n                }\n            );\n\n            return sources_deferred;\n        };\n\n        this.searchSources = function () {\n            $log.debug('searchSources');\n\n            this.sourcesQuery[this.sourcesSearchKey] = this.search;\n            this.sourcesQuery[this.sourcesOffsetKey] = 0;\n\n            this.gallery.loading = true;\n\n            var sources_deferred = rcMediaService.get(this.sourcesQuery, true);\n\n            sources_deferred.then(\n                function (response_success) {\n                    if (response_success.length > 0) {\n                        rcMediaApi.sources = [];\n                        angular.forEach(response_success, function (value, key) {\n                            rcMediaApi.addSource(value);\n                        });\n                    }\n                    else {\n                        rcMediaApi.sources = [];\n                    }\n\n                    rcMediaApi.gallery.loadMore = rcMediaApi.sources.length > 0 ? true : false;\n                    rcMediaApi.gallery.result = null;\n                    rcMediaApi.gallery.loading = false;\n\n                    $scope.onSearchSources({$search: rcMediaApi.search});\n                },\n                function (response_error) {\n                    rcMediaApi.sources = [];\n                    rcMediaApi.gallery.loadMore = false;\n                    rcMediaApi.gallery.result = response_error.data;\n                    rcMediaApi.gallery.loading = false;\n                }\n            );\n\n            return sources_deferred;\n        };\n\n        /**\n         *  Force resize event for angular tiny scrollbar after loading hide\n         */\n        this.bindResize = function() {\n\n            if (debounce_bind_resize) {\n                $timeout.cancel(debounce_bind_resize);\n            }\n\n            debounce_bind_resize = $timeout(function() {\n                $log.debug('Bind Resize for scroll');\n                $window.dispatchEvent(new Event(\"resize\"));\n            }, 300);\n        };\n\n        this.addBindings = function () {\n            $log.debug('addBindings');\n        };\n\n\n        //Init\n        this.init();\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n    module.controller(\"rcMediaSelectCtrl\", [\n        '$scope',\n        '$log',\n        'rcMediaService',\n        function ($scope, $log, rcMediaService) {\n\n        /**\n         * Init Controller\n         */\n        this.init = function () {\n            $log.debug('Media Select Init');\n\n            $scope.sourcePreviewHover = false;\n            $scope.loading = false;\n\n            $scope.theme = angular.isDefined($scope.theme) ? $scope.theme : '';\n            $scope.name = angular.isDefined($scope.name) ? $scope.name : 'media_sources';\n            $scope.id = angular.isDefined($scope.id) ? $scope.id : $scope.name + '_select';\n            $scope.type = angular.isDefined($scope.type) ? $scope.type : 'text';\n            $scope.class = angular.isDefined($scope.class) ? $scope.class : '';\n            $scope.onetime = angular.isDefined($scope.onetime) ? $scope.onetime : false;\n            $scope.single = angular.isDefined($scope.single) ? $scope.single : false;\n\n            $scope.initSources = angular.isDefined($scope.initSources) ? $scope.initSources : [];\n            $scope.config = angular.isDefined($scope.config) ? $scope.$eval($scope.config) : {};\n\n            var default_media = {\n                sourceId: 'id',\n                sourceUrl: '',\n                sourceUrlKey: 'source_url',\n                sourceTitle: 'title.rendered',\n                returnModelType: 'string',\n                returnModelKey: 'id',\n                returnModelPush: false,\n                sourcesOffsetKey: 'offset',\n                sourcesLimitKey:  'per_page',\n                sourcesSearchKey: 'search',\n                sourcesQuery: {\n                    per_page : 20\n                },\n                deleteQuery: {\n                    force: true\n                },\n                upload: {\n                    crop: true,\n                    multiple: false,\n                    pattern: 'image/*',\n                    minWidth: 300,\n                    minHeight: 300,\n                    cropArea: {\n                        color: 'rgba(118, 118, 118, 0.8)',\n                        colorDrag: 'rgba(118, 118, 118, 0.8)',\n                        colorBg: 'rgba(200, 200, 200, 0.8)',\n                        colorCropBg: 'rgba(0, 0, 0, 0.6)'\n                    },\n                    loadIcon: 'spinner:ripple'\n                },\n                gallery: {\n                    order: 'date',\n                    searchValue: '',\n                    multiple: !$scope.single,\n                    selectedSources: [],\n                    loadIcon: 'spinner:ripple'\n                },\n                sources: $scope.initSources,\n                sourcesPreview: angular.isArray($scope.initSources) ? $scope.initSources : []\n            };\n\n            //Deep Copy to new object with merge default, media and last config.\n            $scope.media = angular.merge({}, default_media, $scope.media, $scope.config);\n\n            $scope.getSources( $scope.media.sources );\n        };\n\n\n        $scope.removeSource = function ($index) {\n            \n            $scope.media.sourcesPreview.splice($index, 1);\n\n            if (angular.isArray($scope.media.sources)) {\n                $scope.media.sources.splice($index, 1);\n            }\n            else if(angular.isString($scope.media.sources)) {\n                $scope.media.sources = $scope.media.sources.split(',');\n                $scope.media.sources.splice($index, 1);\n                $scope.media.sources = $scope.media.sources.join(',');\n            }\n        };\n\n\n        $scope.getSources = function ( sources ) {\n\n            if(angular.isArray(sources)) {\n                sources = sources.join(',');\n            }\n\n            if((!angular.isString(sources) && !angular.isNumber(sources_str)) || sources.length === 0 ) {\n                return false;\n            }\n\n            var sources_query = angular.copy($scope.media.sourcesQuery);\n            sources_query = angular.extend(sources_query, { include: sources });\n\n            $scope.loading = true;\n\n            rcMediaService.get(sources_query).then(\n                function (response_success) {\n                    $scope.media.sourcesPreview = response_success;\n                    sources = [];\n\n                    angular.forEach(response_success, function(value, key) {\n                        if (angular.isDefined(value[$scope.media.returnModelKey])) {\n                            sources.push(value[$scope.media.returnModelKey]);\n                        }\n                    });\n\n                    switch ($scope.media.returnModelType) {\n                        case 'string':\n                            $scope.media.sources = sources.toString();\n                            break;\n                        case 'array':\n                            $scope.media.sources = sources;\n                            break;\n                    }\n\n                    $scope.loading = false;\n                },\n                function (response_error) {\n                    $scope.loading = false;\n                }\n            );\n        };\n\n        //Init\n        this.init();\n    }]);\n\n})(angular);\n","(function(angular){\n    'use strict';\n\n    // Load module rc-media\n    var module = angular.module('rcMedia');\n\n    //Enable cancellable resource\n    module.config(function($resourceProvider) {\n        $resourceProvider.defaults.cancellable = true;\n    });\n\n    module.provider('rcMedia', [ function rcMediaProvider() {\n\n        this.rest = {\n            url: '',\n            path: '/wp-json/wp/v2/media'\n        };\n\n        this.locale = null;\n\n        // default localized text. cannot be modified.\n        this.defaultText = {\n            'en-us': {\n                TITLE_GALLERY       : 'Gallery',\n                TITLE_EMPTY_GALLERY : 'Your gallery is empty',\n                TITLE_UPLOAD        : 'Upload file',\n                TITLE_DRAG_FILE     : 'Drag files to upload',\n                SUB_TITLE_EMPTY_GALLERY: 'Upload your first file.',\n                SUB_TITLE_DRAG_FILE : 'or',\n                BTN_CANCEL          : 'Cancel',\n                BTN_SAVE            : 'Save',\n                BTN_DELETE_FILE     : 'Delete file',\n                BTN_DELETE_FILES    : 'Delete files',\n                BTN_DESELECT_ALL    : 'Deselect all',\n                BTN_SELECT_FILE     : 'Select file',\n                BTN_SELECT_FILES    : 'Select files',\n                BTN_SHOW_MORE       : 'Show More',\n                BTN_BACK_GALLERY    : 'Back to gallery',\n                BTN_UPLOAD_FILE     : 'Upload file',\n                BTN_UPLOAD_FILES    : 'Upload files',\n                BTN_BROWSE_FILE     : 'Browse a file',\n                UPLOAD_INVALID_FILE : 'Your file is not valid.',\n                UPLOAD_INVALID_minWidth : 'Minimum width',\n                UPLOAD_INVALID_minHeight: 'Minimum height',\n                UPLOAD_INVALID_pattern  : 'File type error'\n            },\n            'fr-FR': {\n                TITLE_GALLERY       : 'Galerie',\n                TITLE_EMPTY_GALLERY : 'La galerie est vide',\n                TITLE_UPLOAD        : 'Télécharger un fichier',\n                TITLE_DRAG_FILE     : 'Glisser le fichier ici',\n                SUB_TITLE_EMPTY_GALLERY: 'Veuillez charger votre premier fichier.',\n                SUB_TITLE_DRAG_FILE : 'ou',\n                BTN_CANCEL          : 'Annuler',\n                BTN_SAVE            : 'Sauver',\n                BTN_DELETE_FILE     : 'Supprimer le fichier',\n                BTN_DELETE_FILES    : 'Supprimer les fichiers',\n                BTN_DESELECT_ALL    : 'Désélectionner tous',\n                BTN_SELECT_FILE     : 'Sélectionner le fichier',\n                BTN_SELECT_FILES    : 'Sélectionner les fichiers',\n                BTN_SHOW_MORE       : 'Voir plus',\n                BTN_BACK_GALLERY    : 'Revenir à la galerie',\n                BTN_UPLOAD_FILE     : 'Télécharger le fichier',\n                BTN_UPLOAD_FILES    : 'Télécharger les fichiers',\n                BTN_BROWSE_FILE     : 'Choisir un fichier',\n                UPLOAD_INVALID_FILE : 'Votre fichier n\\'est pas valide.',\n                UPLOAD_INVALID_minWidth : 'Largeur minimum',\n                UPLOAD_INVALID_minHeight: 'Hauteur minimum',\n                UPLOAD_INVALID_pattern  : 'Type de fichier erroné'\n            },\n            'nl-NL': {\n                TITLE_GALLERY       : 'Fotogalerij',\n                TITLE_EMPTY_GALLERY : 'Uw galerij is leeg',\n                TITLE_UPLOAD        : 'File uploaden',\n                TITLE_DRAG_FILE     : 'Zet de file hier neer',\n                SUB_TITLE_EMPTY_GALLERY: 'Upload hier uw eerste file.',\n                SUB_TITLE_DRAG_FILE : 'of',\n                BTN_CANCEL          : 'Annuleren',\n                BTN_SAVE            : 'Opslaan',\n                BTN_DELETE_FILE     : 'File deleten',\n                BTN_DELETE_FILES    : 'Files deleten',\n                BTN_DESELECT_ALL    : 'Alles deselecteren',\n                BTN_SELECT_FILE     : 'File selecteren',\n                BTN_SELECT_FILES    : 'Files selecteren',\n                BTN_SHOW_MORE       : 'Meer zien',\n                BTN_BACK_GALLERY    : 'Terug naar de fotogalerij',\n                BTN_UPLOAD_FILE     : 'File uploaden',\n                BTN_UPLOAD_FILES    : 'Files uploaden',\n                BTN_BROWSE_FILE     : 'File kiezen',\n                UPLOAD_INVALID_FILE : 'Uw file is niet geldig.',\n                UPLOAD_INVALID_minWidth : 'Minimum breedte',\n                UPLOAD_INVALID_minHeight: 'Minimum hoogte',\n                UPLOAD_INVALID_pattern  : 'Verkeerde file type'\n            }\n        };\n\n        // localized text which actually being used.\n        this.interfaceText = angular.copy(this.defaultText);\n\n\n\n        this.$get = [ '$http', '$locale', function( $http, $locale ) {\n            var rest = this.rest;\n            var localizedText;\n\n            //Enable Cors\n            $http.defaults.useXDomain = true;\n            $http.defaults.headers.common['Access-Control-Allow-Origin']  = '*';\n\n            // Disable IE ajax request caching\n            $http.defaults.headers.common['If-Modified-Since']  = '0';\n            //Disable caching\n            $http.defaults.headers.common['cache-control']      = 'private, max-age=0, no-cache';\n\n            //Translation\n            if(this.locale) {\n                localizedText = this.interfaceText[this.locale];\n            } else {\n                localizedText = this.interfaceText[$locale.id];\n            }\n\n            if(!localizedText) {\n                localizedText = this.defaultText['en-us'];\n            }\n\n            return {\n                getRest: function() {\n                    return rest;\n                },\n                getLocalizedText: function ( item ) {\n\n                    if (item) {\n                        var text = localizedText[item];\n\n                        return (text) ? text : '';\n                    }\n\n                    return localizedText;\n                }\n            };\n        }];\n\n        /**\n         * Merge with default localized text.\n         * @param localeId a string formatted as languageId-countryId\n         * @param obj localized text object.\n         */\n        this.setLocalizedText = function(localeId, obj) {\n            if(!localeId) {\n                throw new Error('localeId must be a string formatted as languageId-countryId');\n            }\n            if(!this.interfaceText[localeId]) {\n                this.interfaceText[localeId] = {};\n            }\n            this.interfaceText[localeId] = angular.extend(this.interfaceText[localeId], obj);\n        };\n\n        /**\n         * Force to use a special locale id. if localeId is null. reset to user-agent locale.\n         * @param localeId a string formatted as languageId-countryId\n         */\n        this.useLocale = function(localeId) {\n            var local = localeId.split('-');\n\n            if (local.length === 1) {\n                switch (localeId) {\n                    case 'en':\n                        localeId += '-US';\n                        break;\n                    default:\n                        localeId += '-' + localeId.toUpperCase();\n                }\n            }\n\n            this.locale = localeId;\n        };\n\n        this.setRest = function(rest) {\n            this.rest = rest;\n        };\n\n    }]);\n\n\n    //Media Resource\n    module.factory( 'rcMediaResource', [ '$resource', 'rcMedia', function ( $resource, rcMedia ) {\n\n        var rest_url = rcMedia.getRest().url + rcMedia.getRest().path;\n\n        var resource = {\n            Media: $resource(rest_url + '/:mediaId',\n                {mediaId: '@media_id'},\n                {get: {\n                    method: 'GET',\n                    isArray: false,\n                    cache: false\n                }},\n                {query: {\n                    method: 'GET',\n                    params:{},\n                    isArray: true,\n                    cache: false,\n                    cancellable: true\n                }}\n            )\n        };\n\n        return resource;\n\n    }]);\n\n    //Media Service Abstraction\n    module.factory('rcMediaService', ['$log', '$q', 'rcMedia', 'rcMediaResource', function ( $log, $q, rcMedia, rcMediaResource ) {\n\n        var service = {\n\n            getRestUrl: function () {\n                return rcMedia.getRest().url + rcMedia.getRest().path;\n            },\n\n            get: function( sources_query, cancel ){\n\n                //Cancel last request if param true\n                if (cancel === true && this.request !== undefined && angular.isFunction(this.request.$cancelRequest)) {\n\n                    this.request.$cancelRequest();\n                }\n\n                if ( angular.isNumber(sources_query) ) {\n                    sources_query = {mediaId: sources_query};\n\n                    this.request = rcMediaResource.Media.get( sources_query );\n                }\n                else {\n                    if ( !angular.isObject(sources_query) ) {\n                        sources_query = {};\n                    }\n\n                    this.request = rcMediaResource.Media.query( sources_query );\n                }\n\n                return this.request.$promise;\n            },\n\n            delete: function ( source_id, delete_query ) {\n\n                if (angular.isUndefined(delete_query)) {\n                    delete_query = {};\n                }\n\n                angular.extend(delete_query, { mediaId: source_id } );\n\n                return rcMediaResource.Media.delete( delete_query ).$promise;\n            }\n\n        };\n\n        return service;\n    }]);\n\n})(angular);\n","angular.module('rcMedia').run(['$templateCache', function($templateCache) {$templateCache.put('rc-media-dialog-zf.tpl.html','<rc-media class=\"rc-media\"\\n     rcm-source-url=\"{{rcDialogApi.data.sourceUrl}}\"\\n     rcm-source-url-key=\"{{rcDialogApi.data.sourceUrlKey}}\"\\n     rcm-source-id=\"{{rcDialogApi.data.sourceId}}\"\\n     rcm-source-title=\"{{rcDialogApi.data.sourceTitle}}\"\\n     data-ng-model=\"rcDialogApi.data.sources\"\\n     data-ng-model-preview=\"rcDialogApi.data.sourcesPreview\"\\n     rcm-return-model-type=\"{{rcDialogApi.data.returnModelType}}\"\\n     rcm-return-model-key=\"{{rcDialogApi.data.returnModelKey}}\"\\n     rcm-return-model-push=\"rcDialogApi.data.returnModelPush\"\\n     rcm-delete-query=\"{{rcDialogApi.data.deleteQuery}}\"\\n     rcm-sources-query=\"{{rcDialogApi.data.sourcesQuery}}\"\\n     rcm-sources-offset-key=\"{{rcDialogApi.data.sourcesOffsetKey}}\"\\n     rcm-sources-limit-key=\"{{rcDialogApi.data.sourcesLimitKey}}\"\\n     rcm-sources-search-key=\"{{rcDialogApi.data.sourcesSearchKey}}\"\\n>\\n<div class=\"dialog-header\">\\n    <div class=\"gallery-view\" data-ng-show=\"!selectedView\" >\\n        <h3 class=\"float-left dialog-title\"><rcm-translate>TITLE_GALLERY</rcm-translate></h3>\\n        <button class=\"button secondary hollow float-right dialog-close\" type=\"button\" data-ng-click=\"rcDialogApi.closeDialog()\" aria-label=\"Close reveal\" >\\n            <span aria-hidden=\"true\">&times;</span>\\n        </button>\\n        <button class=\"button primary hollow float-right upload\" type=\"button\" data-ng-show=\"!selectedView\" data-ng-click=\"selectedView=\\'fileUpload\\'\" >\\n            <svg width=\"25\" height=\"25\" version=\"1.1\" id=\"rcm_upload_svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\\n                   x=\"0px\" y=\"0px\" viewBox=\"0 0 23 20.5\" style=\"enable-background:new 0 0 23 20.5;\" xml:space=\"preserve\"\\n              >\\n                <g id=\"rcm_upload_svg_arrow\">\\n                  <line id=\"rcm_upload_svg_line\" class=\"st0\" x1=\"11.5\" y1=\"20.5\" x2=\"11.5\" y2=\"7.5\"/>\\n                  <polyline id=\"rcm_upload_svg_point\" class=\"st1\" points=\"8.5,10.5 11.5,7.5 14.5,10.5 \\t\"/>\\n                </g>\\n                <path\\n                  id=\"rcm_upload_svg_cloud\"\\n                  class=\"st1\"\\n                  d=\"M15.5,15.5h3c2.2,0,4-1.8,4-4c0-2.2-1.8-4-4-4c-0.3-3.9-3.5-7-7.5-7c-4,0-7.3,3.2-7.5,7.1c-1.7,0.4-3,2-3,3.9c0,2.2,1.8,4,4,4h3\"\\n                />\\n            </svg>\\n            <rcm-translate>BTN_UPLOAD_FILE</rcm-translate>\\n        </button>\\n    </div>\\n\\n    <div class=\"upload-view\" data-ng-show=\"selectedView==\\'fileUpload\\'\">\\n        <h3 class=\"float-left dialog-title\" ><rcm-translate>TITLE_UPLOAD</rcm-translate></h3>\\n        <button class=\"button secondary hollow float-right dialog-close\" type=\"button\" data-ng-click=\"rcDialogApi.closeDialog()\" aria-label=\"Close reveal\" >\\n            <span aria-hidden=\"true\">&times;</span>\\n        </button>\\n    </div>\\n</div>\\n<div class=\"dialog-body\">\\n\\n    <!-- Directive rc-media-upload -->\\n    <rcm-upload class=\"upload-view\" data-ng-if=\"selectedView==\\'fileUpload\\'\"\\n         rcm-template-url=\"rc-media-upload-zf.tpl.html\"\\n         rcm-multiple=\"rcDialogApi.data.upload.multiple\"\\n         rcm-accept=\"\\'{{rcDialogApi.data.upload.accept}}\\'\"\\n         rcm-pattern=\"\\'{{rcDialogApi.data.upload.pattern}}\\'\"\\n         rcm-file-name=\"{{rcDialogApi.data.upload.fileName}}\"\\n         rcm-min-width=\"rcDialogApi.data.upload.minWidth\"\\n         rcm-min-height=\"rcDialogApi.data.upload.minHeight\"\\n         rcm-fix-orientation=\"rcDialogApi.data.upload.fixOrientation\"\\n         rcm-crop=\"rcDialogApi.data.upload.crop\"\\n         rcm-crop-area=\"rcDialogApi.data.upload.cropArea\"\\n         rcm-load-icon=\"{{rcDialogApi.data.upload.loadIcon}}\"\\n    ></rcm-upload>\\n\\n    <div class=\"gallery-view\" data-ng-show=\"!selectedView\">\\n        <!-- Directive rc-media-gallery -->\\n        <rcm-gallery\\n             rcm-template-url=\"rc-media-gallery-zf.tpl.html\"\\n             rcm-order=\"{{rcDialogApi.data.gallery.order}}\"\\n             rcm-multiple=\"rcDialogApi.data.gallery.multiple\"\\n             rcm-selected-sources=\"rcDialogApi.data.gallery.selectedSources\"\\n             rcm-search-value=\"{{rcDialogApi.data.gallery.searchValue}}\"\\n             rcm-load-icon=\"{{rcDialogApi.data.gallery.loadIcon}}\"\\n        ></rcm-gallery>\\n    </div>\\n</div>\\n<div class=\"dialog-footer\" data-ng-show=\"selectedView || rcDialogApi.data.gallery.selectedSources.length\">\\n    <rcm-upload-controls class=\"upload-view\" data-ng-if=\"selectedView==\\'fileUpload\\'\"\\n         rcm-template-url=\"rc-media-upload-controls-zf.tpl.html\"\\n         data-ng-model=\"rcDialogApi.data.uploadFile\"\\n         rcm-save-click=\"selectedView=false\"\\n         rcm-cancel-click=\"selectedView=false\"\\n    ></rcm-upload-controls>\\n\\n    <rcm-gallery-controls class=\"gallery-view\" data-ng-if=\"!selectedView\"\\n         rcm-template-url=\"rc-media-gallery-controls-zf.tpl.html\"\\n         rcm-save-click=\"rcDialogApi.confirmDialog()\"\\n    ></rcm-gallery-controls>\\n</div>\\n</rc-media>');\n$templateCache.put('rc-media-gallery-controls-zf.tpl.html','<button class=\"button alert hollow float-left delete-file\" data-ng-click=\"deleteSources()\" data-ng-disabled=\"loading\"><rcm-translate>BTN_DELETE_FILE</rcm-translate></button>\\n<button class=\"button secondary hollow float-left deselect-all\" data-ng-click=\"deselectSources()\" data-ng-disabled=\"loading\"><rcm-translate>BTN_DESELECT_ALL</rcm-translate></button>\\n<button class=\"button primary float-right select-file\" data-ng-click=\"saveSources()\" data-ng-disabled=\"loading\"><rcm-translate>BTN_SELECT_FILE</rcm-translate></button>');\n$templateCache.put('rc-media-gallery-zf.tpl.html','<div class=\"rcm-gallery\" >\\n\\n    <alert class=\"message\" data-ng-repeat=\"alert in alerts\" type=\"alert.type\" close=\"closeAlert($index)\">{{alert.msg}}</alert>\\n\\n    <div data-ng-show=\"loading\" class=\"loading-overlay\">\\n        <div device-detector class=\"is-not-ie\">\\n            <webicon class=\"loading-icon\" icon=\"{{loadIcon}}\"></webicon>\\n        </div>\\n        <div device-detector class=\"is-ie\">\\n            <div class=\\'loading-icon ripple-css\\'><div></div><div></div></div>\\n        </div>\\n    </div>\\n\\n    <div class=\"gallery-overlay\" scrollbar=\"{autoUpdate: true}\">\\n\\n        <div class=\"gallery-sources\" data-ng-show=\"sources.length > 0\">\\n            <a data-ng-repeat=\"source in sources | orderBy:order:true\"\\n               href=\"\"\\n               class=\"thumbnail-block\"\\n               data-ng-class=\"{\\'selected\\': source.activeClass}\"\\n               data-ng-click=\"selectSource(source)\">\\n                <div class=\"thumbnail\"\\n                     data-ng-style=\"{\\'background-image\\':\\'url({{rcMediaApi.sourceUrl + source[rcMediaApi.sourceUrlKey]}})\\', \\'background-repeat\\': \\'no-repeat\\', \\'background-position\\': \\'center center\\', \\'background-size\\': \\'contain\\'}\"\\n                     tooltip-placement=\"bottom\"\\n                     tooltip-html-unsafe=\"{{source.tooltipTitle}}\"\\n                ></div>\\n            </a>\\n\\n            <button type=\"button\" class=\"button secondary float-center load-more\" data-ng-show=\"loadMore\" data-ng-click=\"loadMoreSources()\" data-ng-disabled=\"loading\">\\n                <i class=\"fa fa-plus\"></i>\\n                <rcm-translate>BTN_SHOW_MORE</rcm-translate>\\n            </button>\\n        </div>\\n\\n        <div class=\"gallery-empty\" data-ng-hide=\"sources.length || loading\">\\n            <div class=\"center-content\">\\n                <h4><rcm-translate>TITLE_EMPTY_GALLERY</rcm-translate></h4>\\n                <p><rcm-translate>SUB_TITLE_EMPTY_GALLERY</rcm-translate></p>\\n            </div>\\n        </div>\\n    </div>\\n</div>');\n$templateCache.put('rc-media-upload-controls-zf.tpl.html','<div data-ng-show=\"rcMediaApi.upload.currentState==\\'selectFiles\\'\">\\n    <button class=\"button secondary hollow float-left\" data-ng-click=\"resetUploadFile(true)\"><rcm-translate>BTN_BACK_GALLERY</rcm-translate></button>\\n</div>\\n\\n<div data-ng-show=\"rcMediaApi.upload.currentState==\\'cropImage\\'\">\\n    <button class=\"button primary float-right\" data-ng-click=\"uploadFile()\"><rcm-translate>BTN_SAVE</rcm-translate></button>\\n    <button class=\"button hollow secondary float-right\" data-ng-click=\"resetUploadFile()\"><rcm-translate>BTN_CANCEL</rcm-translate></button>\\n</div>\\n\\n<div data-ng-show=\"rcMediaApi.upload.currentState==\\'progressFiles\\'\">\\n    <button class=\"button secondary float-right\" data-ng-click=\"cancelUploadFile()\"><rcm-translate>BTN_CANCEL</rcm-translate></button>\\n</div>\\n');\n$templateCache.put('rc-media-upload-zf.tpl.html','<div class=\"rcm-upload\">\\n\\n  <alert class=\"message\" data-ng-repeat=\"alert in alerts\" type=\"alert.type\" close=\"closeAlert($index)\">{{alert.msg}}</alert>\\n\\n  <div data-ng-show=\"currentState==\\'selectFiles\\'\" class=\"rcm-dropzone\"\\n       ngf-drop\\n       data-ng-model=\"file.source\"\\n       ngf-change=\"changeFiles($files, $file, $newFiles, $duplicateFiles, $invalidFiles, $event)\"\\n       ngf-drag-over-class=\"dragover\"\\n       ngf-multiple=\"multiple\"\\n       ngf-accept=\"{{accept}}\"\\n       ngf-pattern=\"{{pattern}}\"\\n       ngf-min-width=\"minWidth\"\\n       ngf-min-height=\"minHeight\"\\n       ngf-fix-orientation=\"fixOrientation\"\\n  >\\n\\n    <div class=\"select-file\" >\\n      <svg width=\"150\" height=\"150\" version=\"1.1\" id=\"rcm_upload_svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\\n           x=\"0px\" y=\"0px\" viewBox=\"0 0 23 20.5\" style=\"enable-background:new 0 0 23 20.5;\" xml:space=\"preserve\"\\n      >\\n        <g id=\"rcm_upload_svg_arrow\">\\n\\t      <line id=\"rcm_upload_svg_line\" class=\"st0\" x1=\"11.5\" y1=\"20.5\" x2=\"11.5\" y2=\"7.5\"/>\\n\\t      <polyline id=\"rcm_upload_svg_point\" class=\"st1\" points=\"8.5,10.5 11.5,7.5 14.5,10.5 \\t\"/>\\n        </g>\\n        <path\\n          id=\"rcm_upload_svg_cloud\"\\n          class=\"st1\"\\n          d=\"M15.5,15.5h3c2.2,0,4-1.8,4-4c0-2.2-1.8-4-4-4c-0.3-3.9-3.5-7-7.5-7c-4,0-7.3,3.2-7.5,7.1c-1.7,0.4-3,2-3,3.9c0,2.2,1.8,4,4,4h3\"\\n        />\\n      </svg>\\n\\n      <h3><rcm-translate>TITLE_DRAG_FILE</rcm-translate></h3>\\n      <p class=\"lead\"><rcm-translate>SUB_TITLE_DRAG_FILE</rcm-translate></p>\\n\\n      <button ngf-select\\n              data-ng-model=\"file.source\"\\n              ngf-change=\"changeFiles($files, $file, $newFiles, $duplicateFiles, $invalidFiles, $event)\"\\n              ngf-multiple=\"multiple\"\\n              ngf-accept=\"{{accept}}\"\\n              ngf-pattern=\"{{pattern}}\"\\n              ngf-min-width=\"minWidth\"\\n              ngf-min-height=\"minHeight\"\\n              type=\"button\"\\n              class=\"button primary large\"\\n      >\\n        <rcm-translate>BTN_BROWSE_FILE</rcm-translate>\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\"crop-area\" data-ng-if=\"currentState==\\'cropImage\\'\">\\n    <div>\\n      <canvas\\n              height=\"{{cropArea.height}}px\"\\n              width=\"{{cropArea.width}}px\"\\n              min-width=\"cropArea.minWidth\"\\n              min-height=\"cropArea.minHeight\"\\n              id=\"canvas\"\\n              img-cropper\\n              img-src=\"{imageData: (file.source | ngfDataUrl), fileType: file.source.type}\"\\n              img-dst=\"file.destDataUrl\"\\n              crop-width=\"cropArea.cropWidth\"\\n              crop-height=\"cropArea.cropHeight\"\\n              keep-aspect=\"cropArea.keepAspect\"\\n              enforce-crop-aspect=\"cropArea.enforceCropAspect\"\\n              touch-radius=\"cropArea.touchRadius\"\\n              color=\"{{cropArea.color}}\"\\n              color-drag=\"{{cropArea.colorDrag}}\"\\n              color-bg=\"{{cropArea.colorBg}}\"\\n              color-crop-bg=\"{{cropArea.colorCropBg}}\"\\n      >\\n      </canvas>\\n    </div>\\n  </div>\\n\\n  <div data-ng-show=\"currentState==\\'progressFiles\\'\" class=\"preview-file\" >\\n\\n    <div data-ng-show=\"loading\" class=\"loading-overlay\">\\n      <div device-detector class=\"is-not-ie\">\\n        <webicon class=\"loading-icon\" icon=\"{{loadIcon}}\"></webicon>\\n      </div>\\n      <div device-detector class=\"is-ie\">\\n        <div class=\\'loading-icon ripple-css\\'><div></div><div></div></div>\\n      </div>\\n    </div>\\n\\n    <img class=\"float-center\" width=\"300\" height=\"300\" data-ng-src=\"{{file.destDataUrl}}\" alt=\"\">\\n  </div>\\n</div>');\n$templateCache.put('rc-media-search-zf.tpl.html','<div class=\"rcm-search input-group\">\\n  <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span>\\n  <input type=\"text\" class=\"form-control\" data-ng-model=\"search\" placeholder=\"Search ...\">\\n</div>');\n$templateCache.put('rc-media-select.tpl.html','<div class=\"rcm-select\">\\n    <div class=\"preview-gallery-overlay\">\\n        <ul class=\"rcm-preview-gallery\" data-ng-show=\"media.sourcesPreview.length\">\\n            <li data-ng-repeat=\"source in media.sourcesPreview\" class=\"image\">\\n                <a href=\"\" data-ng-mouseenter=\"sourcePreviewHover=true\" ng-mouseleave=\"sourcePreviewHover=false\" data-ng-click=\"removeSource($index)\" >\\n                    <div data-ng-style=\"{\\'background-image\\':\\'url({{media.sourceUrl + source[media.sourceUrlKey]}})\\', \\'background-repeat\\': \\'no-repeat\\', \\'background-position\\': \\'center center\\', \\'background-size\\': \\'contain\\'}\">\\n                        <i class=\"rcm-remove\" data-ng-show=\"sourcePreviewHover\"></i>\\n                    </div>\\n                </a>\\n            </li>\\n        </ul>\\n        <input name=\"{{name}}\" id=\"{{id}}\" type=\"{{type}}\" data-ng-model=\"media.sources\" data-ng-update-hidden />\\n        <button type=\"button\" class=\"{{class}}\" data-ng-hide=\"(media.sourcesPreview.length && onetime) || loading\" rcd-open=\"{{theme}}\" rcd-data=\"media\" rcd-template-url=\"rc-media-dialog-zf.tpl.html\" rcd-backdrop=\"true\" rcd-click-close=\"false\" rcd-class=\"dialog-media\" data-ng-transclude></button>\\n    </div>\\n</div>');}]);"],"sourceRoot":"dist"}