{"version":3,"sources":["rc-media.js","rc-media-constants.js","rc-media-gallery-controls.js","rc-media-gallery.js","rc-media-search.js","rc-media-select.js","rc-media-translate.js","rc-media-upload-controls.js","rc-media-upload.js","rc-media-controller.js","rc-media-select-controller.js","rc-media-services.js","tpls-media.js"],"names":["angular","module","constant","SELECT_FILES","CROP_IMAGE","PROGRESS_FILES","directive","$log","$parse","$compile","restrict","require","scope","deleteClick","saveClick","templateUrl","elem","attrs","rcmTemplateUrl","link","rcMediaApi","loading","deleteSources","then","response_success","response_error","$parent","$applyAsync","deselectSources","saveSources","galleryControlsElement","element","$window","$timeout","sources","seletedSources","order","multiple","search","loadIcon","uploadClick","alerts","loadMore","isDefined","add_alert","type","msg","push","onChangeGalleryLoading","newValue","oldValue","gallery","onChangeSources","debug","onChangeSourcesSelected","onChangeGalleryResult","isObject","result","message","selectSource","source","index","sourcesSelected","loadMoreSources","length","closeAlert","splice","galleryElement","initMediaGallery","$watchCollection","$watch","value","onSearch","newVal","oldVal","searchSources","searchElement","initMediaSearch","transclude","theme","name","id","class","onetime","single","media","config","initSources","controller","rcmSelect","rcMedia","ref","html","text","getLocalizedText","replace","file","cancelClick","uploadFile","upload","evt","cancelUploadFile","resetUploadFile","back","uploadControlsElement","accept","pattern","fileName","fields","minWidth","minHeight","fixOrientation","crop","cropArea","change","progress","currentState","$eval","crop_area_default","auto","width","height","cropWidth","cropHeight","keepAspect","keepAspectRatio","enforceCropAspect","touchRadius","color","colorDrag","colorBg","colorCropBg","extend","onChangeUploadLoading","onChangeUploadResult","onChangeUploadFile","onChangeUploadMultiple","onChangeUploadCrop","onChangeUploadProgress","onChangeUploadCurrentState","uploadSelectFiles","$files","isFunction","changeFiles","$file","$newFiles","$duplicateFiles","$invalidFiles","$event","err_text","forEach","file_key","i","$errorMessages","key","uploadElement","initMediaUpload","model","modelSources","sourceUrl","returnModelType","returnModelKey","returnModelPush","sourceId","sourceUrlKey","sourceTitle","sourcesOffsetKey","sourcesLimitKey","sourcesSearchKey","deleteQuery","sourcesQuery","onMediaReady","onUploadUpdateState","onUploadFile","onResetUploadFile","onSaveSources","onDeleteSources","onSelectSource","onSearchSources","onLoadMoreSources","controllerAs","post","attr","rcMediaElement","$scope","$q","$injector","$filter","RCMEDIA_UPLOAD_STATES","rcMediaService","this","debounce_bind_resize","init","deferred","altKey","isUndefined","addBindings","$rcMediaApi","timeStamp","parseInt","Date","getTime","isString","getSources","setUploadState","getSourceTitle","source_title_list","split","find_source","title","join","newState","$state","Upload","get","imageDimensions","dimensions","viewWidth","clientWidth","viewHeight","clientHeight","ratioH","ratioW","ratio","error","err","defer","destDataUrl","$ngfBlobUrl","rename","dataUrltoBlob","ext","$ngfName","slice","lastIndexOf","ngfName","url","getRestUrl","data","reject","added_source","addSource","resolve","progressPercentage","loaded","total","notify","promise","abort","indexOf","activeClass","$source","index_source","sources_query","sources_deferred","all","delete","removeSource","status","defer_all","deleted_index","isArray","values","toString","bindResize","tooltipTitle","new_source","copy","map","a","$model","$search","cancel","triggerHandler","sourcePreviewHover","default_media","per_page","force","searchValue","selectedSources","merge","getSourcesFromModel","$index","getModel","onSortSources","$item","$partFrom","$partTo","$indexFrom","$indexTo","model_sources","include","$resourceProvider","defaults","cancellable","provider","rcMediaProvider","rest","path","locale","defaultText","en-us","TITLE_GALLERY","TITLE_EMPTY_GALLERY","TITLE_UPLOAD","TITLE_DRAG_FILE","SUB_TITLE_EMPTY_GALLERY","SUB_TITLE_DRAG_FILE","BTN_CANCEL","BTN_SAVE","BTN_DELETE_FILE","BTN_DELETE_FILES","BTN_DESELECT_ALL","BTN_SELECT_FILE","BTN_SELECT_FILES","BTN_SHOW_MORE","BTN_BACK_GALLERY","BTN_UPLOAD_FILE","BTN_UPLOAD_FILES","BTN_BROWSE_FILE","UPLOAD_INVALID_FILE","UPLOAD_INVALID_minWidth","UPLOAD_INVALID_minHeight","UPLOAD_INVALID_pattern","UPLOAD_ERROR_SERVER","fr-FR","nl-NL","interfaceText","$get","$http","$locale","localizedText","getRest","item","setLocalizedText","localeId","obj","Error","useLocale","local","toUpperCase","setRest","factory","$resource","rest_url","resource","Media","mediaId","method","cache","query","params","rcMediaResource","service","request","undefined","$cancelRequest","isNumber","$promise","source_id","delete_query","o","dst","Array","baseExtend","objs","deep","ii","keys","Object","j","jj","src","call","arguments","run","$templateCache","put"],"mappings":"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","file":"rc-media.js","sourcesContent":["(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n\n    module.directive(\"rcMedia\", [ function () {\n        return {\n            restrict: \"EA\",\n            require   : ['?ngModel'],\n            scope     : {\n                model        : '=ngModel',\n                modelSources : '=ngModelSources',\n                sourceUrl    : '@rcmSourceUrl',\n                returnModelType : '@rcmReturnModelType',\n                returnModelKey  : '@rcmReturnModelKey',\n                returnModelPush : '=?rcmReturnModelPush',\n                sourceId     : '@rcmSourceId',\n                sourceUrlKey : '@rcmSourceUrlKey',\n                sourceTitle  : '@rcmSourceTitle',\n                sourcesOffsetKey: '@rcmSourcesOffsetKey',\n                sourcesLimitKey : '@rcmSourcesLimitKey',\n                sourcesSearchKey: '@rcmSourcesSearchKey',\n                deleteQuery     : '@rcmDeleteQuery',\n                sourcesQuery    : '@rcmSourcesQuery',\n                onMediaReady       : '&rcmOnMediaReady',\n                onUploadUpdateState: \"&rcmOnUploadUpdateState\",\n                onUploadFile       : '&rcmOnUploadFile',\n                onResetUploadFile  : '&rcmOnResetUploadFile',\n                onSaveSources      : '&rcmOnSaveSources',\n                onDeleteSources    : '&rcmOnDeleteSources',\n                onSelectSource     : '&rcmOnSelectSource',\n                onSearchSources    : '&rcmOnSearchSources',\n                onLoadMoreSources  : '&rcmOnLoadMoreSources'\n            },\n            controller: \"rcMediaCtrl\",\n            controllerAs: \"rcMediaApi\",\n            link: {\n                post: function (scope, elem, attr, controller) {\n                    scope.rcMediaApi.rcMediaElement = angular.element(elem);\n                }\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n\n    var module = angular.module('rcMedia');\n\n    module.constant(\"RCMEDIA_UPLOAD_STATES\", {\n        SELECT_FILES  : \"selectFiles\",\n        CROP_IMAGE   : \"cropImage\",\n        PROGRESS_FILES: \"progressFiles\"\n    });\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n\n    module.directive(\"rcmGalleryControls\", [ '$log', '$parse', '$compile', function ($log, $parse, $compile) {\n        return {\n            restrict  : 'EA',\n            require: \"^rcMedia\",\n            scope     : {\n                deleteClick: '@?rcmDeleteClick',\n                saveClick: '@?rcmSaveClick'\n            },\n            templateUrl: function (elem, attrs) {\n                return attrs.rcmTemplateUrl || 'rc-media-gallery-controls.tpl.html';\n            },\n            link: function (scope, elem, attrs, rcMediaApi) {\n\n                scope.loading = false;\n\n                scope.deleteSources = function () {\n                    scope.loading = true;\n\n                    rcMediaApi.deleteSources().then(\n                        function (response_success) {\n                            scope.loading = false;\n                        },\n                        function (response_error) {\n                            scope.loading = false;\n                        }\n                    );\n\n                    scope.$parent.$parent.$applyAsync($parse(scope.deleteClick));\n                };\n\n                scope.deselectSources = function () {\n                    rcMediaApi.deselectSources();\n                };\n\n                scope.saveSources = function () {\n                    rcMediaApi.saveSources();\n\n                    scope.$parent.$parent.$applyAsync($parse(scope.saveClick));\n                };\n\n\n                // INIT\n                rcMediaApi.galleryControlsElement = angular.element(elem);\n                scope.rcMediaApi = rcMediaApi;\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n    module.directive(\"rcmGallery\", ['$parse', '$compile', '$window', '$timeout', '$log', function ($parse, $compile, $window, $timeout, $log) {\n        return {\n            restrict  : 'EA',\n            require: \"^rcMedia\",\n            scope     : {\n                sources  : '=?ngModel',\n                seletedSources  : '=?rcmSelectedSources',\n                order   : '@?rcmOrder',\n                multiple: '=?rcmMultiple',\n                search  : '@?rcmSearchValue',\n                loadIcon : '@?rcmLoadIcon',\n                uploadClick: '@?rcmUploadClick'\n            },\n            templateUrl: function (elem, attrs) {\n                return attrs.rcmTemplateUrl  || 'rc-media-gallery.tpl.html';\n            },\n            link: function (scope, elem, attrs, rcMediaApi) {\n\n                scope.alerts = [];\n                scope.loading = false;\n                scope.loadMore = false;\n\n                scope.sources = angular.isDefined(scope.sources) ? scope.sources : [];\n                scope.seletedSources = angular.isDefined(scope.seletedSources) ? scope.seletedSources : [];\n                scope.order = angular.isDefined(scope.order) ? scope.order : 'date';\n                scope.multiple = angular.isDefined(scope.multiple) ? scope.multiple : false;\n                scope.search = angular.isDefined(scope.search) ? scope.search : '';\n\n                function add_alert (type, msg) {\n                    scope.alerts.push({type: type, msg: msg});\n                }\n\n                // FUNCTIONS\n                scope.onChangeGalleryLoading = function (newValue, oldValue) {\n\n                    if (newValue === false) {\n                        scope.loadMore = rcMediaApi.gallery.loadMore;\n\n                    }\n\n                    scope.loading = newValue;\n                };\n\n                scope.onChangeSources = function (newValue, oldValue) {\n                    $log.debug('onChangeSources');\n                    if (newValue !== oldValue) {\n                        $log.debug('onChangeSources');\n                        scope.sources = newValue;\n                    }\n                };\n                scope.onChangeSourcesSelected = function (newValue, oldValue) {\n\n                    if (newValue !== oldValue) {\n                        $log.debug('onChangeSourcesSelected');\n                        scope.seletedSources = newValue;\n                    }\n                };\n\n                scope.onChangeGalleryResult = function (newValue, oldValue) {\n\n                    $log.debug('onChangeGalleryResult');\n\n                    if (newValue !== oldValue) {\n                        if (angular.isObject(rcMediaApi.gallery.result) && angular.isDefined(rcMediaApi.gallery.result.message)) {\n                            add_alert('alert', rcMediaApi.gallery.result.message);\n                        }\n                        else {\n                            scope.alerts = [];\n                        }\n                    }\n                };\n\n                scope.selectSource = function (source, index) {\n                    rcMediaApi.selectSource(source, index);\n                    scope.seletedSources = rcMediaApi.sourcesSelected;\n                };\n\n                scope.loadMoreSources = function () {\n\n                    rcMediaApi.loadMoreSources().then(\n                        function (response_success) {\n                            scope.loadMore = response_success.length > 0 ? true : false;\n                        },\n                        function (response_error) {\n\n                        }\n                    );\n                };\n\n                scope.closeAlert = function(index) {\n                    scope.alerts.splice(index, 1);\n                };\n\n                // INIT\n                rcMediaApi.galleryElement = angular.element(elem);\n                rcMediaApi.initMediaGallery( {\n                        loading: scope.loading,\n                        order: scope.order,\n                        multiple: scope.multiple,\n                        loadMore: scope.loadMore\n                    },\n                    scope.search\n                );\n\n\n                scope.rcMediaApi = rcMediaApi;\n\n                scope.$watchCollection('rcMediaApi.sources', scope.onChangeSources);\n                scope.$watchCollection('rcMediaApi.sourcesSelected', scope.onChangeSourcesSelected);\n                scope.$watch('rcMediaApi.gallery.loading', scope.onChangeGalleryLoading);\n                scope.$watch('rcMediaApi.gallery.result',  scope.onChangeGalleryResult);\n\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n    module.directive(\"rcmSearch\", [ '$log', function ($log) {\n        return {\n            restrict  : 'EA',\n            require   : '^rcMedia',\n            scope     : {\n                search: '=?ngModel',\n                value : '@?rcmValue'\n            },\n            templateUrl: function (elem, attrs) {\n                return attrs.rcmTemplateUrl || 'rc-media-search.tpl.html';\n            },\n            link: function (scope, elem, attrs, rcMediaApi) {\n\n                scope.search = angular.isDefined(scope.value) ? scope.value : scope.search;\n                scope.value = angular.isDefined(scope.value) ? scope.value : '';\n\n                scope.onSearch = function (newVal, oldVal) {\n\n                    if (newVal !== oldVal) {\n                        $log.debug('onSearch');\n                        rcMediaApi.search = newVal;\n                        rcMediaApi.searchSources();\n                    }\n                };\n\n                // INIT\n                rcMediaApi.searchElement = angular.element(elem);\n                rcMediaApi.initMediaSearch( scope.search );\n\n                scope.rcMediaApi = rcMediaApi;\n\n                scope.$watch('search', scope.onSearch);\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n    module.directive(\"rcmSelect\", [ '$log', function ($log) {\n        return {\n            restrict  : 'EA',\n            transclude: true,\n            scope     : {\n                theme   : '@?rcmTheme',\n                name    : '@?rcmName',\n                type    : '@?rcmType',\n                id      : '@?rcmId',\n                class   : '@?rcmClass',\n                onetime : '=?rcmOnetime',\n                single  : '=?rcmSingle',\n                media   : '=?rcmMedia',\n                config : '&?rcmConfig',\n                initSources : '&?rcmInitSources'\n            },\n            templateUrl: function (elem, attrs) {\n                return attrs.rcmTemplateUrl  || 'rc-media-select.tpl.html';\n            },\n            controller: \"rcMediaSelectCtrl\",\n            link: function (scope, elem, attrs) {\n\n                scope.theme = angular.isDefined(attrs.rcmSelect) ? attrs.rcmSelect : scope.theme;\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n    module.directive(\"rcmTranslate\", [ '$log', 'rcMedia', function ($log, rcMedia) {\n        return {\n            restrict  : 'EA',\n            require: \"^rcMedia\",\n            link: function (scope, elem, attrs, rcMediaApi) {\n\n                var ref = elem.html();\n\n                if (ref.length > 0) {\n                    var text = rcMedia.getLocalizedText(ref);\n                    elem.html(elem.html().replace(ref, text));\n                }\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n\n    module.directive(\"rcmUploadControls\", [ '$log', '$parse', '$compile', function ($log, $parse, $compile) {\n        return {\n            restrict  : 'EA',\n            require: \"^rcMedia\",\n            scope     : {\n                file  : '=?ngModel',\n                saveClick: '@?rcmSaveClick',\n                cancelClick: '@?rcmCancelClick'\n            },\n            templateUrl: function (elem, attrs) {\n                return attrs.rcmTemplateUrl || 'rc-media-upload-controls.tpl.html';\n            },\n            link: function (scope, elem, attrs, rcMediaApi) {\n\n                scope.file = angular.isDefined(scope.file) ? scope.file : null;\n\n                scope.uploadFile = function () {\n                    scope.file = rcMediaApi.upload.file;\n\n                    return rcMediaApi.uploadFile().then(\n                        function (response_success) {\n                            $log.debug('Upload success');\n                            $log.debug(response_success);\n                            scope.$parent.$parent.$applyAsync($parse(scope.saveClick));\n                        },\n                        function (response_error) {\n                            $log.debug('Upload error');\n                            $log.debug(response_error);\n                        },\n                        function (evt) {\n                            $log.debug(evt);\n                        }\n                    );\n                };\n\n                scope.cancelUploadFile = function () {\n                    rcMediaApi.cancelUploadFile();\n                };\n\n                scope.resetUploadFile = function (back) {\n                    scope.file = null;\n                    rcMediaApi.resetUploadFile();\n\n                    if (back === true) {\n                        scope.$parent.$parent.$applyAsync($parse(scope.cancelClick));\n                    }\n                };\n\n                // INIT\n                rcMediaApi.uploadControlsElement = angular.element(elem);\n                scope.rcMediaApi = rcMediaApi;\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n    module.directive(\"rcmUpload\", [ 'rcMedia', '$log', '$parse', function (rcMedia, $log, $parse) {\n        return {\n            restrict  : 'EA',\n            require: \"^rcMedia\",\n            scope     : {\n                file      : '=?ngModel',\n                multiple  : '=?rcmMultiple',\n                accept    : '@?rcmAccept',\n                pattern   : '@?rcmPattern',\n                fileName  : '@?rcmFileName',\n                fields    : '@rcmFields',\n                minWidth  : '=?rcmMinWidth',\n                minHeight : '=?rcmMinHeight',\n                fixOrientation: '=?rcmFixOrientation',\n                crop      : '=?rcmCrop',\n                cropArea  : '=?rcmCropArea',\n                loadIcon  : '@?rcmLoadIcon',\n                change    : '@?rcmChange'\n            },\n            templateUrl: function (elem, attrs) {\n                return attrs.rcmTemplateUrl || 'rc-media-upload.tpl.html';\n            },\n            link: function (scope, elem, attrs, rcMediaApi) {\n\n                scope.alerts = [];\n                scope.loading = false;\n                scope.progress = 0;\n                scope.currentState = '';\n\n                scope.file = angular.isDefined(scope.file) ? scope.file : rcMediaApi.resetUploadFile();\n                scope.multiple = angular.isDefined(scope.multiple) ? scope.multiple : false;\n                scope.accept = angular.isDefined(scope.accept) ? scope.accept : '*/*';\n                scope.pattern = angular.isDefined(scope.pattern) ? scope.pattern : '*/*';\n                scope.fileName = angular.isDefined(scope.fileName) ? scope.fileName : '';\n                scope.fields = angular.isDefined(scope.fields) ? scope.$eval(scope.fields) : {};\n                scope.minWidth = angular.isDefined(scope.minWidth) ? scope.minWidth : 0;\n                scope.minHeight = angular.isDefined(scope.minHeight) ? scope.minHeight : 0;\n                scope.fixOrientation = angular.isDefined(scope.fixOrientation) ? scope.fixOrientation : false;\n\n                scope.crop = angular.isDefined(scope.crop) ? scope.crop : true;\n\n                var crop_area_default = {\n                    auto: true,\n                    width: scope.minWidth,\n                    height: scope.minHeight,\n                    minWidth: scope.minWidth,\n                    minHeight: scope.minHeight,\n                    cropWidth: 0,\n                    cropHeight: 0,\n                    keepAspect: true,\n                    keepAspectRatio: false,\n                    enforceCropAspect: false,\n                    touchRadius: 10,\n                    color: 'rgba(118, 118, 118, 0.8)',\n                    colorDrag: 'rgba(118, 118, 118, 0.8)',\n                    colorBg: 'rgba(200, 200, 200, 0.8)',\n                    colorCropBg: 'rgba(118, 118, 118, 0.8)'\n                };\n\n\n                function add_alert (type, msg) {\n                    scope.alerts.push({type: type, msg: msg});\n                }\n\n                scope.cropArea = angular.isObject(scope.cropArea) ? angular.extend(crop_area_default, scope.cropArea)  : crop_area_default;\n\n                // FUNCTIONS\n                scope.onChangeUploadLoading = function (newValue, oldValue) {\n                    scope.loading = newValue;\n                };\n\n                scope.onChangeUploadResult = function (newValue, oldValue) {\n\n                    $log.debug('onChangeUploadResult');\n\n                    if (newValue !== oldValue) {\n                        if (angular.isObject(rcMediaApi.upload.result) && angular.isDefined(rcMediaApi.upload.result.message)) {\n                            add_alert('alert', rcMediaApi.upload.result.message);\n                        }\n                        else {\n                            scope.alerts = [];\n                        }\n                    }\n                };\n\n                scope.onChangeUploadFile = function (newValue, oldValue) {\n                    if (newValue !== oldValue) {\n                        $log.debug('onChangeUploadFile');\n                        scope.file = newValue;\n                    }\n                };\n\n                scope.onChangeUploadMultiple = function (newValue, oldValue) {\n                    if (newValue !== oldValue) {\n                        $log.debug('onChangeUploadMultiple');\n                        scope.multiple = newValue;\n                    }\n                };\n\n                scope.onChangeUploadCrop = function (newValue, oldValue) {\n                    if (newValue !== oldValue) {\n                        $log.debug('onChangeUploadCrop');\n                        scope.crop = newValue;\n                    }\n                };\n\n                scope.onChangeUploadProgress = function (newValue, oldValue) {\n                    if (newValue !== oldValue) {\n                        $log.debug('onChangeUploadProgress');\n                        scope.progress = newValue;\n                    }\n                };\n\n                scope.onChangeUploadCurrentState = function (newValue, oldValue) {\n                    $log.debug('onChangeUploadCurrentState');\n\n                    angular.extend(scope.cropArea, rcMediaApi.upload.cropArea);\n                    scope.currentState = newValue;\n                };\n\n                scope.uploadSelectFiles = function ($files) {\n                    scope.alerts = [];\n\n                    var upload = rcMediaApi.uploadSelectFiles($files);\n\n                    if (angular.isObject(upload) && angular.isFunction(upload.then)) {\n                        upload.then(\n                            function (response_success) {\n                                scope.$parent.$parent.$applyAsync($parse(scope.change));\n                            },\n                            function (response_error) {\n                                $log.debug('Upload error');\n                                $log.debug(response_error);\n                            },\n                            function (evt) {\n                                $log.debug(evt);\n                            }\n                        );\n                    }\n                };\n\n                scope.changeFiles = function ($files, $file, $newFiles, $duplicateFiles, $invalidFiles, $event) {\n\n                    if ($invalidFiles.length > 0) {\n                        var err_text = rcMedia.getLocalizedText('UPLOAD_INVALID_FILE');\n\n                        angular.forEach($invalidFiles, function (file, file_key) {\n                            if (file_key > 0) {\n                                err_text += '\\r\\n';\n                            }\n                            var i = 0;\n                            angular.forEach(file.$errorMessages, function (value, key) {\n\n                                if (i > 0 ) {\n                                    err_text += ', ';\n                                }\n                                else {\n                                    err_text += ' ';\n                                }\n                                if (value === true) {\n                                    err_text += rcMedia.getLocalizedText('UPLOAD_INVALID_' + key);\n\n                                    switch (key) {\n                                        case 'minHeight':\n                                            err_text += ' ' + rcMediaApi.upload.minHeight + 'px';\n                                            break;\n                                        case 'minWidth':\n                                            err_text += ' ' + rcMediaApi.upload.minWidth + 'px';\n                                            break;\n                                        case 'pattern':\n                                            break;\n                                    }\n                                }\n                                i++;\n                            });\n                        });\n\n\n                        add_alert('alert', err_text);\n                    }\n                    else if ($files.length > 0) {\n                        scope.uploadSelectFiles($files);\n                    }\n                };\n\n                scope.closeAlert = function(index) {\n                    scope.alerts.splice(index, 1);\n                };\n\n                // INIT\n                rcMediaApi.uploadElement = angular.element(elem);\n                rcMediaApi.initMediaUpload( {\n                    multiple : scope.multiple,\n                    accept   : scope.accept,\n                    pattern  : scope.pattern,\n                    fileName : scope.fileName,\n                    fields   : scope.fields,\n                    minWidth : scope.minWidth,\n                    minHeight: scope.minHeight,\n                    crop     : scope.crop,\n                    cropArea : scope.cropArea,\n                    file     : scope.file\n                } );\n\n                scope.rcMediaApi = rcMediaApi;\n\n                scope.$watch('rcMediaApi.upload.file',      scope.onChangeUploadFile);\n                scope.$watch('rcMediaApi.upload.multiple',  scope.onChangeUploadMultiple);\n                scope.$watch('rcMediaApi.upload.crop',      scope.onChangeUploadCrop);\n                scope.$watch('rcMediaApi.upload.progress',  scope.onChangeUploadProgress);\n                scope.$watch('rcMediaApi.upload.loading',   scope.onChangeUploadLoading);\n                scope.$watch('rcMediaApi.upload.result',    scope.onChangeUploadResult);\n                scope.$watch('rcMediaApi.upload.currentState', scope.onChangeUploadCurrentState);\n            }\n        };\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n    module.controller(\"rcMediaCtrl\", [\n        '$scope',\n        '$q',\n        '$window',\n        '$injector',\n        '$filter',\n        '$log',\n        '$timeout',\n        'RCMEDIA_UPLOAD_STATES',\n        'rcMedia',\n        'rcMediaService',\n        function ($scope, $q, $window, $injector, $filter, $log, $timeout, RCMEDIA_UPLOAD_STATES, rcMedia, rcMediaService) {\n\n        var rcMediaApi = this;\n        var debounce_bind_resize;\n\n        this.rcMediaElement = null;\n\n        /**\n         * Init Controller\n         */\n        this.init = function () {\n            $log.debug('rcMedia Init');\n\n            //Set default upload\n            this.upload = {\n                multiple: false,\n                accept: '*/*',\n                pattern: '*/*',\n                fileName: '',\n                fields: {},\n                minWidth: 0,\n                minHeight: 0,\n                fixOrientation: false,\n                crop: true,\n                cropArea: {\n                    auto: true\n                },\n                file: {},\n                loading: false,\n                result: null,\n                progress: 0,\n                currentState: '',\n                deferred: null,\n                uploadFile: null\n            };\n\n            this.search = '';\n\n            this.sourceUrl      = angular.isDefined($scope.sourceUrl) ? $scope.sourceUrl : '';\n            this.sourceId       = angular.isDefined($scope.sourceId) ? $scope.sourceId : 'id';\n            this.sourceUrlKey   = angular.isDefined($scope.sourceUrlKey) ? $scope.sourceUrlKey : 'source_url';\n            this.sourceTitle    = angular.isDefined($scope.sourceTitle) ? $scope.sourceTitle : 'title.rendered';\n\n            this.returnModelType  = angular.isDefined($scope.returnModelType) ? $scope.returnModelType : 'string';\n            this.returnModelKey   = angular.isDefined($scope.returnModelKey) ? $scope.returnModelKey : this.sourceId;\n            this.returnModelPush   = angular.isDefined($scope.returnModelPush) ? $scope.returnModelPush : false;\n\n            this.altKey = angular.isDefined($scope.altKey) ? $scope.altKey : 'alt_text';\n\n            this.accept         = angular.isDefined($scope.accept) ? $scope.accept : 'image/*';\n\n            this.sourcesLimitKey = angular.isDefined($scope.sourcesLimitKey) ? $scope.sourcesLimitKey : 'limit';\n            this.sourcesOffsetKey = angular.isDefined($scope.sourcesOffsetKey) ? $scope.sourcesOffsetKey : 'offset';\n            this.sourcesSearchKey = angular.isDefined($scope.sourcesSearchKey) ? $scope.sourcesSearchKey : 'search';\n            this.sourcesQuery = angular.isDefined($scope.sourcesQuery) ? $scope.$eval($scope.sourcesQuery) : {};\n            this.deleteQuery = angular.isDefined($scope.deleteQuery) ? $scope.$eval($scope.deleteQuery) : {};\n\n            this.sources        = angular.isDefined(this.sources) ? this.sources : [];\n            this.sourcesSelected = [];\n\n\n            if (angular.isUndefined(this.sourcesQuery[this.sourcesLimitKey])) {\n                this.sourcesQuery[this.sourcesLimitKey] = 10;\n            }\n\n            if (angular.isUndefined(this.sourcesQuery[this.sourcesOffsetKey])) {\n                this.sourcesQuery[this.sourcesOffsetKey] = 0;\n            }\n\n            if (angular.isUndefined(this.sourcesQuery[this.sourcesSearchKey])) {\n                this.sourcesQuery[this.sourcesSearchKey] = '';\n            }\n\n\n            this.addBindings();\n\n            $scope.onMediaReady({$rcMediaApi: this});\n        };\n\n\n        this.timeStamp = function() {\n            return parseInt(new Date().getTime() / 1000);\n        };\n\n        /**\n         * Function to execute when init Media Gallery.\n         */\n        this.initMediaGallery = function ( gallery, search ) {\n            $log.debug('initMediaGallery');\n\n            //Set default gallery\n            this.gallery = {\n                result: null,\n                loading: false,\n                loadMore: false,\n                multiple: false,\n                order: 'date'\n            };\n\n            if (angular.isObject(gallery)) {\n                angular.extend(this.gallery, gallery);\n            }\n\n            if (angular.isString(search) && search.length > 0) {\n                this.search = search;\n                this.searchSources();\n            }\n            else {\n                this.getSources(this.sourcesQuery);\n            }\n        };\n\n        /**\n        * Function to execute when init Media Search.\n        */\n        this.initMediaSearch = function ( value ) {\n            $log.debug('initMediaSearch');\n\n            if (angular.isString(value) && value.length > 0) {\n                this.search = value;\n                this.searchSources();\n            }\n        };\n\n\n        /**\n         * Function to execute when init Media Upload.\n         *\n         * @param upload\n         */\n        this.initMediaUpload = function ( upload ) {\n            $log.debug('initMediaUpload');\n\n            if (angular.isObject(upload)) {\n                angular.extend(this.upload, upload);\n            }\n\n\n            this.setUploadState(RCMEDIA_UPLOAD_STATES.SELECT_FILES);\n        };\n\n\n        /**\n         * Function return the source title by expression\n         *\n         * @param source\n         * @param expression\n         * @returns {*}\n         */\n        this.getSourceTitle = function( source ) {\n\n            var source_title_list = this.sourceTitle.split('.');\n            var find_source = source;\n\n            for(var i = 0; i < source_title_list.length - 1; i++) {\n                var elem = source_title_list[i];\n                if( !find_source[elem] ) {\n                    find_source[elem] = {};\n                }\n\n                find_source = find_source[elem];\n            }\n\n            var title = find_source[source_title_list[source_title_list.length - 1]];\n\n            if (title) {\n                return title.split('_').join(' ');\n            }\n\n            return '';\n        };\n\n\n        /**\n         * Set upload new state\n         *\n         * @param newState\n         * @returns {string|*}\n         */\n        this.setUploadState = function (newState) {\n            if (newState && newState !== this.upload.currentState) {\n                $scope.onUploadUpdateState({$state: newState});\n\n                this.upload.currentState = newState;\n            }\n\n            return this.upload.currentState;\n        };\n\n        /**\n         * Upload Select File.\n         *\n         * @param $files\n         */\n        this.uploadSelectFiles = function ($files) {\n\n            //Attention multiple file crop not supported.\n\n            if ( $files.length > 0 ) {\n                $log.debug('Upload selectFiles');\n                $log.debug($files);\n\n                if ( rcMediaApi.upload.multiple === false && rcMediaApi.upload.crop === true ) {\n                    $log.debug('Upload Crop');\n                    try {\n                        var Upload = $injector.get('Upload');\n\n                        /* Get image file dimensions*/\n                        Upload.imageDimensions($files[0]).then(\n                            function(dimensions){\n\n                                    if ( angular.isDefined(rcMediaApi.uploadElement) &&\n                                        angular.isDefined(rcMediaApi.upload.cropArea.auto) &&\n                                        rcMediaApi.upload.cropArea.auto === true\n                                    ) {\n\n                                        var viewWidth = rcMediaApi.uploadElement[0].clientWidth;\n                                        var viewHeight = rcMediaApi.uploadElement[0].clientHeight;\n                                        var ratioH = dimensions.height / viewHeight;\n                                        var ratioW = dimensions.width / viewWidth;\n                                        var ratio;\n\n                                        if (ratioH >= ratioW) {\n                                            ratio = ratioH;\n                                        }\n                                        else {\n                                            ratio = ratioW;\n                                        }\n\n                                        if (!rcMediaApi.upload.cropArea.cropHeight) {\n                                            if (rcMediaApi.upload.cropArea.keepAspect === true) {\n                                                rcMediaApi.upload.cropArea.cropHeight = rcMediaApi.upload.minHeight;\n                                            }\n                                            else {\n                                                rcMediaApi.upload.cropArea.cropHeight = dimensions.height;\n                                            }\n                                        }\n\n                                        if (!rcMediaApi.upload.cropArea.cropWidth) {\n                                            if (rcMediaApi.upload.cropArea.keepAspect === true) {\n                                                rcMediaApi.upload.cropArea.cropWidth = rcMediaApi.upload.minWidth;\n                                            }\n                                            else {\n                                                rcMediaApi.upload.cropArea.cropWidth = dimensions.width;\n                                            }\n                                        }\n\n                                        rcMediaApi.upload.cropArea.width = viewWidth;\n                                        rcMediaApi.upload.cropArea.height = viewHeight;\n\n\n\n\n                                        rcMediaApi.upload.cropArea.minWidth = rcMediaApi.upload.minWidth / ratio;\n                                        rcMediaApi.upload.cropArea.minHeight = rcMediaApi.upload.minHeight / ratio;\n                                    }\n\n                                    $log.debug('change state to Crop');\n                                    rcMediaApi.setUploadState(RCMEDIA_UPLOAD_STATES.CROP_IMAGE);\n                            },\n                            function (error) {\n                                $log.debug('Upload Dimension Error');\n                                $log.debug(error);\n                            }\n                        );\n                    }\n                    catch(err) {\n                        $log.error(err);\n                    }\n                }\n                else {\n                    //Crop not enable\n                    $log.debug('Upload no crop');\n                    return rcMediaApi.uploadFile();\n                }\n            }\n            \n            return false;\n        };\n\n        /**\n         * Function to upload files.\n         *\n         * @param file\n         */\n        this.uploadFile = function () {\n            $log.debug('upload');\n\n            this.upload.deferred = $q.defer();\n\n            this.upload.loading = true;\n            this.upload.progress = 0;\n            this.setUploadState(RCMEDIA_UPLOAD_STATES.PROGRESS_FILES);\n\n            try {\n                var Upload = $injector.get('Upload');\n\n                if (angular.isUndefined(this.upload.file.destDataUrl) || !this.upload.file.destDataUrl) {\n                    this.upload.file.destDataUrl = this.upload.file.source.$ngfBlobUrl;\n                    Upload.rename(this.upload.file.source, this.upload.file.source.name);\n                }\n                else {\n\n                    this.upload.file.source = Upload.dataUrltoBlob(this.upload.file.destDataUrl, this.upload.file.source.name);\n                }\n\n                $log.debug(this.upload.file.source);\n\n                //Rename File\n                if (this.upload.fileName.length > 0) {\n                    var ext = '';\n\n                    if (angular.isDefined(this.upload.file.source.$ngfName)) {\n                        ext = this.upload.file.source.$ngfName.slice((this.upload.file.source.$ngfName.lastIndexOf(\".\") - 1 >>> 0) + 2);\n                        this.upload.file.source.$ngfName = this.upload.fileName + '.' + ext;\n                    }\n\n                    if (angular.isDefined(this.upload.file.source.ngfName)) {\n                        ext = this.upload.file.source.ngfName.slice((this.upload.file.source.ngfName.lastIndexOf(\".\") - 1 >>> 0) + 2);\n                        this.upload.file.source.ngfName = this.upload.fileName + '.' + ext;\n                    }\n                }\n\n                $log.debug(this.upload.file.source);\n\n                this.upload.uploadFile = Upload.upload({\n                    url  : rcMediaService.getRestUrl(),\n                    file: this.upload.file.source,\n                    fields: this.upload.fields\n                });\n\n                this.upload.uploadFile.then(\n                    function (response_success) {\n                        $log.debug('Upload Success');\n                        rcMediaApi.resetUploadFile();\n\n                        var result;\n\n                        if (angular.isString(response_success.data)) {\n                            rcMediaApi.upload.result = {\n                                message: rcMedia.getLocalizedText('UPLOAD_INVALID_FILE')\n                            };\n\n                            result = rcMediaApi.upload.deferred.reject(response_success);\n                        }\n                        else {\n                            //Add source to sources;\n                            var added_source = rcMediaApi.addSource(response_success.data);\n\n                            //@ added source\n                            rcMediaApi.selectSource(added_source);\n\n\n                            $scope.onUploadFile({$file: rcMediaApi.upload.file});\n\n                            rcMediaApi.setUploadState(RCMEDIA_UPLOAD_STATES.SELECT_FILES);\n\n                            rcMediaApi.upload.result = null;\n\n                            result = rcMediaApi.upload.deferred.resolve(response_success);\n                        }\n\n                        rcMediaApi.upload.loading = false;\n\n                        return result;\n                    },\n                    function (response_error) {\n                        $log.debug('error status: ' + response_error);\n                        rcMediaApi.resetUploadFile();\n                        rcMediaApi.setUploadState(RCMEDIA_UPLOAD_STATES.SELECT_FILES);\n\n                        rcMediaApi.upload.result = response_error.data;\n                        rcMediaApi.upload.loading = false;\n\n                        rcMediaApi.upload.deferred.reject(response_error);\n                    },\n                    function (evt) {\n                        $log.debug('Progress status');\n                        $log.debug(evt);\n\n                        var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                        rcMediaApi.upload.progress = progressPercentage;\n\n                        rcMediaApi.upload.deferred.notify(progressPercentage);\n                    }\n                );\n            }\n            catch(err) {\n                $log.error(err);\n\n                rcMediaApi.setUploadState(RCMEDIA_UPLOAD_STATES.SELECT_FILES);\n\n                rcMediaApi.upload.deferred.reject();\n            }\n\n            return this.upload.deferred.promise;\n        };\n\n        /**\n         * Cancell upload file\n         */\n        this.cancelUploadFile = function () {\n            this.upload.uploadFile.abort();\n        };\n\n        /**\n         * Function to reset upload file object.\n         *\n         * @returns {{srcFile: null, destDataUrl: string}}\n         */\n        this.resetUploadFile = function () {\n            rcMediaApi.upload.file = {\n                source: null,\n                destDataUrl: ''\n            };\n\n            rcMediaApi.setUploadState(RCMEDIA_UPLOAD_STATES.SELECT_FILES);\n\n            $scope.onResetUploadFile({$file: rcMediaApi.upload.file});\n\n            return rcMediaApi.upload.file;\n        };\n\n        /**\n         * Function to instantiate and check the sources selected.\n         *\n         * @param source\n         */\n        this.selectSource = function (source) {\n            $log.debug('selectSource');\n\n            if ( rcMediaApi.sourcesSelected.indexOf(source) === -1 ) {\n                if (rcMediaApi.gallery.multiple) {\n                    source.activeClass = true;\n                    rcMediaApi.sourcesSelected.push(source);\n                } else {\n                    angular.forEach(rcMediaApi.sources, function (value, key) {\n                        rcMediaApi.sources[key].activeClass = false;\n                    });\n                    source.activeClass = true;\n                    rcMediaApi.sourcesSelected = [];\n                    rcMediaApi.sourcesSelected.push(source);\n                }\n                $scope.onSelectSource({$source: source});\n            } else {\n                var index_source = rcMediaApi.sources.indexOf(source);\n\n                angular.forEach(rcMediaApi.sourcesSelected, function (value, key) {\n                    if (value === source) {\n                        if (index_source !== -1) {\n                            rcMediaApi.sources[index_source].activeClass = false;\n                        }\n                        rcMediaApi.sourcesSelected.splice(key, 1);\n                    }\n                });\n            }\n        };\n\n\n        /**\n         * Function to Deselect all selected source.\n         *\n         * @returns {{srcFile: null, destDataUrl: string}}\n         */\n        this.deselectSources = function () {\n            angular.forEach(rcMediaApi.sources, function (value, key) {\n                rcMediaApi.sources[key].activeClass = false;\n            });\n\n            rcMediaApi.sourcesSelected = [];\n        };\n\n\n        this.getSources = function ( sources_query ) {\n            $log.debug('getGallerySources');\n\n            this.gallery.loading = true;\n\n            var sources_deferred = rcMediaService.get(sources_query, true);\n\n            sources_deferred.then(\n                function (response_success) {\n                    if (response_success.length > 0) {\n                        angular.forEach(response_success, function (value, key) {\n                            rcMediaApi.addSource(value);\n                        });\n                    }\n\n                    rcMediaApi.gallery.loadMore = rcMediaApi.sources.length > 0 ? true : false;\n                    rcMediaApi.gallery.loading = false;\n                    rcMediaApi.gallery.result = null;\n                },\n                function (response_error) {\n                    rcMediaApi.sources = [];\n                    rcMediaApi.gallery.loadMore = rcMediaApi.sources.length > 0 ? true : false;\n                    rcMediaApi.gallery.loading = false;\n                    rcMediaApi.gallery.result = response_error.data;\n                }\n            );\n\n            return sources_deferred;\n        };\n\n        /**\n         * Function to instantiate delete the selected values.\n         */\n        this.deleteSources = function ()  {\n            $log.debug('deleteSources');\n\n            var all = [];\n            rcMediaApi.gallery.result = null;\n\n            angular.forEach(this.sourcesSelected, function (source, key) {\n\n                all.push(rcMediaService.delete(source[rcMediaApi.sourceId], rcMediaApi.deleteQuery).then(\n                    function (response_success) {\n                        rcMediaApi.removeSource(source);\n                        $scope.onDeleteSources({$source: source} );\n                    },\n                    function (response_error) {\n\n                        //Delete not found remove in sources\n                        if (response_error.status === 404) {\n                            rcMediaApi.removeSource(source);\n                            $scope.onDeleteSources({$source: source} );\n                        }\n                        else {\n                            rcMediaApi.gallery.result = response_error.data;\n                        }\n                    }\n                ));\n            });\n\n            this.gallery.loading = true;\n\n            var defer_all = $q.all(all);\n\n            defer_all.then(\n                function (response_success) {\n                    rcMediaApi.gallery.loading = false;\n                },\n                function (response_error) {\n                    rcMediaApi.gallery.loading = false;\n                }\n            );\n\n            return defer_all;\n        };\n\n\n        /**\n         * Remove item in sources and in selected sources\n         *\n         * @param source\n         */\n        this.removeSource = function ( source ) {\n\n            var key = rcMediaApi.sourceId;\n            var value = source[rcMediaApi.sourceId];\n\n            //Remove in source\n            var deleted_index = rcMediaService.indexOf(rcMediaApi.sources, value, key);\n            if (deleted_index !== -1) {\n                rcMediaApi.sources.splice(deleted_index, 1);\n            }\n\n            //Remove in sourcesSelected\n            deleted_index = rcMediaService.indexOf(rcMediaApi.sourcesSelected, value, key);\n            if (deleted_index !== -1) {\n                rcMediaApi.sourcesSelected.splice(deleted_index, 1);\n            }\n\n            //Remove in modelSources\n            deleted_index = rcMediaService.indexOf($scope.modelSources, value, key);\n            if (deleted_index !== -1) {\n                $scope.modelSources.splice(deleted_index, 1);\n            }\n\n            //Remove in model\n            if (angular.isArray($scope.model)) {\n                deleted_index = $scope.model.indexOf(value);\n                if (deleted_index !== -1) {\n                    $scope.model.splice(deleted_index, 1);\n                }\n            }\n            else if(angular.isString($scope.model)) {\n                var values =  $scope.model.split(',');\n                deleted_index = values.indexOf(value.toString());\n                if (deleted_index !== -1) {\n                    values.splice(deleted_index, 1);\n                }\n                $scope.model = values.join(',');\n            }\n\n            rcMediaApi.bindResize();\n        };\n\n\n        /**\n         * Add item in sources\n         *\n         * @param source\n         */\n        this.addSource = function ( source ) {\n\n            source.tooltipTitle = rcMediaApi.getSourceTitle(source);\n\n            var new_source = angular.copy(source);\n\n\n            new_source[rcMediaApi.sourceUrlKey] += '?' + this.timeStamp();\n            rcMediaApi.sources.push(new_source);\n\n            rcMediaApi.bindResize();\n\n            return new_source;\n        };\n\n\n        /**\n         * Function to instantiate model with the selected values.\n         */\n        this.saveSources = function () {\n            $log.debug('saveSources');\n\n            if (this.sourcesSelected.length > 0) {\n                var model = [];\n\n                if (this.returnModelPush === false) {\n                    $scope.modelSources = [];\n                }\n\n                angular.forEach(rcMediaApi.sourcesSelected, function (value) {\n\n                    //Prevent Duplicate source\n                    if (rcMediaService.indexOf($scope.modelSources, value[rcMediaApi.sourceId], rcMediaApi.sourceId) === -1) {\n                        $scope.modelSources.push(value);\n                    }\n                });\n\n                model = $scope.modelSources.map(function(a) {return a[rcMediaApi.returnModelKey];});\n\n                switch (this.returnModelType) {\n                    case 'string':\n                        $scope.model = model.join(',');\n                        break;\n                    case 'array':\n                        $scope.model = model;\n                        break;\n                }\n\n                $scope.onSaveSources({$model: $scope.model});\n            }\n        };\n\n        /**\n         * Function to load more sources from DB.\n         */\n        this.loadMoreSources = function () {\n            $log.debug('loadMore');\n\n            this.sourcesQuery[this.sourcesOffsetKey] = this.sources.length;\n\n            this.gallery.loading = true;\n\n            var sources_deferred = rcMediaService.get(this.sourcesQuery);\n\n            sources_deferred.then(\n                function (response_success) {\n                    if (response_success.length > 0) {\n                        angular.forEach(response_success, function (value, key) {\n                            rcMediaApi.addSource(value);\n                        });\n                    }\n                    else {\n                        rcMediaApi.gallery.loadMore = false;\n                    }\n                    rcMediaApi.gallery.result = null;\n                    rcMediaApi.gallery.loading = false;\n\n                    $scope.onLoadMoreSources();\n                },\n                function (response_error) {\n                    rcMediaApi.gallery.result = response_error.data;\n                    rcMediaApi.gallery.loading = false;\n                }\n            );\n\n            return sources_deferred;\n        };\n\n        this.searchSources = function () {\n            $log.debug('searchSources');\n\n            this.sourcesQuery[this.sourcesSearchKey] = this.search;\n            this.sourcesQuery[this.sourcesOffsetKey] = 0;\n\n            this.gallery.loading = true;\n\n            var sources_deferred = rcMediaService.get(this.sourcesQuery, true);\n\n            sources_deferred.then(\n                function (response_success) {\n                    if (response_success.length > 0) {\n                        rcMediaApi.sources = [];\n                        angular.forEach(response_success, function (value, key) {\n                            rcMediaApi.addSource(value);\n                        });\n                    }\n                    else {\n                        rcMediaApi.sources = [];\n                    }\n\n                    rcMediaApi.gallery.loadMore = rcMediaApi.sources.length > 0 ? true : false;\n                    rcMediaApi.gallery.result = null;\n                    rcMediaApi.gallery.loading = false;\n\n                    $scope.onSearchSources({$search: rcMediaApi.search});\n                },\n                function (response_error) {\n                    rcMediaApi.sources = [];\n                    rcMediaApi.gallery.loadMore = false;\n                    rcMediaApi.gallery.result = response_error.data;\n                    rcMediaApi.gallery.loading = false;\n                }\n            );\n\n            return sources_deferred;\n        };\n\n        /**\n         *  Force resize event for angular tiny scrollbar after loading hide\n         */\n        this.bindResize = function() {\n\n            if (debounce_bind_resize) {\n                $timeout.cancel(debounce_bind_resize);\n            }\n\n            debounce_bind_resize = $timeout(function() {\n                $log.debug('Bind Resize for scroll');\n                angular.element($window).triggerHandler('resize');\n            }, 300);\n        };\n\n        this.addBindings = function () {\n            $log.debug('addBindings');\n        };\n\n        //Init\n        this.init();\n    }]);\n\n})(angular);\n","(function(angular) {\n    'use strict';\n\n    var module = angular.module('rcMedia');\n\n    module.controller(\"rcMediaSelectCtrl\", [\n        '$scope',\n        '$log',\n        'rcMediaService',\n        function ($scope, $log, rcMediaService) {\n\n            /**\n             * Init Controller\n             */\n            this.init = function () {\n                $log.debug('Media Select Init');\n\n                $scope.sourcePreviewHover = false;\n                $scope.loading = false;\n\n                $scope.media = angular.isDefined($scope.media) ? $scope.media : {};\n                $scope.theme = angular.isDefined($scope.theme) ? $scope.theme : '';\n                $scope.name = angular.isDefined($scope.name) ? $scope.name : 'media_sources';\n                $scope.id = angular.isDefined($scope.id) ? $scope.id : $scope.name + '_select';\n                $scope.type = angular.isDefined($scope.type) ? $scope.type : 'text';\n                $scope.class = angular.isDefined($scope.class) ? $scope.class : '';\n                $scope.onetime = angular.isDefined($scope.onetime) ? $scope.onetime : false;\n                $scope.single = angular.isDefined($scope.single) ? $scope.single : false;\n\n                $scope.initSources = angular.isDefined($scope.initSources) ? $scope.initSources() : [];\n                $scope.config = angular.isDefined($scope.config) ? $scope.config() : {};\n\n                var default_media = {\n                    sourceId: 'id',\n                    sourceUrl: '',\n                    sourceUrlKey: 'source_url',\n                    sourceTitle: 'title.rendered',\n                    returnModelType: 'string',\n                    returnModelKey: 'id',\n                    returnModelPush: false,\n                    sourcesOffsetKey: 'offset',\n                    sourcesLimitKey:  'per_page',\n                    sourcesSearchKey: 'search',\n                    sourcesQuery: {\n                        per_page : 20\n                    },\n                    deleteQuery: {\n                        force: true\n                    },\n                    upload: {\n                        crop: true,\n                        multiple: false,\n                        pattern: 'image/*',\n                        minWidth: 300,\n                        minHeight: 300,\n                        cropArea: {\n                            color: 'rgba(118, 118, 118, 0.8)',\n                            colorDrag: 'rgba(118, 118, 118, 0.8)',\n                            colorBg: 'rgba(200, 200, 200, 0.8)',\n                            colorCropBg: 'rgba(0, 0, 0, 0.6)'\n                        },\n                        loadIcon: 'spinner:clock'\n                    },\n                    gallery: {\n                        order: 'date',\n                        searchValue: '',\n                        multiple: !$scope.single,\n                        selectedSources: [],\n                        loadIcon: 'spinner:ripple'\n                    },\n                    model: [],\n                    sources: []\n                };\n\n                $scope.media = rcMediaService.merge({}, default_media, $scope.media, $scope.config);\n\n                if (!$scope.media.model.length && $scope.media.returnModelType === 'string') {\n                    $scope.media.model = '';\n                }\n\n                if (angular.isDefined($scope.single)) {\n                    $scope.media.gallery.multiple = !$scope.single;\n                }\n\n                $scope.getSourcesFromModel( $scope.initSources );\n\n                $log.debug($scope.media);\n            };\n\n\n            $scope.removeSource = function ($index) {\n\n                $scope.media.sources.splice($index, 1);\n\n                if (angular.isArray($scope.media.model)) {\n                    $scope.media.model.splice($index, 1);\n                }\n                else if(angular.isString($scope.media.model)) {\n                    $scope.media.model = $scope.media.model.split(',');\n                    $scope.media.model.splice($index, 1);\n                    $scope.media.model = $scope.media.model.join(',');\n                }\n            };\n\n\n            $scope.getModel = function () {\n\n                var sources = $scope.media.sources.map(function(a) {return a[$scope.media.returnModelKey];});\n\n                switch ($scope.media.returnModelType) {\n                    case 'string':\n                        $scope.media.model = sources.join(',');\n                        break;\n                    case 'array':\n                        $scope.media.model = sources;\n                        break;\n                }\n            };\n\n\n            $scope.onSortSources = function ($item, $partFrom, $partTo, $indexFrom, $indexTo) {\n\n                $log.debug($scope.media.sources);\n\n                $scope.getModel();\n            };\n\n\n            $scope.getSourcesFromModel = function ( model_sources ) {\n\n                if (!model_sources) {\n                    return;\n                }\n\n                var include = angular.isArray(model_sources) ? model_sources.join(',') : model_sources.toString();\n                var sources = include.split(',');\n\n                if(!include.length ) {\n                    $scope.media.sources = [];\n\n                    $scope.getModel();\n                    return false;\n                }\n\n                var sources_query = angular.copy($scope.media.sourcesQuery);\n                sources_query = angular.extend(sources_query, { include: include });\n\n                $scope.loading = true;\n\n                rcMediaService.get(sources_query).then(\n                    function (response_success) {\n\n                        var new_source = [];\n\n                        angular.forEach(sources, function(value, key) {\n                            var index = rcMediaService.indexOf(response_success, value, $scope.media.returnModelKey);\n\n                            if (index !== -1) {\n                                new_source.push(response_success[index]);\n                            }\n                        });\n\n                        $scope.media.sources = new_source;\n\n                        $scope.getModel();\n\n                        $scope.loading = false;\n                    },\n                    function (response_error) {\n                        $scope.loading = false;\n                    }\n                );\n            };\n\n            //Init\n            this.init();\n        }\n    ]);\n\n})(angular);\n","(function(angular){\n    'use strict';\n\n    // Load module rc-media\n    var module = angular.module('rcMedia');\n\n    //Enable cancellable resource\n    module.config(function($resourceProvider) {\n        $resourceProvider.defaults.cancellable = true;\n    });\n\n    module.provider('rcMedia', [ function rcMediaProvider() {\n\n        this.rest = {\n            url: '',\n            path: '/wp-json/wp/v2/media'\n        };\n\n        this.locale = null;\n\n        // default localized text. cannot be modified.\n        this.defaultText = {\n            'en-us': {\n                TITLE_GALLERY       : 'Gallery',\n                TITLE_EMPTY_GALLERY : 'Your gallery is empty',\n                TITLE_UPLOAD        : 'Upload file',\n                TITLE_DRAG_FILE     : 'Drag files to upload',\n                SUB_TITLE_EMPTY_GALLERY: 'Upload your first file.',\n                SUB_TITLE_DRAG_FILE : 'or',\n                BTN_CANCEL          : 'Cancel',\n                BTN_SAVE            : 'Save',\n                BTN_DELETE_FILE     : 'Delete file',\n                BTN_DELETE_FILES    : 'Delete files',\n                BTN_DESELECT_ALL    : 'Deselect all',\n                BTN_SELECT_FILE     : 'Select file',\n                BTN_SELECT_FILES    : 'Select files',\n                BTN_SHOW_MORE       : 'Show More',\n                BTN_BACK_GALLERY    : 'Back to gallery',\n                BTN_UPLOAD_FILE     : 'Upload file',\n                BTN_UPLOAD_FILES    : 'Upload files',\n                BTN_BROWSE_FILE     : 'Browse a file',\n                UPLOAD_INVALID_FILE : 'Your file is not valid.',\n                UPLOAD_INVALID_minWidth : 'Minimum width',\n                UPLOAD_INVALID_minHeight: 'Minimum height',\n                UPLOAD_INVALID_pattern  : 'File type error',\n                UPLOAD_ERROR_SERVER: 'This file is not supported by server'\n            },\n            'fr-FR': {\n                TITLE_GALLERY       : 'Galerie',\n                TITLE_EMPTY_GALLERY : 'La galerie est vide',\n                TITLE_UPLOAD        : 'Télécharger un fichier',\n                TITLE_DRAG_FILE     : 'Glisser le fichier ici',\n                SUB_TITLE_EMPTY_GALLERY: 'Veuillez charger votre premier fichier.',\n                SUB_TITLE_DRAG_FILE : 'ou',\n                BTN_CANCEL          : 'Annuler',\n                BTN_SAVE            : 'Sauver',\n                BTN_DELETE_FILE     : 'Supprimer le fichier',\n                BTN_DELETE_FILES    : 'Supprimer les fichiers',\n                BTN_DESELECT_ALL    : 'Désélectionner tous',\n                BTN_SELECT_FILE     : 'Sélectionner le fichier',\n                BTN_SELECT_FILES    : 'Sélectionner les fichiers',\n                BTN_SHOW_MORE       : 'Voir plus',\n                BTN_BACK_GALLERY    : 'Revenir à la galerie',\n                BTN_UPLOAD_FILE     : 'Télécharger le fichier',\n                BTN_UPLOAD_FILES    : 'Télécharger les fichiers',\n                BTN_BROWSE_FILE     : 'Choisir un fichier',\n                UPLOAD_INVALID_FILE : 'Votre fichier n\\'est pas valide.',\n                UPLOAD_INVALID_minWidth : 'Largeur minimum',\n                UPLOAD_INVALID_minHeight: 'Hauteur minimum',\n                UPLOAD_INVALID_pattern  : 'Type de fichier erroné',\n                UPLOAD_ERROR_SERVER : 'Ce fichier n\\'est pas pris en charge par le serveur'\n            },\n            'nl-NL': {\n                TITLE_GALLERY       : 'Fotogalerij',\n                TITLE_EMPTY_GALLERY : 'Uw galerij is leeg',\n                TITLE_UPLOAD        : 'File uploaden',\n                TITLE_DRAG_FILE     : 'Zet de file hier neer',\n                SUB_TITLE_EMPTY_GALLERY: 'Upload hier uw eerste file.',\n                SUB_TITLE_DRAG_FILE : 'of',\n                BTN_CANCEL          : 'Annuleren',\n                BTN_SAVE            : 'Opslaan',\n                BTN_DELETE_FILE     : 'File deleten',\n                BTN_DELETE_FILES    : 'Files deleten',\n                BTN_DESELECT_ALL    : 'Alles deselecteren',\n                BTN_SELECT_FILE     : 'File selecteren',\n                BTN_SELECT_FILES    : 'Files selecteren',\n                BTN_SHOW_MORE       : 'Meer zien',\n                BTN_BACK_GALLERY    : 'Terug naar de fotogalerij',\n                BTN_UPLOAD_FILE     : 'File uploaden',\n                BTN_UPLOAD_FILES    : 'Files uploaden',\n                BTN_BROWSE_FILE     : 'File kiezen',\n                UPLOAD_INVALID_FILE : 'Uw file is niet geldig.',\n                UPLOAD_INVALID_minWidth : 'Minimum breedte',\n                UPLOAD_INVALID_minHeight: 'Minimum hoogte',\n                UPLOAD_INVALID_pattern  : 'Verkeerde file type',\n                UPLOAD_ERROR_SERVER  : 'Dit file wordt niet ondersteund door de server'\n            }\n        };\n\n        // localized text which actually being used.\n        this.interfaceText = angular.copy(this.defaultText);\n\n\n\n        this.$get = [ '$http', '$locale', function( $http, $locale ) {\n            var rest = this.rest;\n            var localizedText;\n\n            //Translation\n            if(this.locale) {\n                localizedText = this.interfaceText[this.locale];\n            } else {\n                localizedText = this.interfaceText[$locale.id];\n            }\n\n            if(!localizedText) {\n                localizedText = this.defaultText['en-us'];\n            }\n\n            return {\n                getRest: function() {\n                    return rest;\n                },\n                getLocalizedText: function ( item ) {\n\n                    if (item) {\n                        var text = localizedText[item];\n\n                        return (text) ? text : '';\n                    }\n\n                    return localizedText;\n                }\n            };\n        }];\n\n        /**\n         * Merge with default localized text.\n         * @param localeId a string formatted as languageId-countryId\n         * @param obj localized text object.\n         */\n        this.setLocalizedText = function(localeId, obj) {\n            if(!localeId) {\n                throw new Error('localeId must be a string formatted as languageId-countryId');\n            }\n            if(!this.interfaceText[localeId]) {\n                this.interfaceText[localeId] = {};\n            }\n            this.interfaceText[localeId] = angular.extend(this.interfaceText[localeId], obj);\n        };\n\n        /**\n         * Force to use a special locale id. if localeId is null. reset to user-agent locale.\n         * @param localeId a string formatted as languageId-countryId\n         */\n        this.useLocale = function(localeId) {\n            var local = localeId.split('-');\n\n            if (local.length === 1) {\n                switch (localeId) {\n                    case 'en':\n                        localeId += '-US';\n                        break;\n                    default:\n                        localeId += '-' + localeId.toUpperCase();\n                }\n            }\n\n            this.locale = localeId;\n        };\n\n        this.setRest = function(rest) {\n            this.rest = rest;\n        };\n\n    }]);\n\n\n    //Media Resource\n    module.factory( 'rcMediaResource', [ '$resource', 'rcMedia', function ( $resource, rcMedia ) {\n\n        var rest_url = rcMedia.getRest().url + rcMedia.getRest().path;\n\n        var resource = {\n            Media: $resource(rest_url + '/:mediaId',\n                {mediaId: '@media_id'},\n                {get: {\n                    method: 'GET',\n                    isArray: false,\n                    cache: false\n                }},\n                {query: {\n                    method: 'GET',\n                    params:{},\n                    isArray: true,\n                    cache: false,\n                    cancellable: true\n                }}\n            )\n        };\n\n        return resource;\n\n    }]);\n\n    //Media Service Abstraction\n    module.factory('rcMediaService', ['$log', '$q', 'rcMedia', 'rcMediaResource', function ( $log, $q, rcMedia, rcMediaResource ) {\n\n        var service = {\n\n            getRestUrl: function () {\n                return rcMedia.getRest().url + rcMedia.getRest().path;\n            },\n\n            get: function( sources_query, cancel ){\n\n                //Cancel last request if param true\n                if (cancel === true && this.request !== undefined && angular.isFunction(this.request.$cancelRequest)) {\n\n                    this.request.$cancelRequest();\n                }\n\n                if ( angular.isNumber(sources_query) ) {\n                    sources_query = {mediaId: sources_query};\n\n                    this.request = rcMediaResource.Media.get( sources_query );\n                }\n                else {\n                    if ( !angular.isObject(sources_query) ) {\n                        sources_query = {};\n                    }\n\n                    this.request = rcMediaResource.Media.query( sources_query );\n                }\n\n                return this.request.$promise;\n            },\n\n            delete: function ( source_id, delete_query ) {\n\n                if (angular.isUndefined(delete_query)) {\n                    delete_query = {};\n                }\n\n                angular.extend(delete_query, { mediaId: source_id } );\n\n                return rcMediaResource.Media.delete( delete_query ).$promise;\n            },\n\n            indexOf: function (sources, value, key) {\n\n                if (angular.isUndefined(value) || angular.isUndefined(key) || !angular.isArray(sources)) {\n                    return -1;\n                }\n\n                return sources.map(function(o) { return (value.constructor) (o[key]); }).indexOf(value);\n            },\n\n            merge: function (dst) {\n\n                var slice = [].slice;\n                var isArray = Array.isArray;\n\n                function baseExtend(dst, objs, deep) {\n\n                    for (var i = 0, ii = objs.length; i < ii; ++i) {\n\n                        var obj = objs[i];\n\n                        if (!angular.isObject(obj) && !angular.isFunction(obj)) {\n                            continue;\n                        }\n\n                        var keys = Object.keys(obj);\n\n                        for (var j = 0, jj = keys.length; j < jj; j++) {\n\n                            var key = keys[j];\n                            var src = obj[key];\n\n                            if (deep && angular.isObject(src)) {\n\n                                if (!angular.isObject(dst[key])) {\n                                    dst[key] = isArray(src) ? [] : {};\n                                }\n\n                                baseExtend(dst[key], [src], true);\n                            } else {\n\n                                dst[key] = src;\n                            }\n                        }\n                    }\n\n                    return dst;\n                }\n\n                return baseExtend(dst, slice.call(arguments, 1), true);\n            }\n\n        };\n\n        return service;\n    }]);\n\n})(angular);\n","angular.module('rcMedia').run(['$templateCache', function($templateCache) {$templateCache.put('rc-media-dialog-zf.tpl.html','<rc-media class=\"rc-media\"\\n     rcm-source-url=\"{{rcDialogApi.data.sourceUrl}}\"\\n     rcm-source-url-key=\"{{rcDialogApi.data.sourceUrlKey}}\"\\n     rcm-source-id=\"{{rcDialogApi.data.sourceId}}\"\\n     rcm-source-title=\"{{rcDialogApi.data.sourceTitle}}\"\\n     data-ng-model=\"rcDialogApi.data.model\"\\n     data-ng-model-sources=\"rcDialogApi.data.sources\"\\n     rcm-return-model-type=\"{{rcDialogApi.data.returnModelType}}\"\\n     rcm-return-model-key=\"{{rcDialogApi.data.returnModelKey}}\"\\n     rcm-return-model-push=\"rcDialogApi.data.returnModelPush\"\\n     rcm-delete-query=\"{{rcDialogApi.data.deleteQuery}}\"\\n     rcm-sources-query=\"{{rcDialogApi.data.sourcesQuery}}\"\\n     rcm-sources-offset-key=\"{{rcDialogApi.data.sourcesOffsetKey}}\"\\n     rcm-sources-limit-key=\"{{rcDialogApi.data.sourcesLimitKey}}\"\\n     rcm-sources-search-key=\"{{rcDialogApi.data.sourcesSearchKey}}\"\\n>\\n<div class=\"dialog-header\">\\n    <div class=\"gallery-view\" data-ng-show=\"!selectedView\" >\\n        <h3 class=\"float-left dialog-title\"><rcm-translate>TITLE_GALLERY</rcm-translate></h3>\\n        <button class=\"button secondary hollow float-right dialog-close\" type=\"button\" data-ng-click=\"rcDialogApi.closeDialog()\" aria-label=\"Close reveal\" >\\n            <span aria-hidden=\"true\">&times;</span>\\n        </button>\\n        <button class=\"button primary hollow float-right upload\" type=\"button\" data-ng-show=\"!selectedView\" data-ng-click=\"selectedView=\\'fileUpload\\'\" >\\n            <svg width=\"25\" height=\"25\" version=\"1.1\" id=\"rcm_upload_svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\\n                   x=\"0px\" y=\"0px\" viewBox=\"0 0 23 20.5\" style=\"enable-background:new 0 0 23 20.5;\" xml:space=\"preserve\"\\n              >\\n                <g id=\"rcm_upload_svg_arrow\">\\n                  <line id=\"rcm_upload_svg_line\" class=\"st0\" x1=\"11.5\" y1=\"20.5\" x2=\"11.5\" y2=\"7.5\"/>\\n                  <polyline id=\"rcm_upload_svg_point\" class=\"st1\" points=\"8.5,10.5 11.5,7.5 14.5,10.5 \\t\"/>\\n                </g>\\n                <path\\n                  id=\"rcm_upload_svg_cloud\"\\n                  class=\"st1\"\\n                  d=\"M15.5,15.5h3c2.2,0,4-1.8,4-4c0-2.2-1.8-4-4-4c-0.3-3.9-3.5-7-7.5-7c-4,0-7.3,3.2-7.5,7.1c-1.7,0.4-3,2-3,3.9c0,2.2,1.8,4,4,4h3\"\\n                />\\n            </svg>\\n            <rcm-translate>BTN_UPLOAD_FILE</rcm-translate>\\n        </button>\\n    </div>\\n\\n    <div class=\"upload-view\" data-ng-show=\"selectedView==\\'fileUpload\\'\">\\n        <h3 class=\"float-left dialog-title\" ><rcm-translate>TITLE_UPLOAD</rcm-translate></h3>\\n        <button class=\"button secondary hollow float-right dialog-close\" type=\"button\" data-ng-click=\"rcDialogApi.closeDialog()\" aria-label=\"Close reveal\" >\\n            <span aria-hidden=\"true\">&times;</span>\\n        </button>\\n    </div>\\n</div>\\n<div class=\"dialog-body\">\\n\\n    <!-- Directive rc-media-upload -->\\n    <rcm-upload class=\"upload-view\" data-ng-if=\"selectedView==\\'fileUpload\\'\"\\n         rcm-template-url=\"rc-media-upload-zf.tpl.html\"\\n         rcm-multiple=\"rcDialogApi.data.upload.multiple\"\\n         rcm-accept=\"\\'{{rcDialogApi.data.upload.accept}}\\'\"\\n         rcm-pattern=\"\\'{{rcDialogApi.data.upload.pattern}}\\'\"\\n         rcm-file-name=\"{{rcDialogApi.data.upload.fileName}}\"\\n         rcm-fields=\"{{rcDialogApi.data.upload.fields}}\"\\n         rcm-min-width=\"rcDialogApi.data.upload.minWidth\"\\n         rcm-min-height=\"rcDialogApi.data.upload.minHeight\"\\n         rcm-fix-orientation=\"rcDialogApi.data.upload.fixOrientation\"\\n         rcm-crop=\"rcDialogApi.data.upload.crop\"\\n         rcm-crop-area=\"rcDialogApi.data.upload.cropArea\"\\n         rcm-load-icon=\"{{rcDialogApi.data.upload.loadIcon}}\"\\n         rcm-change=\"selectedView=false\"\\n    ></rcm-upload>\\n\\n    <div class=\"gallery-view\" data-ng-show=\"!selectedView\">\\n        <!-- Directive rc-media-gallery -->\\n        <rcm-gallery\\n             rcm-template-url=\"rc-media-gallery-zf.tpl.html\"\\n             rcm-order=\"{{rcDialogApi.data.gallery.order}}\"\\n             rcm-multiple=\"rcDialogApi.data.gallery.multiple\"\\n             rcm-selected-sources=\"rcDialogApi.data.gallery.selectedSources\"\\n             rcm-search-value=\"{{rcDialogApi.data.gallery.searchValue}}\"\\n             rcm-load-icon=\"{{rcDialogApi.data.gallery.loadIcon}}\"\\n        ></rcm-gallery>\\n    </div>\\n</div>\\n<div class=\"dialog-footer\" data-ng-show=\"selectedView || rcDialogApi.data.gallery.selectedSources.length\">\\n    <rcm-upload-controls class=\"upload-view\" data-ng-if=\"selectedView==\\'fileUpload\\'\"\\n         rcm-template-url=\"rc-media-upload-controls-zf.tpl.html\"\\n         data-ng-model=\"rcDialogApi.data.uploadFile\"\\n         rcm-save-click=\"selectedView=false\"\\n         rcm-cancel-click=\"selectedView=false\"\\n    ></rcm-upload-controls>\\n\\n    <rcm-gallery-controls class=\"gallery-view\" data-ng-if=\"!selectedView\"\\n         rcm-template-url=\"rc-media-gallery-controls-zf.tpl.html\"\\n         rcm-save-click=\"rcDialogApi.confirmDialog()\"\\n    ></rcm-gallery-controls>\\n</div>\\n</rc-media>');\n$templateCache.put('rc-media-gallery-controls-zf.tpl.html','<button class=\"button alert hollow float-left delete-file\" data-ng-click=\"deleteSources()\" data-ng-disabled=\"loading\"><rcm-translate>BTN_DELETE_FILE</rcm-translate></button>\\n<button class=\"button secondary hollow float-left deselect-all\" data-ng-click=\"deselectSources()\" data-ng-disabled=\"loading\"><rcm-translate>BTN_DESELECT_ALL</rcm-translate></button>\\n<button class=\"button primary float-right select-file\" data-ng-click=\"saveSources()\" data-ng-disabled=\"loading\"><rcm-translate>BTN_SELECT_FILE</rcm-translate></button>');\n$templateCache.put('rc-media-gallery-zf.tpl.html','<div class=\"rcm-gallery\" >\\n\\n    <alert class=\"message\" data-ng-repeat=\"alert in alerts\" type=\"alert.type\" close=\"closeAlert($index)\">{{alert.msg}}</alert>\\n\\n    <div data-ng-show=\"loading\" class=\"loading-overlay\">\\n        <div device-detector class=\"is-not-ie\">\\n            <webicon class=\"loading-icon\" icon=\"{{loadIcon}}\"></webicon>\\n        </div>\\n        <div device-detector class=\"is-ie\">\\n            <div class=\\'loading-icon ripple-css\\'><div></div><div></div></div>\\n        </div>\\n    </div>\\n\\n    <div class=\"gallery-overlay\" scrollbar=\"{autoUpdate: true}\">\\n\\n        <div class=\"gallery-sources\" data-ng-show=\"sources.length > 0\">\\n            <a data-ng-repeat=\"source in sources | orderBy:order:true\"\\n               href=\"\"\\n               class=\"thumbnail-block\"\\n               data-ng-class=\"{\\'selected\\': source.activeClass}\"\\n               data-ng-click=\"selectSource(source)\">\\n                <div class=\"thumbnail\"\\n                     data-ng-style=\"{\\'background-image\\':\\'url(\\\\\\'{{rcMediaApi.sourceUrl + source[rcMediaApi.sourceUrlKey]}}\\\\\\')\\', \\'background-repeat\\': \\'no-repeat\\', \\'background-position\\': \\'center center\\', \\'background-size\\': \\'contain\\'}\"\\n                     tooltip-placement=\"bottom\"\\n                     tooltip-html-unsafe=\"{{source.tooltipTitle}}\"\\n                ></div>\\n            </a>\\n\\n            <button type=\"button\" class=\"button secondary float-center load-more\" data-ng-show=\"loadMore\" data-ng-click=\"loadMoreSources()\" data-ng-disabled=\"loading\">\\n                <i class=\"fa fa-plus\"></i>\\n                <rcm-translate>BTN_SHOW_MORE</rcm-translate>\\n            </button>\\n        </div>\\n\\n        <div class=\"gallery-empty\" data-ng-hide=\"sources.length || loading\">\\n            <div class=\"center-content\">\\n                <h4><rcm-translate>TITLE_EMPTY_GALLERY</rcm-translate></h4>\\n                <p><rcm-translate>SUB_TITLE_EMPTY_GALLERY</rcm-translate></p>\\n            </div>\\n        </div>\\n    </div>\\n</div>');\n$templateCache.put('rc-media-upload-controls-zf.tpl.html','<div data-ng-show=\"rcMediaApi.upload.currentState==\\'selectFiles\\'\">\\n    <button class=\"button secondary hollow float-left\" data-ng-click=\"resetUploadFile(true)\"><rcm-translate>BTN_BACK_GALLERY</rcm-translate></button>\\n</div>\\n\\n<div data-ng-show=\"rcMediaApi.upload.currentState==\\'cropImage\\'\">\\n    <button class=\"button primary float-right\" data-ng-click=\"uploadFile()\"><rcm-translate>BTN_SAVE</rcm-translate></button>\\n    <button class=\"button hollow secondary float-right\" data-ng-click=\"resetUploadFile()\"><rcm-translate>BTN_CANCEL</rcm-translate></button>\\n</div>\\n\\n<div data-ng-show=\"rcMediaApi.upload.currentState==\\'progressFiles\\'\">\\n    <button class=\"button secondary float-right\" data-ng-click=\"cancelUploadFile()\"><rcm-translate>BTN_CANCEL</rcm-translate></button>\\n</div>\\n');\n$templateCache.put('rc-media-upload-zf.tpl.html','<div class=\"rcm-upload\">\\n\\n  <alert class=\"message\" data-ng-repeat=\"alert in alerts\" type=\"alert.type\" close=\"closeAlert($index)\">{{alert.msg}}</alert>\\n\\n  <div data-ng-show=\"currentState==\\'selectFiles\\'\" class=\"rcm-dropzone\"\\n       ngf-drop\\n       data-ng-model=\"file.source\"\\n       ngf-change=\"changeFiles($files, $file, $newFiles, $duplicateFiles, $invalidFiles, $event)\"\\n       ngf-drag-over-class=\"dragover\"\\n       ngf-multiple=\"multiple\"\\n       ngf-accept=\"{{accept}}\"\\n       ngf-pattern=\"{{pattern}}\"\\n       ngf-min-width=\"minWidth\"\\n       ngf-min-height=\"minHeight\"\\n       ngf-fix-orientation=\"fixOrientation\"\\n  >\\n\\n    <div class=\"select-file\" >\\n      <svg width=\"150\" height=\"150\" version=\"1.1\" id=\"rcm_upload_svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\\n           x=\"0px\" y=\"0px\" viewBox=\"0 0 23 20.5\" style=\"enable-background:new 0 0 23 20.5;\" xml:space=\"preserve\"\\n      >\\n        <g id=\"rcm_upload_svg_arrow\">\\n\\t      <line id=\"rcm_upload_svg_line\" class=\"st0\" x1=\"11.5\" y1=\"20.5\" x2=\"11.5\" y2=\"7.5\"/>\\n\\t      <polyline id=\"rcm_upload_svg_point\" class=\"st1\" points=\"8.5,10.5 11.5,7.5 14.5,10.5 \\t\"/>\\n        </g>\\n        <path\\n          id=\"rcm_upload_svg_cloud\"\\n          class=\"st1\"\\n          d=\"M15.5,15.5h3c2.2,0,4-1.8,4-4c0-2.2-1.8-4-4-4c-0.3-3.9-3.5-7-7.5-7c-4,0-7.3,3.2-7.5,7.1c-1.7,0.4-3,2-3,3.9c0,2.2,1.8,4,4,4h3\"\\n        />\\n      </svg>\\n\\n      <h3><rcm-translate>TITLE_DRAG_FILE</rcm-translate></h3>\\n      <p class=\"lead\"><rcm-translate>SUB_TITLE_DRAG_FILE</rcm-translate></p>\\n\\n      <button ngf-select\\n              data-ng-model=\"file.source\"\\n              ngf-change=\"changeFiles($files, $file, $newFiles, $duplicateFiles, $invalidFiles, $event)\"\\n              ngf-multiple=\"multiple\"\\n              ngf-accept=\"{{accept}}\"\\n              ngf-pattern=\"{{pattern}}\"\\n              ngf-min-width=\"minWidth\"\\n              ngf-min-height=\"minHeight\"\\n              type=\"button\"\\n              class=\"button primary large\"\\n      >\\n        <rcm-translate>BTN_BROWSE_FILE</rcm-translate>\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\"crop-area\" data-ng-if=\"currentState==\\'cropImage\\'\">\\n    <div>\\n      <canvas\\n              height=\"{{cropArea.height}}px\"\\n              width=\"{{cropArea.width}}px\"\\n              min-width=\"cropArea.minWidth\"\\n              min-height=\"cropArea.minHeight\"\\n              id=\"canvas\"\\n              img-cropper\\n              img-src=\"{imageData: (file.source | ngfDataUrl), fileType: file.source.type}\"\\n              img-dst=\"file.destDataUrl\"\\n              crop-width=\"cropArea.cropWidth\"\\n              crop-height=\"cropArea.cropHeight\"\\n              keep-aspect=\"cropArea.keepAspect\"\\n              keep-aspect-ratio=\"cropArea.keepAspectRatio\"\\n              enforce-crop-aspect=\"cropArea.enforceCropAspect\"\\n              touch-radius=\"cropArea.touchRadius\"\\n              color=\"{{cropArea.color}}\"\\n              color-drag=\"{{cropArea.colorDrag}}\"\\n              color-bg=\"{{cropArea.colorBg}}\"\\n              color-crop-bg=\"{{cropArea.colorCropBg}}\"\\n      >\\n      </canvas>\\n    </div>\\n  </div>\\n\\n  <div data-ng-show=\"currentState==\\'progressFiles\\'\" class=\"preview-file\" >\\n\\n    <div data-ng-show=\"loading\" class=\"loading-overlay\">\\n      <div device-detector class=\"is-not-ie\">\\n        <webicon class=\"loading-icon\" icon=\"{{loadIcon}}\"></webicon>\\n      </div>\\n      <div device-detector class=\"is-ie\">\\n        <div class=\\'loading-icon ripple-css\\'><div></div><div></div></div>\\n      </div>\\n    </div>\\n\\n    <img class=\"float-center\" width=\"300\" height=\"300\" data-ng-src=\"{{file.destDataUrl}}\" alt=\"\">\\n  </div>\\n</div>');\n$templateCache.put('rc-media-search-zf.tpl.html','<div class=\"rcm-search input-group\">\\n  <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span>\\n  <input type=\"text\" class=\"form-control\" data-ng-model=\"search\" placeholder=\"Search ...\">\\n</div>');\n$templateCache.put('rc-media-select-draggable.tpl.html','<div class=\"rcm-select\">\\n    <div class=\"preview-gallery-overlay\">\\n        <ul class=\"rcm-preview-gallery\" sv-root sv-part=\"media.sources\" sv-on-sort=\"onSortSources($item, $partFrom, $partTo, $indexFrom, $indexTo)\" data-ng-show=\"media.sources.length\">\\n            <li sv-placeholder class=\"placeholder-left image\"><div><i class=\"rcm-placeholder\"></i></div></li>\\n            <li data-ng-repeat=\"source in media.sources\" class=\"image\" sv-element>\\n                <a href=\"\" sv-handle data-ng-mouseenter=\"sourceHover=true\" ng-mouseleave=\"sourceHover=false\" data-ng-click=\"removeSource($index)\" >\\n                    <div data-ng-style=\"{\\'background-image\\':\\'url(\\\\\\'{{media.sourceUrl + source[media.sourceUrlKey]}}\\\\\\')\\', \\'background-repeat\\': \\'no-repeat\\', \\'background-position\\': \\'center center\\', \\'background-size\\': \\'contain\\'}\">\\n                        <i class=\"rcm-remove\" data-ng-show=\"sourceHover\"></i>\\n                    </div>\\n                </a>\\n            </li>\\n        </ul>\\n        <input name=\"{{name}}\" id=\"{{id}}\" type=\"{{type}}\" data-ng-model=\"media.model\" data-ng-update-hidden />\\n        <button type=\"button\" class=\"{{class}}\" data-ng-hide=\"(media.sources.length && onetime) || loading\" rcd-open=\"{{theme}}\" rcd-data=\"media\" rcd-template-url=\"rc-media-dialog-zf.tpl.html\" rcd-backdrop=\"true\" rcd-click-close=\"false\" rcd-class=\"dialog-media\" data-ng-transclude></button>\\n    </div>\\n</div>');\n$templateCache.put('rc-media-select.tpl.html','<div class=\"rcm-select\">\\n    <div class=\"preview-gallery-overlay\">\\n        <ul class=\"rcm-preview-gallery\" data-ng-show=\"media.sources.length\">\\n            <li data-ng-repeat=\"source in media.sources\" class=\"image\">\\n                <a href=\"\" data-ng-mouseenter=\"sourceHover=true\" ng-mouseleave=\"sourceHover=false\" data-ng-click=\"removeSource($index)\" >\\n                    <div data-ng-style=\"{\\'background-image\\':\\'url(\\\\\\'{{media.sourceUrl + source[media.sourceUrlKey]}}\\\\\\')\\', \\'background-repeat\\': \\'no-repeat\\', \\'background-position\\': \\'center center\\', \\'background-size\\': \\'contain\\'}\">\\n                        <i class=\"rcm-remove\" data-ng-show=\"sourceHover\"></i>\\n                    </div>\\n                </a>\\n            </li>\\n        </ul>\\n        <input name=\"{{name}}\" id=\"{{id}}\" type=\"{{type}}\" data-ng-model=\"media.model\" data-ng-update-hidden />\\n        <button type=\"button\" class=\"{{class}}\" data-ng-hide=\"(media.sources.length && onetime) || loading\" rcd-open=\"{{theme}}\" rcd-data=\"media\" rcd-template-url=\"rc-media-dialog-zf.tpl.html\" rcd-backdrop=\"true\" rcd-click-close=\"false\" rcd-class=\"dialog-media\" data-ng-transclude></button>\\n    </div>\\n</div>');}]);"],"sourceRoot":"dist"}